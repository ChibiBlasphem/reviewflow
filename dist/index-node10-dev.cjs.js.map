{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/orgsConfigs/ornikar.ts","../src/orgsConfigs/christophehurpeau.ts","../src/orgsConfigs/index.ts","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/utils/hasLabelInPR.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/orgContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/updatePr.ts","../src/pr-handlers/actions/utils/syncLabel.ts","../src/pr-handlers/actions/utils/createStatus.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/pr-handlers/actions/readCommitsAndUpdateInfos.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reopened.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/actions/updatePrBody.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/utils/random.ts","../src/appRouter.tsx","../src/index.ts"],"sourcesContent":["/* eslint-disable max-lines */\n\nimport { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'archis' | 'frontends' | 'backends'> = {\n  slackToken: process.env.ORNIKAR_SLACK_TOKEN,\n  autoAssignToCreator: true,\n  trimTitle: true,\n  ignoreRepoPattern: 'infra-*',\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z]{2,}-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      /* archi */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      rigma: `romain${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      tilap: `julien.lavinh${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'budet-b': `benjamin.budet${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      mdcarter: `maxime.dehaye${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    archis: {\n      logins: ['JulienBreux'],\n      labels: ['teams/archi'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'rigma',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'tilap',\n        'vlbr',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/archi': {\n        name: 'archi',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#FF6F00',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?(!)?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const orgsConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n};\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","export type Options =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: Options[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'autoMergeWithSkipCi',\n    label: 'Auto merge with `[skip ci]`',\n  },\n  {\n    name: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->)(.*)$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\ntype Config = Record<Options, boolean>;\n\nconst parseOptions = (content: string, defaultConfig: Config): Config => {\n  return optionsRegexps.reduce(\n    (acc, { name, regexp }) => {\n      const match = regexp.exec(content);\n      acc[name] = !match\n        ? defaultConfig[name] || false\n        : match[1] === 'x' || match[1] === 'X';\n      return acc;\n    },\n    {} as any,\n  ) as Config;\n};\n\ninterface ParseBodyResultWithoutOptions {\n  content: string;\n  ending: string;\n  reviewflowContentCol: string;\n  reviewflowContentColPrefix: string;\n  reviewflowContentColSuffix: string;\n}\n\ninterface ParseBodyResultWithOptions extends ParseBodyResultWithoutOptions {\n  options: Config;\n  breakingChanges: string;\n}\n\nexport const parseBody = (\n  description: string,\n): ParseBodyResultWithoutOptions | null => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol, reviewflowContent, ending] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      ending,\n      reviewflowContentCol: reviewflowContent,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  };\n};\n\nexport const parseBodyWithOptions = (\n  description: string,\n  defaultConfig: Config,\n): ParseBodyResultWithOptions | null => {\n  const parsedBody = parseBody(description);\n  if (parsedBody === null) return null;\n\n  // console.log(parsedBody.reviewflowContentCol);\n  let breakingChanges = parsedBody.reviewflowContentCol.replace(\n    /^.*#### Commits Notes:(.*)#### Options:.*$/s,\n    '$1',\n  );\n\n  if (breakingChanges === parsedBody.reviewflowContentCol) {\n    breakingChanges = '';\n  } else {\n    breakingChanges = breakingChanges.trim();\n  }\n\n  return {\n    ...parsedBody,\n    options: parseOptions(parsedBody.reviewflowContentCol, defaultConfig),\n    breakingChanges,\n  };\n};\n","import { PullsGetResponse } from '@octokit/rest';\nimport { LabelResponse } from '../../../context/initRepoLabels';\n\nexport default function hasLabelInPR(\n  prLabels: PullsGetResponse['labels'],\n  label: LabelResponse,\n): boolean {\n  if (!label) return false;\n  return prLabels.some((l): boolean => l.id === label.id);\n}\n","/* eslint-disable max-lines */\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBodyWithOptions } from './utils/parseBody';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nconst hasFailedStatusOrChecks = async (\n  pr: PullsGetResponse,\n  context: Context<any>,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  pr: PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n\n  if (!hasLabelInPR(prLabels, autoMergeLabel)) {\n    context.log.debug('automerge not possible: no label', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (pr.state !== 'open') {\n    context.log.debug('automerge not possible: pr is not opened', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && lockedPr.number !== pr.number) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info('automerge not possible: already merged pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${\n      pr.mergeable_state\n    }`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        if (pr.body.includes('<!-- renovate-rebase -->')) {\n          if (pr.body.includes('[x] <!-- renovate-rebase -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- renovate-rebase -->',\n            '[x] <!-- renovate-rebase -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${\n          pr.mergeable_state\n        }`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${\n        pr.mergeable_state\n      }`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n\n    const parsedBody = parseBodyWithOptions(\n      pr.body,\n      repoContext.config.prDefaultOptions,\n    );\n    const options =\n      (parsedBody && parsedBody.options) || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: `${pr.title}${\n        options.autoMergeWithSkipCi ? ' [skip ci]' : ''\n      } (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = `Generated by review-flow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor // ||\n      // TODO: description is never updated\n      // existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","export const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { getKeys } from './utils';\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  postMessage: (githubLogin: string, text: string) => Promise<void>;\n  prLink: <T extends Webhooks.WebhookPayloadPullRequest>(\n    pr: PullsGetResponse,\n    context: Context<T>,\n  ) => string;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<TeamSlack> => {\n  if (!config.slackToken) {\n    return {\n      mention: (): string => '',\n      postMessage: (): Promise<void> => Promise.resolve(),\n      prLink: (): string => '',\n    };\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackClient = new WebClient(config.slackToken);\n  const allUsers: any = await slackClient.users.list({ limit: 200 });\n  const members: [string, { member: any; im: any }][] = Object.values(\n    githubLoginToSlackEmail,\n  )\n    .map((email) => {\n      const member = allUsers.members.find(\n        (user: any) => user.profile.email === email,\n      );\n      if (!member) {\n        console.warn(`Could not find user ${email}`);\n        return;\n      }\n      return [email, { member, im: undefined }] as [\n        string,\n        { member: any; im: any }\n      ];\n    })\n    .filter(ExcludesFalsy);\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string): string => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (githubLogin: string, text: string): Promise<void> => {\n      context.log.debug('send slack', { githubLogin, text });\n      if (process.env.DRY_RUN) return;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return;\n      await slackClient.chat.postMessage({\n        username: process.env.REVIEWFLOW_NAME,\n        channel: user.im.id,\n        text,\n      });\n    },\n    prLink: <T extends Webhooks.WebhookPayloadPullRequest>(\n      pr: PullsGetResponse,\n      context: Context<T>,\n    ): string => {\n      return `<${pr.html_url}|${context.payload.repository.name}#${pr.number}>`;\n    },\n  };\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface OrgContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n}\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nconst initTeamContext = async (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const slackPromise = initTeamSlack(context, config);\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  return {\n    config,\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    getTeamsForLogin: (githubLogin) =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst orgContextsPromise = new Map();\nconst orgContexts = new Map();\n\nexport const obtainOrgContext = (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const owner = context.payload.repository.owner;\n\n  const existingTeamContext = orgContexts.get(owner.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = orgContextsPromise.get(owner.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(context, config);\n  orgContextsPromise.set(owner.login, promise);\n\n  return promise.then((orgContext) => {\n    orgContextsPromise.delete(owner.login);\n    orgContexts.set(owner.login, orgContext);\n    return orgContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport minimatch from 'minimatch';\nimport { orgsConfigs, Config } from '../orgsConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainOrgContext, OrgContext } from './orgContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(context: Context<any>, prNumber: number): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport type RepoContext<GroupNames extends string = any> = OrgContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const orgContext = await obtainOrgContext(context, config);\n  const repoContext = Object.create(orgContext);\n\n  const [labels] = await Promise.all([initRepoLabels(context, config)]);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      console.log('lock: try to lock pr', { prIdOrIds });\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        console.log('lock: lock acquired', { prIdOrIds });\n        try {\n          await callback();\n        } catch (err) {\n          console.log('lock: release pr (with error)', { prIdOrIds });\n          release();\n          reject(err);\n          return;\n        }\n        console.log('lock: release pr', { prIdOrIds });\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', () => {\n        return lockPROrPRS(String(pr.id), async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(prResult.data, context, repoContext);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', pr);\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (context, prNumber: number | string): void => {\n      context.log('merge lock: remove', { prNumber });\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log('merge lock: next', { lockMergePr });\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const obtainRepoContext = (\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  const owner = repo.owner;\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const orgConfig = orgsConfigs[owner.login];\n\n  if (!orgConfig) {\n    console.warn(owner.login, Object.keys(orgsConfigs));\n    return null;\n  }\n\n  if (\n    (repo.name === 'reviewflow-test' &&\n      process.env.REVIEWFLOW_NAME !== 'reviewflow-test') ||\n    (orgConfig.ignoreRepoPattern &&\n      minimatch(repo.name, orgConfig.ignoreRepoPattern))\n  ) {\n    console.warn('repo ignored', { owner: repo.owner.login, name: repo.name });\n    return null;\n  }\n\n  const promise = initRepoContext(context, orgConfig);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { obtainRepoContext, RepoContext } from '../context/repoContext';\n\nexport type PRHandler<T = any, Result = void, FourthArgument = never> = (\n  pr: PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n  fourthArgument?: FourthArgument,\n) => Promise<Result>;\n\nexport type CallbackWithPRAndRepoContext = (\n  pr: PullsGetResponse,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  callback: CallbackWithPRAndRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  repoContext.lockPROrPRS(String(context.payload.pull_request.id), async () => {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: context.payload.pull_request.number,\n      }),\n    );\n\n    await callback(prResult.data, repoContext);\n  });\n};\n\ntype CallbackPRAndContextAndRepoContext<T> = (\n  pr: PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  callback: CallbackPRAndContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(context, (pr, repoContext) =>\n    callback(pr, context, repoContext),\n  );\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestsChange = <T>(\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(prs.map((pr) => String(pr.id)), () =>\n    callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PRHandler } from '../utils';\n\nexport const autoAssignPRToCreator: PRHandler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (pr, context, repoContext) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    context.issue({\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z]+)[- ](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/i, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../orgsConfigs/types';\nimport { parseBodyWithOptions, parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  body: string;\n  options?: Record<Options, boolean>;\n}\n\nexport const updateBody = (\n  body: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n  updateOptions?: Partial<Record<Options, boolean>>,\n): UpdatedBodyWithOptions => {\n  const parsed = parseBodyWithOptions(body, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return { body };\n  }\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  const infosAndCommitNotesParagraph = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^\\s*(?:(#### Infos:.*)?(#### Commits Notes:.*)?#### Options:)?.*$/s,\n    // eslint-disable-next-line no-nested-ternary\n    !infos\n      ? '$1$2'\n      : infos.length !== 0\n      ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n$2`\n      : '$2',\n  );\n\n  const updatedOptions = !updateOptions\n    ? options\n    : { ...options, ...updateOptions };\n\n  return {\n    options: updatedOptions,\n    body: `${content}${reviewflowContentColPrefix}\n${infosAndCommitNotesParagraph}#### Options:\n${toMarkdownOptions(updatedOptions)}\n${reviewflowContentColSuffix}${ending || ''}`,\n  };\n};\n\nexport const updateBodyCommitsNotes = (\n  body: string,\n  commitNotes?: string,\n): string => {\n  const parsed = parseBody(body);\n  if (!parsed) {\n    console.info('could not parse body');\n    return body;\n  }\n\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  } = parsed;\n\n  const reviewflowContentColReplaced = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /(?:#### Commits Notes:.*)?(#### Options:)/s,\n    // eslint-disable-next-line no-nested-ternary\n    !commitNotes ? '$1' : `#### Commits Notes:\\n\\n${commitNotes}\\n\\n$1`,\n  );\n\n  return `${content}${reviewflowContentColPrefix}${reviewflowContentColReplaced}${reviewflowContentColSuffix}${ending ||\n    ''}`;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\n\ninterface UpdatePr {\n  title?: string;\n  body?: string;\n}\n\nexport const updatePrIfNeeded = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  update: UpdatePr,\n): Promise<void> => {\n  const hasDiffInTitle = update.title && pr.title !== update.title;\n  const hasDiffInBody = update.body && pr.body !== update.body;\n\n  if (hasDiffInTitle || hasDiffInBody) {\n    const diff: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      diff.title = update.title;\n      pr.title = update.title as string;\n    }\n    if (hasDiffInBody) {\n      diff.body = update.body;\n      pr.body = update.body as string;\n    }\n\n    await context.github.issues.update(context.issue(diff));\n  }\n};\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport hasLabelInPR from './hasLabelInPR';\n\ninterface SyncLabelOptions {\n  onRemove?: () => void | Promise<void>;\n  onAdd?: (prLabels: LabelResponse[]) => void | Promise<void>;\n}\n\nexport default async function syncLabel<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<T>,\n  shouldHaveLabel: boolean,\n  label: LabelResponse,\n  prHasLabel = hasLabelInPR(pr.labels, label),\n  { onRemove, onAdd }: SyncLabelOptions = {},\n): Promise<void> {\n  if (prHasLabel && !shouldHaveLabel) {\n    await context.github.issues.removeLabel(\n      context.issue({ name: label.name }),\n    );\n    if (onRemove) await onRemove();\n  }\n  if (shouldHaveLabel && !prHasLabel) {\n    const response = await context.github.issues.addLabels(\n      context.issue({ labels: [label.name] }),\n    );\n    if (onAdd) await onAdd(response.data);\n  }\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\n\nexport default async function createStatus<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  name: string,\n  sha: string,\n  type: 'failure' | 'success',\n  description: string,\n  url?: string,\n): Promise<void> {\n  await context.github.repos.createStatus(\n    context.repo({\n      context:\n        name === ''\n          ? process.env.REVIEWFLOW_NAME\n          : `${process.env.REVIEWFLOW_NAME}/${name}`,\n      sha,\n      state: type,\n      description,\n      target_url: url,\n    }),\n  );\n}\n","/* eslint-disable max-lines */\nimport Webhooks from '@octokit/webhooks';\nimport { StatusError, StatusInfo } from '../../orgsConfigs/types';\nimport { PRHandler } from '../utils';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport { updatePrIfNeeded } from './updatePr';\nimport hasLabelInPR from './utils/hasLabelInPR';\nimport syncLabel from './utils/syncLabel';\nimport createStatus from './utils/createStatus';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const editOpenedPR: PRHandler<\n  Webhooks.WebhookPayloadPullRequest,\n  { skipAutoMerge: boolean },\n  string\n> = async (pr, context, repoContext, previousSha) => {\n  const repo = context.payload.repository;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return { skipAutoMerge: true };\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check): boolean => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(\n        ({ name, error, info }): Promise<void> =>\n          createStatus(\n            context,\n            name,\n            pr.head.sha,\n            error ? 'failure' : 'success',\n            error ? error.title : (info as StatusInfo).title,\n            error ? undefined : (info as StatusInfo).url,\n          ),\n      ),\n      ...(previousSha\n        ? statuses\n            .map(\n              ({ name, error, info }): Promise<void> | undefined =>\n                error\n                  ? createStatus(\n                      context,\n                      name,\n                      previousSha,\n                      'success',\n                      'New commits have been pushed',\n                    )\n                  : undefined,\n            )\n            .filter(ExcludesFalsy)\n        : []),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck && previousSha && errorRule\n        ? createStatus(\n            context,\n            'lint-pr',\n            previousSha,\n            'success',\n            'New commits have been pushed',\n          )\n        : undefined,\n      !hasLintPrCheck &&\n        createStatus(\n          context,\n          'lint-pr',\n          pr.head.sha,\n          errorRule ? 'failure' : 'success',\n          errorRule ? errorRule.error.title : '✓ Your PR is valid',\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = hasLabelInPR(pr.labels, featureBranchLabel);\n  const prHasSkipCiLabel = hasLabelInPR(pr.labels, skipCiLabel);\n  const prHasAutoMergeLabel = hasLabelInPR(pr.labels, automergeLabel);\n\n  const defaultOptions = {\n    ...repoContext.config.prDefaultOptions,\n    featureBranch: prHasFeatureBranchLabel,\n    autoMergeWithSkipCi: prHasSkipCiLabel,\n    autoMerge: prHasAutoMergeLabel,\n  };\n\n  const { body, options } = updateBody(pr.body, defaultOptions, statuses\n    .filter((status) => status.info && status.info.inBody)\n    .map((status) => status.info) as StatusInfo[]);\n  await updatePrIfNeeded(pr, context, repoContext, { title, body });\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    await Promise.all([\n      featureBranchLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.featureBranch,\n          featureBranchLabel,\n          prHasFeatureBranchLabel,\n        ),\n      skipCiLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMergeWithSkipCi,\n          skipCiLabel,\n          prHasSkipCiLabel,\n        ),\n      automergeLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMerge,\n          automergeLabel,\n          prHasAutoMergeLabel,\n          {\n            onAdd: async (prLabels) => {\n              await autoMergeIfPossible(pr, context, repoContext, prLabels);\n            },\n            onRemove: async () => {\n              await repoContext.removePrFromAutomergeQueue(context, pr.number);\n            },\n          },\n        ),\n    ]);\n\n    if (!automergeLabel) {\n      return { skipAutoMerge: true };\n    }\n  }\n\n  return { skipAutoMerge: false };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\nimport createStatus from './utils/createStatus';\n\nconst addStatusCheck = async function<\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n  previousSha?: string,\n): Promise<void> {\n  const hasPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check) => check.name === process.env.REVIEWFLOW_NAME,\n  );\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else if (previousSha && state === 'failure') {\n    await Promise.all([\n      createStatus(\n        context,\n        '',\n        previousSha,\n        'success',\n        'New commits have been pushed',\n      ),\n      createStatus(context, '', pr.head.sha, state, description),\n    ]);\n  } else {\n    await createStatus(context, '', pr.head.sha, state, description);\n  }\n};\n\nexport const updateStatusCheckFromLabels = (\n  pr: PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  labels: LabelResponse[] = pr.labels || [],\n  previousSha?: string,\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l && l.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  const createFailedStatusCheck = (description: string): Promise<void> =>\n    addStatusCheck(\n      pr,\n      context,\n      {\n        state: 'failure',\n        description,\n      },\n      previousSha,\n    );\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(\n    pr,\n    context,\n    {\n      state: 'success',\n      description: '✓ PR ready to merge !',\n    },\n    previousSha,\n  );\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../orgsConfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends Webhooks.WebhookPayloadPullRequest,\n  GroupNames extends string = any\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n          toAddNames.add(label.name);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN) return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          context.issue({\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          try {\n            const result = await context.github.issues.removeLabel(\n              context.issue({\n                name: toDeleteName,\n              }),\n            );\n            prLabels = result.data;\n          } catch (err) {\n            context.log.warn('error removing label', {\n              err: err && err.message,\n            });\n          }\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        context.issue({\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(pr, context, repoContext, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nexport const autoApproveAndAutoMerge = async (\n  pr: PullsGetResponse,\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = repoContext.labels['code/approved'];\n  if (hasLabelInPR(pr.labels, codeApprovedLabel)) {\n    await context.github.pulls.createReview(\n      context.issue({ event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(pr, context, repoContext);\n    return true;\n  }\n\n  return false;\n};\n","import Webhooks from '@octokit/webhooks';\nimport parse from '@commitlint/parse';\nimport { PRHandler } from '../utils';\nimport syncLabel from './utils/syncLabel';\nimport { updateBodyCommitsNotes } from './utils/updateBody';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const readCommitsAndUpdateInfos: PRHandler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (pr, context, repoContext) => {\n  // tmp.data[0].sha\n  // tmp.data[0].commit.message\n\n  const commits = await context.github.paginate(\n    context.github.pulls.listCommits(\n      context.issue({\n        // A custom page size up to 100. Default is 30.\n        per_page: 100,\n      }),\n    ),\n    (res) => res.data,\n  );\n\n  const conventionalCommits = await Promise.all(\n    commits.map((c) => parse(c.commit.message)),\n  );\n\n  const breakingChangesCommits: any = conventionalCommits.reduce(\n    (acc, c, index) => {\n      const breakingChangesNotes = c.notes.filter(\n        (note: any) => note.title === 'BREAKING CHANGE',\n      );\n      if (breakingChangesNotes.length !== 0) {\n        acc.push({ commit: commits[index], breakingChangesNotes });\n      }\n\n      return acc;\n    },\n    [],\n  );\n\n  const breakingChangesLabel = repoContext.labels['breaking-changes'];\n  const newBody = updateBodyCommitsNotes(\n    pr.body,\n    breakingChangesCommits.length === 0\n      ? ''\n      : `Breaking Changes:\\n${breakingChangesCommits\n          .map(({ commit, breakingChangesNotes }: any) =>\n            breakingChangesNotes.map(\n              (note: any) =>\n                `- ${note.text.replace('\\n', ' ')} (${commit.sha})`,\n            ),\n          )\n          .join('')}`,\n  );\n\n  await Promise.all([\n    syncLabel(\n      pr,\n      context,\n      breakingChangesCommits.length !== 0,\n      breakingChangesLabel,\n    ),\n    updatePrIfNeeded(pr, context, repoContext, { body: newBody }),\n  ]);\n\n  // TODO auto update ! in front of : to signal a breaking change when https://github.com/conventional-changelog/commitlint/issues/658 is closed\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function opened(app: Application): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const fromRenovate = pr.head.ref.startsWith('renovate/');\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(pr, context, repoContext),\n          editOpenedPR(pr, context, repoContext).then(() => {\n            return readCommitsAndUpdateInfos(pr, context, repoContext);\n          }),\n          fromRenovate\n            ? autoApproveAndAutoMerge(pr, context, repoContext).then(\n                async (approved: boolean): Promise<void> => {\n                  if (!approved) {\n                    await updateReviewStatus(pr, context, repoContext, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(pr, context, repoContext, 'dev', {\n                add: ['needsReview'],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBodyWithOptions } from './actions/utils/parseBody';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id &&\n            parseBodyWithOptions(pr.body, repoContext.config.prDefaultOptions);\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            parsedBody && parsedBody.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            updateReviewStatus(pr, context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.reopened',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        await Promise.all([\n          updateReviewStatus(pr, context, repoContext, 'dev', {\n            add: ['needsReview'],\n            remove: ['approved'],\n          }),\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(app: Application): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        // ignore if sender is self (dismissed review rerequest review)\n        if (sender.type === 'Bot') return;\n\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup &&\n              review.state === 'REQUEST_CHANGES' &&\n              // In case this is a rerequest for review\n              review.user.login !== reviewer.login,\n          );\n\n          if (!hasChangesRequestedInReviews) {\n            await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n              add: ['needsReview', !shouldWait && 'requested'],\n              remove: ['approved', 'changesRequested'],\n            });\n          }\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:eyes: ${repoContext.slack.mention(\n              sender.login,\n            )} requests your review on ${repoContext.slack.prLink(\n              pr,\n              context,\n            )} !\\n> ${pr.title}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequestRemoved(app: Application): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const hasApprovedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'APPROVED',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n            ],\n          });\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:skull_and_crossbones: ${repoContext.slack.mention(\n              sender.login,\n            )} removed the request for your review on ${repoContext.slack.prLink(\n              pr,\n              context,\n            )}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewSubmitted(app: Application): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const { user: reviewer, state } = (context.payload as any).review;\n        if (pr.user.login === reviewer.login) return;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        let merged;\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n              // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n              // includesWaitForGroups: true,\n            },\n          );\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            state === 'approved';\n\n          const newLabels = await updateReviewStatus(\n            pr,\n            context,\n            repoContext,\n            reviewerGroup,\n            {\n              add: [\n                approved && 'approved',\n                state === 'changes_requested' && 'changesRequested',\n              ],\n              remove: [\n                approved && 'needsReview',\n                !(\n                  hasRequestedReviewsForGroup || state === 'changes_requested'\n                ) && 'requested',\n                state === 'approved' &&\n                  !hasChangesRequestedInReviews &&\n                  'changesRequested',\n                state === 'changes_requested' && 'approved',\n              ],\n            },\n          );\n\n          if (approved && !hasChangesRequestedInReviews) {\n            merged = await autoMergeIfPossible(\n              pr,\n              context,\n              repoContext,\n              newLabels,\n            );\n          }\n        }\n\n        const mention = repoContext.slack.mention(reviewer.login);\n        const prUrl = repoContext.slack.prLink(pr, context);\n\n        const message = (() => {\n          if (state === 'changes_requested') {\n            return `:x: ${mention} requests changes on ${prUrl}`;\n          }\n          if (state === 'approved') {\n            return `:clap: :white_check_mark: ${mention} approves ${prUrl}${\n              merged ? ' and PR is merged :tada:' : ''\n            }`;\n          }\n          return `:speech_balloon: ${mention} commented on ${prUrl}`;\n        })();\n\n        repoContext.slack.postMessage(pr.user.login, message);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewDismissed(app: Application): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: ['needsReview', 'requested'],\n            remove: [\n              !hasChangesRequestedInReviews && 'changesRequested',\n              'approved',\n            ],\n          });\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              pr.user.login,\n              `:skull: ${repoContext.slack.mention(\n                reviewer.login,\n              )} dismissed his review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            );\n          } else {\n            repoContext.slack.postMessage(\n              reviewer.login,\n              `:skull: ${repoContext.slack.mention(\n                sender.login,\n              )} dismissed your review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function synchronize(app: Application): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n        const previousSha = (context.payload as any).before as string;\n\n        await Promise.all([\n          editOpenedPR(pr, context, repoContext, previousSha),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(\n            pr,\n            context,\n            repoContext,\n            pr.labels,\n            previousSha,\n          ),\n\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n\n        // call autoMergeIfPossible to re-add to the queue when push is fixed\n        await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(app: Application): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        if (\n          sender.type === 'Bot' &&\n          sender.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n        ) {\n          return;\n        }\n\n        const { skipAutoMerge } = await editOpenedPR(pr, context, repoContext);\n        if (!skipAutoMerge) await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateBody } from './utils/updateBody';\nimport { Options } from './utils/prOptions';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const updatePrBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  updateOptions: Partial<Record<Options, boolean>>,\n): Promise<void> => {\n  const { body } = updateBody(\n    pr.body,\n    repoContext.config.prDefaultOptions,\n    undefined,\n    updateOptions,\n  );\n\n  await updatePrIfNeeded(pr, context, repoContext, { body });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrBody } from './actions/updatePrBody';\nimport hasLabelInPR from './actions/utils/hasLabelInPR';\n\nexport default function labelsChanged(app: Application): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context: Context<Webhooks.WebhookPayloadPullRequest>) => {\n      const sender = context.payload.sender;\n      const fromRenovate =\n        sender.type === 'Bot' && sender.login === 'renovate[bot]';\n      context.payload.pull_request.head.ref.startsWith('renovate/');\n\n      if (sender.type === 'Bot' && !fromRenovate) {\n        return;\n      }\n\n      await handlerPullRequestChange(context, async (pr, repoContext) => {\n        const label = (context.payload as any).label;\n        if (fromRenovate) {\n          const codeApprovedLabel = repoContext.labels['code/approved'];\n          const autoMergeLabel = repoContext.labels['merge/automerge'];\n          const autoMergeSkipCiLabel = repoContext.labels['merge/skip-ci'];\n          if (context.payload.action === 'labeled') {\n            if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n              // const { data: reviews } = await context.github.pulls.listReviews(\n              //   context.issue({ per_page: 1 }),\n              // );\n              // if (reviews.length !== 0) {\n              await context.github.pulls.createReview(\n                context.issue({ event: 'APPROVE' }),\n              );\n              if (autoMergeSkipCiLabel) {\n                await context.github.issues.addLabels(\n                  context.issue({ labels: [autoMergeSkipCiLabel.name] }),\n                );\n              }\n              await updateStatusCheckFromLabels(pr, context, repoContext);\n              await updatePrBody(pr, context, repoContext, {\n                autoMergeWithSkipCi: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                autoMerge: hasLabelInPR(pr.labels, autoMergeLabel)\n                  ? true\n                  : repoContext.config.prDefaultOptions.autoMerge,\n              });\n              // }\n            } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n              await updatePrBody(pr, context, repoContext, {\n                autoMerge: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                autoMergeWithSkipCi: hasLabelInPR(pr.labels, codeApprovedLabel)\n                  ? true\n                  : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n              });\n            }\n            await autoMergeIfPossible(pr, context, repoContext);\n          }\n          return;\n        }\n\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              context.issue({ name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              context.issue({ labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(pr, context, repoContext);\n\n        const featureBranchLabel = repoContext.labels['feature-branch'];\n        const automergeLabel = repoContext.labels['merge/automerge'];\n        const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n        const option = (() => {\n          if (featureBranchLabel && label.id === automergeLabel.id)\n            return 'featureBranch';\n          if (automergeLabel && label.id === automergeLabel.id)\n            return 'autoMerge';\n          if (skipCiLabel && label.id === skipCiLabel.id)\n            return 'autoMergeWithSkipCi';\n          return null;\n        })();\n\n        if (option) {\n          await updatePrBody(pr, context, repoContext, {\n            [option]: context.payload.action === 'labeled',\n          });\n        } else if (context.payload.action === 'labeled') {\n          if (\n            repoContext.labels['merge/automerge'] &&\n            label.id === repoContext.labels['merge/automerge'].id\n          ) {\n            await autoMergeIfPossible(pr, context, repoContext);\n          }\n        }\n      });\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(app: Application): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(app: Application): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(app: Application): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (isSameBranch(context, lockedPr)) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","// import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { MongoConnection } from 'liwi-mongo';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const config = new Map([\n    ['host', process.env.MONGO_HOST || 'localhost'],\n    ['port', process.env.MONGO_PORT || '27017'],\n    ['database', process.env.MONGO_DB as string],\n  ]);\n  if (process.env.MONGO_USER) {\n    config.set('user', process.env.MONGO_USER);\n    config.set('password', process.env.MONGO_PASSWORD as string);\n  }\n  const connection = new MongoConnection(config);\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  // return { connection, prEvents };\n  return { connection };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>{children}</body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { randomBytes } from 'crypto';\nimport { promisify } from 'util';\n\nconst randomBytesPromisified = promisify(randomBytes);\n\nexport async function randomBase64(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('base64');\n}\n\nexport async function randomHex(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('hex');\n}\n","/* eslint-disable max-lines */\n\nimport { promisify } from 'util';\nimport Octokit from '@octokit/rest';\nimport { Request, Response } from 'express';\nimport cookieParser from 'cookie-parser';\nimport { sign, verify } from 'jsonwebtoken';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { Application } from 'probot';\nimport { MongoStores } from './mongo';\nimport Layout from './views/Layout';\nimport * as githubAuth from './auth/github';\nimport { randomHex } from './utils/random';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request, strategy: string) => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/${strategy}/login-response`;\n};\n\ninterface AuthInfo {\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nexport default async function appRouter(\n  app: Application,\n  mongoStuff: MongoStores,\n): Promise<void> {\n  const router = app.route('/app');\n  const api = await app.auth();\n  router.use(cookieParser());\n\n  router.get('/', (req, res) => {\n    res.redirect('/gh');\n  });\n\n  router.get('/gh', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a href={`/gh/repository/${repo.owner.login}/${repo.name}`}>\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          {data.length === 100 && (\n            <div>We currently have a limit to 100 repositories</div>\n          )}\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/gh/login', async (req: Request, res: Response) => {\n    const strategy = 'gh';\n    if (await readAuthCookie(req, strategy)) {\n      return res.redirect('/gh');\n    }\n\n    const state = await randomHex(8);\n    res.cookie(`auth_${strategy}_${state}`, strategy, {\n      maxAge: 10 * 60 * 1000,\n      httpOnly: true,\n      secure,\n    });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req, strategy),\n      scope: 'read:user,repo',\n      state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/gh/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code = req.query.code;\n    const state = req.query.state;\n    const cookieName = `auth_${strategy}_${state}`;\n    const cookie = req.cookies && req.cookies[cookieName];\n    if (!cookie) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        '<html><body>No cookie for this state. <a href=\"/gh/login\">Retry ?</a></body></html>',\n      );\n      return;\n    }\n    res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req, strategy),\n    });\n\n    if (!result) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/gh/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const login = user.data.login;\n\n    const token = await signPromisified(\n      { login, accessToken, time: Date.now() },\n      AUTH_SECRET_KEY,\n      {\n        algorithm: 'HS512',\n        audience: req.headers['user-agent'],\n        expiresIn: '10 days',\n      },\n    );\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/gh');\n  });\n\n  router.get('/gh/repository/:owner/:repository', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      return res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n    }\n\n    if (!data.permissions.admin) {\n      return res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME} {\"isn't\"} installed on this repo. Go\n              to{' '}\n              <a\n                href={`https://github.com/apps/${\n                  process.env.REVIEWFLOW_NAME\n                }/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reopenedHandler from './pr-handlers/reopened';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchromizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application) => {\n  const mongoStores = mongoInit();\n  appRouter(app, mongoStores);\n\n  openedHandler(app);\n  closedHandler(app);\n  reopenedHandler(app);\n  reviewRequestedHandler(app);\n  reviewRequestRemovedHandler(app);\n\n  // app.on('pull_request.closed', async context => {\n\n  // });\n\n  // app.on('pull_request.reopened', async context => {\n\n  // });\n\n  reviewSubmittedHandler(app);\n  reviewDismissedHandler(app);\n  labelsChanged(app);\n  synchromizeHandler(app);\n  editedHandler(app);\n\n  checkrunCompleted(app);\n  checksuiteCompleted(app);\n  status(app);\n});\n"],"names":["config","slackToken","process","env","ORNIKAR_SLACK_TOKEN","autoAssignToCreator","trimTitle","ignoreRepoPattern","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","title","regExp","error","summary","bot","status","statusInfoFromMatch","match","issue","inBody","url","groups","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","abarreir","arthurflachs","rigma","damienorny","darame07","Pixy","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","tilap","vlbr","mdcarter","design","jperriere","CoralineColasse","teams","archis","logins","labels","backends","frontends","waitForGroups","list","name","color","review","ci","inProgress","succeeded","failed","needsReview","requested","changesRequested","approved","orgsConfigs","ornikar","options","optionsRegexps","map","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","defaultConfig","reduce","acc","exec","parseBody","description","reviewFlowCol","reviewflowContent","ending","reviewFlowColMatch","reviewflowContentCol","reviewflowContentColPrefix","reviewflowContentColSuffix","parseBodyWithOptions","parsedBody","breakingChanges","replace","trim","hasLabelInPR","prLabels","some","l","id","hasFailedStatusOrChecks","pr","context","checks","github","listForRef","repo","ref","head","sha","per_page","failedChecks","data","check_runs","filter","check","conclusion","length","log","info","combinedStatus","repos","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossible","repoContext","autoMergeLabel","debug","prId","prNumber","number","removePrFromAutomergeQueue","createMergeLockPrFromPr","branch","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","pushAutomergeQueue","addMergeLockPr","mergeable","undefined","prResult","pulls","get","pull_number","merged","mergeable_state","reschedule","startsWith","body","includes","renovateRebaseBody","issues","update","base","merge","owner","login","mergeResult","merge_method","commit_title","commit_message","Boolean","err","message","initRepoLabels","listLabelsForRepo","finalLabels","labelKey","labelConfig","Object","entries","labelColor","slice","existingLabel","find","result","createLabel","current_name","updateLabel","getKeys","o","keys","ExcludesFalsy","initTeamSlack","mention","postMessage","Promise","resolve","prLink","githubLoginToSlackEmail","groupName","assign","slackClient","WebClient","allUsers","users","limit","members","values","email","member","user","profile","console","warn","im","open","channel","membersMap","Map","getUserFromGithubLogin","githubLogin","text","DRY_RUN","chat","username","REVIEWFLOW_NAME","html_url","payload","repository","initTeamContext","slackPromise","githubLoginToGroup","forEach","set","githubLoginToTeams","teamName","push","getReviewerGroups","githubLogins","Set","getReviewerGroup","getTeamsForLogin","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","group","slack","orgContextsPromise","orgContexts","obtainOrgContext","existingTeamContext","existingPromise","promise","then","orgContext","delete","initRepoContext","create","all","reviewGroupNames","needsReviewLabelIds","key","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lock","Lock","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","callback","reject","createReleaseCallback","release","Error","setTimeout","String","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","value","p","repoContextsPromise","repoContexts","obtainRepoContext","existingRepoContext","orgConfig","minimatch","handlerPullRequestChange","pull_request","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","type","addAssignees","cleanTitle","s","arg1","arg2","toUpperCase","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","updateBody","updateOptions","parsed","infosAndCommitNotesParagraph","updatedOptions","updateBodyCommitsNotes","commitNotes","reviewflowContentColReplaced","updatePrIfNeeded","hasDiffInTitle","hasDiffInBody","diff","syncLabel","shouldHaveLabel","prHasLabel","onRemove","onAdd","removeLabel","response","addLabels","createStatus","target_url","editOpenedPR","previousSha","skipAutoMerge","isPrFromBot","errorRule","rule","date","Date","toISOString","hasLintPrCheck","head_sha","started_at","completed_at","output","featureBranchLabel","automergeLabel","skipCiLabel","prHasFeatureBranchLabel","prHasSkipCiLabel","prHasAutoMergeLabel","defaultOptions","addStatusCheck","hasPrCheck","created_at","updateStatusCheckFromLabels","createFailedStatusCheck","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","existing","team","size","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","readCommitsAndUpdateInfos","commits","paginate","listCommits","res","conventionalCommits","c","parse","commit","breakingChangesCommits","index","breakingChangesNotes","notes","note","breakingChangesLabel","newBody","opened","app","on","fromRenovate","closed","git","deleteRef","catch","reviewRequested","sender","reviewer","requested_reviewer","reviews","listReviews","hasChangesRequestedInReviews","reviewRequestRemoved","hasRequestedReviewsForGroup","hasApprovedInReviews","reviewSubmitted","newLabels","prUrl","reviewDismissed","synchronize","before","edited","updatePrBody","labelsChanged","autoMergeSkipCiLabel","action","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","MONGO_DB","init","MONGO_HOST","MONGO_PORT","MONGO_USER","MONGO_PASSWORD","connection","MongoConnection","Layout","lang","NAME","children","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","client","secret","auth","tokenHost","tokenPath","authorizePath","randomBytesPromisified","promisify","randomBytes","randomHex","buffer","toString","AUTH_SECRET_KEY","signPromisified","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","strategy","host","hostname","PORT","readAuthCookie","cookie","cookies","algorithm","audience","headers","appRouter","router","route","api","use","cookieParser","redirect","authInfo","octokit","Octokit","accessToken","send","renderToStaticMarkup","maxAge","httpOnly","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error_description","code","cookieName","clearCookie","getToken","access_token","getAuthenticated","token","time","now","expiresIn","params","permissions","admin","data2","apps","getRepoInstallation","Probot","run","mongoStores","mongoInit","openedHandler","closedHandler","reopenedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchromizeHandler","editedHandler"],"mappings":"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"}