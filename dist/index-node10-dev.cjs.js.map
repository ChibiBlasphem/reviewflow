{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/orgsConfigs/ornikar.ts","../src/orgsConfigs/christophehurpeau.ts","../src/orgsConfigs/index.ts","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/utils/hasLabelInPR.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/orgContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/updatePr.ts","../src/pr-handlers/actions/utils/syncLabel.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/pr-handlers/actions/readCommitsAndUpdateInfos.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reopened.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/actions/updatePrBody.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/utils/random.ts","../src/appRouter.tsx","../src/index.ts"],"sourcesContent":["/* eslint-disable max-lines */\n\nimport { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'archis' | 'frontends' | 'backends'> = {\n  slackToken: process.env.ORNIKAR_SLACK_TOKEN,\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z]{2,}-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      /* archi */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      rigma: `romain${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      tilap: `julien.lavinh${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    archis: {\n      logins: ['JulienBreux'],\n      labels: ['teams/archi'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'rigma',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'tilap',\n        'vlbr',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/archi': {\n        name: 'archi',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#FF6F00',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?(!)?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const orgsConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n};\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","export type Options =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: Options[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'autoMergeWithSkipCi',\n    label: 'Auto merge with `[skip ci]`',\n  },\n  {\n    name: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->)(.*)$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\ntype Config = Record<Options, boolean>;\n\nconst parseOptions = (content: string, defaultConfig: Config): Config => {\n  return optionsRegexps.reduce(\n    (acc, { name, regexp }) => {\n      const match = regexp.exec(content);\n      acc[name] = !match\n        ? defaultConfig[name] || false\n        : match[1] === 'x' || match[1] === 'X';\n      return acc;\n    },\n    {} as any,\n  ) as Config;\n};\n\ninterface ParseBodyResultWithoutOptions {\n  content: string;\n  ending: string;\n  reviewflowContentCol: string;\n  reviewflowContentColPrefix: string;\n  reviewflowContentColSuffix: string;\n}\n\ninterface ParseBodyResultWithOptions extends ParseBodyResultWithoutOptions {\n  options: Config;\n  breakingChanges: string;\n}\n\nexport const parseBody = (\n  description: string,\n): ParseBodyResultWithoutOptions | null => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol, reviewflowContent, ending] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      ending,\n      reviewflowContentCol: reviewflowContent,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  };\n};\n\nexport const parseBodyWithOptions = (\n  description: string,\n  defaultConfig: Config,\n): ParseBodyResultWithOptions | null => {\n  const parsedBody = parseBody(description);\n  if (parsedBody === null) return null;\n\n  // console.log(parsedBody.reviewflowContentCol);\n  let breakingChanges = parsedBody.reviewflowContentCol.replace(\n    /^.*#### Commits Notes:(.*)#### Options:.*$/s,\n    '$1',\n  );\n\n  if (breakingChanges === parsedBody.reviewflowContentCol) {\n    breakingChanges = '';\n  } else {\n    breakingChanges = breakingChanges.trim();\n  }\n\n  return {\n    ...parsedBody,\n    options: parseOptions(parsedBody.reviewflowContentCol, defaultConfig),\n    breakingChanges,\n  };\n};\n","import { PullsGetResponse } from '@octokit/rest';\nimport { LabelResponse } from '../../../context/initRepoLabels';\n\nexport default function hasLabelInPR(\n  pr: PullsGetResponse,\n  label: LabelResponse,\n): boolean {\n  if (!label) return false;\n  return pr.labels.some((l): boolean => l.id === label.id);\n}\n","/* eslint-disable max-lines */\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBodyWithOptions } from './utils/parseBody';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nconst hasFailedStatusOrChecks = async (\n  pr: PullsGetResponse,\n  context: Context<any>,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  pr: PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n\n  if (!hasLabelInPR(pr, autoMergeLabel)) {\n    context.log.debug('automerge not possible: no label', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (pr.state !== 'open') {\n    context.log.debug('automerge not possible: pr is not opened', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && lockedPr.number !== pr.number) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info('automerge not possible: already merged pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${\n      pr.mergeable_state\n    }`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        if (pr.body.includes('<!-- renovate-rebase -->')) {\n          if (pr.body.includes('[x] <!-- renovate-rebase -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- renovate-rebase -->',\n            '[x] <!-- renovate-rebase -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${\n          pr.mergeable_state\n        }`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${\n        pr.mergeable_state\n      }`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n\n    const parsedBody = parseBodyWithOptions(\n      pr.body,\n      repoContext.config.prDefaultOptions,\n    );\n    const options =\n      (parsedBody && parsedBody.options) || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: `${pr.title}${\n        options.autoMergeWithSkipCi ? ' [skip ci]' : ''\n      } (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = `Generated by review-flow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor // ||\n      // TODO: description is never updated\n      // existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","export const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { getKeys } from './utils';\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  postMessage: (githubLogin: string, text: string) => Promise<void>;\n  prLink: <T extends Webhooks.WebhookPayloadPullRequest>(\n    pr: PullsGetResponse,\n    context: Context<T>,\n  ) => string;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<TeamSlack> => {\n  if (!config.slackToken) {\n    return {\n      mention: (): string => '',\n      postMessage: (): Promise<void> => Promise.resolve(),\n      prLink: (): string => '',\n    };\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackClient = new WebClient(config.slackToken);\n  const allUsers: any = await slackClient.users.list({ limit: 200 });\n  const members: [string, { member: any; im: any }][] = Object.values(\n    githubLoginToSlackEmail,\n  )\n    .map((email) => {\n      const member = allUsers.members.find(\n        (user: any) => user.profile.email === email,\n      );\n      if (!member) {\n        console.warn(`Could not find user ${email}`);\n        return;\n      }\n      return [email, { member, im: undefined }] as [\n        string,\n        { member: any; im: any }\n      ];\n    })\n    .filter(ExcludesFalsy);\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string): string => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (githubLogin: string, text: string): Promise<void> => {\n      context.log.debug('send slack', { githubLogin, text });\n      if (process.env.DRY_RUN) return;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return;\n      await slackClient.chat.postMessage({\n        username: process.env.REVIEWFLOW_NAME,\n        channel: user.im.id,\n        text,\n      });\n    },\n    prLink: <T extends Webhooks.WebhookPayloadPullRequest>(\n      pr: PullsGetResponse,\n      context: Context<T>,\n    ): string => {\n      return `<${pr.html_url}|${context.payload.repository.name}#${pr.number}>`;\n    },\n  };\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface OrgContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n}\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nconst initTeamContext = async (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const slackPromise = initTeamSlack(context, config);\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  return {\n    config,\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    getTeamsForLogin: (githubLogin) =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst orgContextsPromise = new Map();\nconst orgContexts = new Map();\n\nexport const obtainOrgContext = (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const owner = context.payload.repository.owner;\n\n  const existingTeamContext = orgContexts.get(owner.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = orgContextsPromise.get(owner.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(context, config);\n  orgContextsPromise.set(owner.login, promise);\n\n  return promise.then((orgContext) => {\n    orgContextsPromise.delete(owner.login);\n    orgContexts.set(owner.login, orgContext);\n    return orgContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { orgsConfigs, Config } from '../orgsConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainOrgContext, OrgContext } from './orgContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(context: Context<any>, prNumber: number): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport type RepoContext<GroupNames extends string = any> = OrgContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const orgContext = await obtainOrgContext(context, config);\n  const repoContext = Object.create(orgContext);\n\n  const [labels] = await Promise.all([initRepoLabels(context, config)]);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      console.log('lock: try to lock pr', { prIdOrIds });\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        console.log('lock: lock acquired', { prIdOrIds });\n        try {\n          await callback();\n        } catch (err) {\n          console.log('lock: release pr (with error)', { prIdOrIds });\n          release();\n          reject(err);\n          return;\n        }\n        console.log('lock: release pr', { prIdOrIds });\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', () => {\n        return lockPROrPRS(String(pr.id), async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(prResult.data, context, repoContext);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', pr);\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (context, prNumber: number | string): void => {\n      context.log('merge lock: remove', { prNumber });\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log('merge lock: next', { lockMergePr });\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const obtainRepoContext = (\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  if (\n    repo.name === 'reviewflow-test' &&\n    process.env.REVIEWFLOW_NAME !== 'reviewflow-test'\n  ) {\n    console.warn('repo ignored', { owner: repo.owner.login, name: repo.name });\n    return null;\n  }\n  const owner = repo.owner;\n  if (!orgsConfigs[owner.login]) {\n    console.warn(owner.login, Object.keys(orgsConfigs));\n    return null;\n  }\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initRepoContext(context, orgsConfigs[owner.login]);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { obtainRepoContext, RepoContext } from '../context/repoContext';\n\nexport type PRHandler<T = any, Result = void> = (\n  pr: PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => Promise<Result>;\n\nexport type CallbackWithPRAndRepoContext = (\n  pr: PullsGetResponse,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  callback: CallbackWithPRAndRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  repoContext.lockPROrPRS(String(context.payload.pull_request.id), async () => {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: context.payload.pull_request.number,\n      }),\n    );\n\n    await callback(prResult.data, repoContext);\n  });\n};\n\ntype CallbackPRAndContextAndRepoContext<T> = (\n  pr: PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  callback: CallbackPRAndContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(context, (pr, repoContext) =>\n    callback(pr, context, repoContext),\n  );\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestsChange = <T>(\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(prs.map((pr) => String(pr.id)), () =>\n    callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PRHandler } from '../utils';\n\nexport const autoAssignPRToCreator: PRHandler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (pr, context, repoContext) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    context.issue({\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z]+)[- ](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../orgsConfigs/types';\nimport { parseBodyWithOptions, parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  body: string;\n  options?: Record<Options, boolean>;\n}\n\nexport const updateBody = (\n  body: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n  updateOptions?: Partial<Record<Options, boolean>>,\n): UpdatedBodyWithOptions => {\n  const parsed = parseBodyWithOptions(body, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return { body };\n  }\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  const infosAndCommitNotesParagraph = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^\\s*(?:(#### Infos:.*)?(#### Commits Notes:.*)?#### Options:)?.*$/s,\n    // eslint-disable-next-line no-nested-ternary\n    !infos\n      ? '$1$2'\n      : infos.length !== 0\n      ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n$2`\n      : '$2',\n  );\n\n  const updatedOptions = !updateOptions\n    ? options\n    : { ...options, ...updateOptions };\n\n  return {\n    options: updatedOptions,\n    body: `${content}${reviewflowContentColPrefix}\n${infosAndCommitNotesParagraph}#### Options:\n${toMarkdownOptions(updatedOptions)}\n${reviewflowContentColSuffix}${ending || ''}`,\n  };\n};\n\nexport const updateBodyCommitsNotes = (\n  body: string,\n  commitNotes?: string,\n): string => {\n  const parsed = parseBody(body);\n  if (!parsed) {\n    console.info('could not parse body');\n    return body;\n  }\n\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  } = parsed;\n\n  const reviewflowContentColReplaced = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /(?:#### Commits Notes:.*)?(#### Options:)/s,\n    // eslint-disable-next-line no-nested-ternary\n    !commitNotes ? '$1' : `#### Commits Notes:\\n\\n${commitNotes}\\n\\n$1`,\n  );\n\n  return `${content}${reviewflowContentColPrefix}${reviewflowContentColReplaced}${reviewflowContentColSuffix}${ending ||\n    ''}`;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\n\ninterface UpdatePr {\n  title?: string;\n  body?: string;\n}\n\nexport const updatePrIfNeeded = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  update: UpdatePr,\n): Promise<void> => {\n  const hasDiffInTitle = update.title && pr.title !== update.title;\n  const hasDiffInBody = update.body && pr.body !== update.body;\n\n  if (hasDiffInTitle || hasDiffInBody) {\n    const diff: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      diff.title = update.title;\n      pr.title = update.title as string;\n    }\n    if (hasDiffInBody) {\n      diff.body = update.body;\n      pr.body = update.body as string;\n    }\n\n    await context.github.issues.update(context.issue(diff));\n  }\n};\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport hasLabelInPR from './hasLabelInPR';\n\ninterface SyncLabelOptions {\n  onRemove?: () => void | Promise<void>;\n  onAdd?: (prLabels: LabelResponse[]) => void | Promise<void>;\n}\n\nexport default async function syncLabel<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<T>,\n  shouldHaveLabel: boolean,\n  label: LabelResponse,\n  prHasLabel = hasLabelInPR(pr, label),\n  { onRemove, onAdd }: SyncLabelOptions = {},\n): Promise<void> {\n  if (prHasLabel && !shouldHaveLabel) {\n    await context.github.issues.removeLabel(\n      context.issue({ name: label.name }),\n    );\n    if (onRemove) await onRemove();\n  }\n  if (shouldHaveLabel && !prHasLabel) {\n    const response = await context.github.issues.addLabels(\n      context.issue({ labels: [label.name] }),\n    );\n    if (onAdd) await onAdd(response.data);\n  }\n}\n","/* eslint-disable max-lines */\nimport Webhooks from '@octokit/webhooks';\nimport { StatusError, StatusInfo } from '../../orgsConfigs/types';\nimport { PRHandler } from '../utils';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport { updatePrIfNeeded } from './updatePr';\nimport hasLabelInPR from './utils/hasLabelInPR';\nimport syncLabel from './utils/syncLabel';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const editOpenedPR: PRHandler<\n  Webhooks.WebhookPayloadPullRequest,\n  { skipAutoMerge: boolean }\n> = async (pr, context, repoContext) => {\n  const repo = context.payload.repository;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return { skipAutoMerge: true };\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(pr.title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check): boolean => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(({ name, error, info }) =>\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.REVIEWFLOW_NAME}/${name}`,\n            sha: pr.head.sha,\n            state: (error ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: error ? undefined : (info as StatusInfo).url,\n            description: error ? error.title : (info as StatusInfo).title,\n          }),\n        ),\n      ),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck &&\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            sha: pr.head.sha,\n            state: (errorRule ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: undefined,\n            description: errorRule\n              ? errorRule.error.title\n              : '✓ Your PR is valid',\n          }),\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = hasLabelInPR(pr, featureBranchLabel);\n  const prHasSkipCiLabel = hasLabelInPR(pr, skipCiLabel);\n  const prHasAutoMergeLabel = hasLabelInPR(pr, automergeLabel);\n\n  const defaultOptions = {\n    ...repoContext.config.prDefaultOptions,\n    featureBranch: prHasFeatureBranchLabel,\n    autoMergeWithSkipCi: prHasSkipCiLabel,\n    autoMerge: prHasAutoMergeLabel,\n  };\n\n  const { body, options } = updateBody(pr.body, defaultOptions, statuses\n    .filter((status) => status.info && status.info.inBody)\n    .map((status) => status.info) as StatusInfo[]);\n  await updatePrIfNeeded(pr, context, repoContext, { title, body });\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    await Promise.all([\n      featureBranchLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.featureBranch,\n          featureBranchLabel,\n          prHasFeatureBranchLabel,\n        ),\n      skipCiLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMergeWithSkipCi,\n          skipCiLabel,\n          prHasSkipCiLabel,\n        ),\n      automergeLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMerge,\n          automergeLabel,\n          prHasAutoMergeLabel,\n          {\n            onAdd: async (prLabels) => {\n              await autoMergeIfPossible(pr, context, repoContext, prLabels);\n            },\n            onRemove: async () => {\n              await repoContext.removePrFromAutomergeQueue(context, pr.number);\n            },\n          },\n        ),\n    ]);\n\n    if (!automergeLabel) {\n      return { skipAutoMerge: true };\n    }\n  }\n\n  return { skipAutoMerge: false };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\n\nconst addStatusCheck = async function<\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n): Promise<void> {\n  const hasPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check) => check.name === process.env.REVIEWFLOW_NAME,\n  );\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else {\n    await context.github.repos.createStatus(\n      context.repo({\n        context: process.env.REVIEWFLOW_NAME,\n        sha: pr.head.sha,\n        state,\n        target_url: undefined,\n        description,\n      }),\n    );\n  }\n};\n\nconst createFailedStatusCheck = <E extends Webhooks.WebhookPayloadPullRequest>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  description: string,\n): Promise<void> =>\n  addStatusCheck(pr, context, {\n    state: 'failure',\n    description,\n  });\n\nexport const updateStatusCheckFromLabels = (\n  pr: PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  labels: LabelResponse[] = pr.labels || [],\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l && l.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      pr,\n      context,\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      pr,\n      context,\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      pr,\n      context,\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        pr,\n        context,\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(pr, context, {\n    state: 'success',\n    description: '✓ PR ready to merge !',\n  });\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../orgsConfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends Webhooks.WebhookPayloadPullRequest,\n  GroupNames extends string = any\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN) return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          context.issue({\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          const result = await context.github.issues.removeLabel(\n            context.issue({\n              name: toDeleteName,\n            }),\n          );\n          prLabels = result.data;\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        context.issue({\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(pr, context, repoContext, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nexport const autoApproveAndAutoMerge = async (\n  pr: PullsGetResponse,\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = repoContext.labels['code/approved'];\n  if (hasLabelInPR(pr, codeApprovedLabel)) {\n    await context.github.pulls.createReview(\n      context.issue({ event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(pr, context, repoContext);\n    return true;\n  }\n\n  return false;\n};\n","import Webhooks from '@octokit/webhooks';\nimport parse from '@commitlint/parse';\nimport { PRHandler } from '../utils';\nimport syncLabel from './utils/syncLabel';\nimport { updateBodyCommitsNotes } from './utils/updateBody';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const readCommitsAndUpdateInfos: PRHandler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (pr, context, repoContext) => {\n  // tmp.data[0].sha\n  // tmp.data[0].commit.message\n\n  const commits = await context.github.paginate(\n    context.github.pulls.listCommits(\n      context.issue({\n        // A custom page size up to 100. Default is 30.\n        per_page: 100,\n      }),\n    ),\n    (res) => res.data,\n  );\n\n  const conventionalCommits = await Promise.all(\n    commits.map((c) => parse(c.commit.message)),\n  );\n\n  const breakingChangesCommits: any = conventionalCommits.reduce(\n    (acc, c, index) => {\n      const breakingChangesNotes = c.notes.filter(\n        (note: any) => note.title === 'BREAKING CHANGE',\n      );\n      if (breakingChangesNotes.length !== 0) {\n        acc.push({ commit: commits[index], breakingChangesNotes });\n      }\n\n      return acc;\n    },\n    [],\n  );\n\n  const breakingChangesLabel = repoContext.labels['breaking-changes'];\n  const newBody = updateBodyCommitsNotes(\n    pr.body,\n    breakingChangesCommits.length === 0\n      ? ''\n      : `Breaking Changes:\\n${breakingChangesCommits\n          .map(({ commit, breakingChangesNotes }: any) =>\n            breakingChangesNotes.map(\n              (note: any) =>\n                `- ${note.text.replace('\\n', ' ')} (${commit.sha})`,\n            ),\n          )\n          .join('')}`,\n  );\n\n  await Promise.all([\n    syncLabel(\n      pr,\n      context,\n      breakingChangesCommits.length !== 0,\n      breakingChangesLabel,\n    ),\n    updatePrIfNeeded(pr, context, repoContext, { body: newBody }),\n  ]);\n\n  // TODO check if add/remove label works and pr body update works\n  // TODO add infos in merge\n\n  // TODO auto update ! in front of : to signal a breaking change when https://github.com/conventional-changelog/commitlint/issues/658 is closed\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function opened(app: Application): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const fromRenovate = pr.head.ref.startsWith('renovate/');\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(pr, context, repoContext),\n          editOpenedPR(pr, context, repoContext).then(() => {\n            return readCommitsAndUpdateInfos(pr, context, repoContext);\n          }),\n          fromRenovate\n            ? autoApproveAndAutoMerge(pr, context, repoContext).then(\n                async (approved: boolean): Promise<void> => {\n                  if (!approved) {\n                    await updateReviewStatus(pr, context, repoContext, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(pr, context, repoContext, 'dev', {\n                add: ['needsReview'],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBodyWithOptions } from './actions/utils/parseBody';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id &&\n            parseBodyWithOptions(pr.body, repoContext.config.prDefaultOptions);\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            parsedBody && parsedBody.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            updateReviewStatus(pr, context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.reopened',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        await Promise.all([\n          updateReviewStatus(pr, context, repoContext, 'dev', {\n            add: ['needsReview'],\n            remove: ['approved'],\n          }),\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(app: Application): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        // ignore if sender is self (dismissed review rerequest review)\n        if (sender.type === 'Bot') return;\n\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup &&\n              review.state === 'REQUEST_CHANGES' &&\n              // In case this is a rerequest for review\n              review.user.login !== reviewer.login,\n          );\n\n          if (!hasChangesRequestedInReviews) {\n            await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n              add: ['needsReview', !shouldWait && 'requested'],\n              remove: ['approved', 'changesRequested'],\n            });\n          }\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:eyes: ${repoContext.slack.mention(\n              sender.login,\n            )} requests your review on ${repoContext.slack.prLink(\n              pr,\n              context,\n            )} !\\n> ${pr.title}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequestRemoved(app: Application): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const hasApprovedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'APPROVED',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n            ],\n          });\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:skull_and_crossbones: ${repoContext.slack.mention(\n              sender.login,\n            )} removed the request for your review on ${repoContext.slack.prLink(\n              pr,\n              context,\n            )}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewSubmitted(app: Application): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const { user: reviewer, state } = (context.payload as any).review;\n        if (pr.user.login === reviewer.login) return;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        let merged;\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n              // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n              // includesWaitForGroups: true,\n            },\n          );\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            state === 'approved';\n\n          const newLabels = await updateReviewStatus(\n            pr,\n            context,\n            repoContext,\n            reviewerGroup,\n            {\n              add: [\n                approved && 'approved',\n                state === 'changes_requested' && 'changesRequested',\n              ],\n              remove: [\n                approved && 'needsReview',\n                !(\n                  hasRequestedReviewsForGroup || state === 'changes_requested'\n                ) && 'requested',\n                state === 'approved' &&\n                  !hasChangesRequestedInReviews &&\n                  'changesRequested',\n                state === 'changes_requested' && 'approved',\n              ],\n            },\n          );\n\n          if (approved && !hasChangesRequestedInReviews) {\n            merged = await autoMergeIfPossible(\n              pr,\n              context,\n              repoContext,\n              newLabels,\n            );\n          }\n        }\n\n        const mention = repoContext.slack.mention(reviewer.login);\n        const prUrl = repoContext.slack.prLink(pr, context);\n\n        const message = (() => {\n          if (state === 'changes_requested') {\n            return `:x: ${mention} requests changes on ${prUrl}`;\n          }\n          if (state === 'approved') {\n            return `:clap: :white_check_mark: ${mention} approves ${prUrl}${\n              merged ? ' and PR is merged :tada:' : ''\n            }`;\n          }\n          return `:speech_balloon: ${mention} commented on ${prUrl}`;\n        })();\n\n        repoContext.slack.postMessage(pr.user.login, message);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewDismissed(app: Application): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: ['needsReview', 'requested'],\n            remove: [\n              !hasChangesRequestedInReviews && 'changesRequested',\n              'approved',\n            ],\n          });\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              pr.user.login,\n              `:skull: ${repoContext.slack.mention(\n                reviewer.login,\n              )} dismissed his review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            );\n          } else {\n            repoContext.slack.postMessage(\n              reviewer.login,\n              `:skull: ${repoContext.slack.mention(\n                sender.login,\n              )} dismissed your review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function synchronize(app: Application): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n\n        await Promise.all([\n          editOpenedPR(pr, context, repoContext),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(pr, context, repoContext),\n\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n\n        // call autoMergeIfPossible to re-add to the queue when push is fixed\n        await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(app: Application): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        if (\n          sender.type === 'Bot' &&\n          sender.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n        ) {\n          return;\n        }\n\n        const { skipAutoMerge } = await editOpenedPR(pr, context, repoContext);\n        if (!skipAutoMerge) await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateBody } from './utils/updateBody';\nimport { Options } from './utils/prOptions';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const updatePrBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  updateOptions: Partial<Record<Options, boolean>>,\n): Promise<void> => {\n  const { body } = updateBody(\n    pr.body,\n    repoContext.config.prDefaultOptions,\n    undefined,\n    updateOptions,\n  );\n\n  await updatePrIfNeeded(pr, context, repoContext, { body });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrBody } from './actions/updatePrBody';\nimport hasLabelInPR from './actions/utils/hasLabelInPR';\n\nexport default function labelsChanged(app: Application): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context: Context<Webhooks.WebhookPayloadPullRequest>) => {\n      const sender = context.payload.sender;\n      const fromRenovate =\n        sender.type === 'Bot' && sender.login === 'renovate[bot]';\n      context.payload.pull_request.head.ref.startsWith('renovate/');\n\n      if (sender.type === 'Bot' && !fromRenovate) {\n        return;\n      }\n\n      await handlerPullRequestChange(context, async (pr, repoContext) => {\n        const label = (context.payload as any).label;\n        if (fromRenovate) {\n          const codeApprovedLabel = repoContext.labels['code/approved'];\n          const autoMergeLabel = repoContext.labels['merge/automerge'];\n          const autoMergeSkipCiLabel = repoContext.labels['merge/skip-ci'];\n          if (context.payload.action === 'labeled') {\n            if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n              // const { data: reviews } = await context.github.pulls.listReviews(\n              //   context.issue({ per_page: 1 }),\n              // );\n              // if (reviews.length !== 0) {\n              await context.github.pulls.createReview(\n                context.issue({ event: 'APPROVE' }),\n              );\n              if (autoMergeSkipCiLabel) {\n                await context.github.issues.addLabels(\n                  context.issue({ labels: [autoMergeSkipCiLabel.name] }),\n                );\n              }\n              await updateStatusCheckFromLabels(pr, context, repoContext);\n              await updatePrBody(pr, context, repoContext, {\n                autoMergeWithSkipCi: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                autoMerge: hasLabelInPR(pr, autoMergeLabel)\n                  ? true\n                  : repoContext.config.prDefaultOptions.autoMerge,\n              });\n              // }\n            } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n              await updatePrBody(pr, context, repoContext, {\n                autoMerge: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                autoMergeWithSkipCi: hasLabelInPR(pr, codeApprovedLabel)\n                  ? true\n                  : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n              });\n            }\n            await autoMergeIfPossible(pr, context, repoContext);\n          }\n          return;\n        }\n\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              context.issue({ name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              context.issue({ labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(pr, context, repoContext);\n\n        const featureBranchLabel = repoContext.labels['feature-branch'];\n        const automergeLabel = repoContext.labels['merge/automerge'];\n        const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n        const option = (() => {\n          if (featureBranchLabel && label.id === automergeLabel.id)\n            return 'featureBranch';\n          if (automergeLabel && label.id === automergeLabel.id)\n            return 'autoMerge';\n          if (skipCiLabel && label.id === skipCiLabel.id)\n            return 'autoMergeWithSkipCi';\n          return null;\n        })();\n\n        if (option) {\n          await updatePrBody(pr, context, repoContext, {\n            [option]: context.payload.action === 'labeled',\n          });\n        } else if (context.payload.action === 'labeled') {\n          if (\n            repoContext.labels['merge/automerge'] &&\n            label.id === repoContext.labels['merge/automerge'].id\n          ) {\n            await autoMergeIfPossible(pr, context, repoContext);\n          }\n        }\n      });\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(app: Application): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(app: Application): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(app: Application): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (isSameBranch(context, lockedPr)) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","// import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { MongoConnection } from 'liwi-mongo';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const config = new Map([\n    ['host', process.env.MONGO_HOST || 'localhost'],\n    ['port', process.env.MONGO_PORT || '27017'],\n    ['database', process.env.MONGO_DB as string],\n  ]);\n  if (process.env.MONGO_USER) {\n    config.set('user', process.env.MONGO_USER);\n    config.set('password', process.env.MONGO_PASSWORD as string);\n  }\n  const connection = new MongoConnection(config);\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  // return { connection, prEvents };\n  return { connection };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>{children}</body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { randomBytes } from 'crypto';\nimport { promisify } from 'util';\n\nconst randomBytesPromisified = promisify(randomBytes);\n\nexport async function randomBase64(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('base64');\n}\n\nexport async function randomHex(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('hex');\n}\n","/* eslint-disable max-lines */\n\nimport { promisify } from 'util';\nimport Octokit from '@octokit/rest';\nimport { Request, Response } from 'express';\nimport cookieParser from 'cookie-parser';\nimport { sign, verify } from 'jsonwebtoken';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { Application } from 'probot';\nimport { MongoStores } from './mongo';\nimport Layout from './views/Layout';\nimport * as githubAuth from './auth/github';\nimport { randomHex } from './utils/random';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request, strategy: string) => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/${strategy}/login-response`;\n};\n\ninterface AuthInfo {\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nexport default async function appRouter(\n  app: Application,\n  mongoStuff: MongoStores,\n): Promise<void> {\n  const router = app.route('/app');\n  const api = await app.auth();\n  router.use(cookieParser());\n\n  router.get('/', (req, res) => {\n    res.redirect('/gh');\n  });\n\n  router.get('/gh', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a href={`/gh/repository/${repo.owner.login}/${repo.name}`}>\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          {data.length === 100 && (\n            <div>We currently have a limit to 100 repositories</div>\n          )}\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/gh/login', async (req: Request, res: Response) => {\n    const strategy = 'gh';\n    if (await readAuthCookie(req, strategy)) {\n      return res.redirect('/gh');\n    }\n\n    const state = await randomHex(8);\n    res.cookie(`auth_${strategy}_${state}`, strategy, {\n      maxAge: 10 * 60 * 1000,\n      httpOnly: true,\n      secure,\n    });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req, strategy),\n      scope: 'read:user,repo',\n      state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/gh/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code = req.query.code;\n    const state = req.query.state;\n    const cookieName = `auth_${strategy}_${state}`;\n    const cookie = req.cookies && req.cookies[cookieName];\n    if (!cookie) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        '<html><body>No cookie for this state. <a href=\"/gh/login\">Retry ?</a></body></html>',\n      );\n      return;\n    }\n    res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req, strategy),\n    });\n\n    if (!result) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/gh/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const login = user.data.login;\n\n    const token = await signPromisified(\n      { login, accessToken, time: Date.now() },\n      AUTH_SECRET_KEY,\n      {\n        algorithm: 'HS512',\n        audience: req.headers['user-agent'],\n        expiresIn: '10 days',\n      },\n    );\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/gh');\n  });\n\n  router.get('/gh/repository/:owner/:repository', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      return res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n    }\n\n    if (!data.permissions.admin) {\n      return res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME} {\"isn't\"} installed on this repo. Go\n              to{' '}\n              <a\n                href={`https://github.com/apps/${\n                  process.env.REVIEWFLOW_NAME\n                }/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reopenedHandler from './pr-handlers/reopened';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchromizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application) => {\n  const mongoStores = mongoInit();\n  appRouter(app, mongoStores);\n\n  openedHandler(app);\n  closedHandler(app);\n  reopenedHandler(app);\n  reviewRequestedHandler(app);\n  reviewRequestRemovedHandler(app);\n\n  // app.on('pull_request.closed', async context => {\n\n  // });\n\n  // app.on('pull_request.reopened', async context => {\n\n  // });\n\n  reviewSubmittedHandler(app);\n  reviewDismissedHandler(app);\n  labelsChanged(app);\n  synchromizeHandler(app);\n  editedHandler(app);\n\n  checkrunCompleted(app);\n  checksuiteCompleted(app);\n  status(app);\n});\n"],"names":["config","slackToken","process","env","ORNIKAR_SLACK_TOKEN","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","title","regExp","error","summary","bot","status","statusInfoFromMatch","match","issue","inBody","url","groups","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","abarreir","arthurflachs","rigma","damienorny","darame07","Pixy","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","tilap","vlbr","design","jperriere","CoralineColasse","teams","archis","logins","labels","backends","frontends","waitForGroups","list","name","color","review","ci","inProgress","succeeded","failed","needsReview","requested","changesRequested","approved","orgsConfigs","ornikar","options","optionsRegexps","map","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","defaultConfig","reduce","acc","exec","parseBody","description","reviewFlowCol","reviewflowContent","ending","reviewFlowColMatch","reviewflowContentCol","reviewflowContentColPrefix","reviewflowContentColSuffix","parseBodyWithOptions","parsedBody","breakingChanges","replace","trim","hasLabelInPR","pr","some","l","id","hasFailedStatusOrChecks","context","checks","github","listForRef","repo","ref","head","sha","per_page","failedChecks","data","check_runs","filter","check","conclusion","length","log","info","combinedStatus","repos","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossible","repoContext","prLabels","autoMergeLabel","debug","prId","prNumber","number","removePrFromAutomergeQueue","createMergeLockPrFromPr","branch","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","pushAutomergeQueue","addMergeLockPr","mergeable","undefined","prResult","pulls","get","pull_number","merged","mergeable_state","reschedule","startsWith","body","includes","renovateRebaseBody","issues","update","base","merge","owner","login","mergeResult","merge_method","commit_title","commit_message","Boolean","err","message","initRepoLabels","listLabelsForRepo","finalLabels","labelKey","labelConfig","Object","entries","labelColor","slice","existingLabel","find","result","createLabel","current_name","updateLabel","getKeys","o","keys","ExcludesFalsy","initTeamSlack","mention","postMessage","Promise","resolve","prLink","githubLoginToSlackEmail","groupName","assign","slackClient","WebClient","allUsers","users","limit","members","values","email","member","user","profile","console","warn","im","open","channel","membersMap","Map","getUserFromGithubLogin","githubLogin","text","DRY_RUN","chat","username","REVIEWFLOW_NAME","html_url","payload","repository","initTeamContext","slackPromise","githubLoginToGroup","forEach","set","githubLoginToTeams","teamName","push","getReviewerGroups","githubLogins","Set","getReviewerGroup","getTeamsForLogin","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","group","slack","orgContextsPromise","orgContexts","obtainOrgContext","existingTeamContext","existingPromise","promise","then","orgContext","delete","initRepoContext","create","all","reviewGroupNames","needsReviewLabelIds","key","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lock","Lock","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","callback","reject","createReleaseCallback","release","Error","setTimeout","String","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","value","p","repoContextsPromise","repoContexts","obtainRepoContext","existingRepoContext","handlerPullRequestChange","pull_request","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","type","addAssignees","cleanTitle","s","arg1","arg2","toUpperCase","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","updateBody","updateOptions","parsed","infosAndCommitNotesParagraph","updatedOptions","updateBodyCommitsNotes","commitNotes","reviewflowContentColReplaced","updatePrIfNeeded","hasDiffInTitle","hasDiffInBody","diff","syncLabel","shouldHaveLabel","prHasLabel","onRemove","onAdd","removeLabel","response","addLabels","editOpenedPR","skipAutoMerge","isPrFromBot","errorRule","rule","date","Date","toISOString","hasLintPrCheck","createStatus","target_url","head_sha","started_at","completed_at","output","featureBranchLabel","automergeLabel","skipCiLabel","prHasFeatureBranchLabel","prHasSkipCiLabel","prHasAutoMergeLabel","defaultOptions","addStatusCheck","hasPrCheck","created_at","createFailedStatusCheck","updateStatusCheckFromLabels","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","existing","team","size","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","readCommitsAndUpdateInfos","commits","paginate","listCommits","res","conventionalCommits","c","parse","commit","breakingChangesCommits","index","breakingChangesNotes","notes","note","breakingChangesLabel","newBody","opened","app","on","fromRenovate","closed","git","deleteRef","catch","reviewRequested","sender","reviewer","requested_reviewer","reviews","listReviews","hasChangesRequestedInReviews","reviewRequestRemoved","hasRequestedReviewsForGroup","hasApprovedInReviews","reviewSubmitted","newLabels","prUrl","reviewDismissed","synchronize","edited","updatePrBody","labelsChanged","autoMergeSkipCiLabel","action","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","MONGO_DB","init","MONGO_HOST","MONGO_PORT","MONGO_USER","MONGO_PASSWORD","connection","MongoConnection","Layout","lang","NAME","children","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","client","secret","auth","tokenHost","tokenPath","authorizePath","randomBytesPromisified","promisify","randomBytes","randomHex","buffer","toString","AUTH_SECRET_KEY","signPromisified","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","strategy","host","hostname","PORT","readAuthCookie","cookie","cookies","algorithm","audience","headers","appRouter","router","route","api","use","cookieParser","redirect","authInfo","octokit","Octokit","accessToken","send","renderToStaticMarkup","maxAge","httpOnly","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error_description","code","cookieName","clearCookie","getToken","access_token","getAuthenticated","token","time","now","expiresIn","params","permissions","admin","data2","apps","getRepoInstallation","Probot","run","mongoStores","mongoInit","openedHandler","closedHandler","reopenedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchromizeHandler","editedHandler"],"mappings":"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"}