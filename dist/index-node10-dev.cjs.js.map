{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/teamconfigs/ornikar.ts","../src/teamconfigs/christophehurpeau.ts","../src/teamconfigs/index.ts","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/teamContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/index.ts"],"sourcesContent":["import { Config } from './types';\n\nconst config: Config<'dev' | 'design'> = {\n  slackToken: process.env.ORNIKAR_SLACK_TOKEN,\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s(ONK-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      rigma: `romain${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      tilap: `julien.lavinh${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      '63m29': `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFD57F',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#B2E1FF',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev'> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<GroupNames extends string = any> = ConfigType<GroupNames>;\n\nexport const teamConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n};\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","export type Options = 'featureBranch' | 'deleteAfterMerge';\n\nexport const options: Options[] = ['featureBranch', 'deleteAfterMerge'];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[[ xX]]\\\\s*<!-- renovate-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->.*<!---? end - don't add anything after this -?-->).*$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\nconst parseOptions = (\n  content: string,\n  defaultConfig: Record<Options, boolean>,\n): Record<Options, boolean> => {\n  return optionsRegexps.reduce(\n    (acc, { name, regexp }) => {\n      const match = regexp.exec(content);\n      acc[name] = !match\n        ? defaultConfig[name] || false\n        : match[1] === 'x' || match[2] === 'X';\n      return acc;\n    },\n    {} as any,\n  ) as Record<Options, boolean>;\n};\n\nexport const parseBody = (\n  description: string,\n  defaultConfig: Record<Options, boolean>,\n) => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n      options: parseOptions(reviewFlowCol, defaultConfig),\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options: parseOptions(reviewflowContentCol, defaultConfig),\n  };\n};\n","/* eslint-disable max-lines */\nimport { Context } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBody } from './utils/parseBody';\n\nconst hasFailedStatusOrChecks = async (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any = context.payload.pull_request,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n  if (!autoMergeLabel) return false;\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (!prLabels.find((l: LabelResponse) => l.id === autoMergeLabel.id)) {\n    context.log.debug('automerge not possible: no label');\n    repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    return false;\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels');\n    // repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && lockedPr.number !== pr.number) {\n    context.log.info(`automerge not possible: locked pr ${pr.id}`);\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    context.log.info(`automerge not possible: already merged pr ${pr.id}`);\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, mergeable=${pr.mergeable} state=${\n      pr.mergeable_state\n    }`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        await context.github.issues.update(\n          context.repo({\n            number: pr.number,\n            body: pr.body.replace(\n              '[ ] <!-- renovate-rebase -->',\n              '[x] <!-- renovate-rebase -->',\n            ),\n          }),\n        );\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(context, repoContext, pr)) {\n        repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${\n          pr.mergeable_state\n        }`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(context, repoContext, pr)) {\n        repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${\n        pr.mergeable_state\n      }`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n    const parsedBody = parseBody(pr.body, repoContext.config.prDefaultOptions);\n    const mergeResult = await context.github.pulls.merge({\n      merge_method:\n        parsedBody && parsedBody.options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: `${pr.title} (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","import { Context } from 'probot';\nimport { Config } from '../teamconfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = `Generated by review-flow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor // ||\n      // TODO: description is never updated\n      // existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","export const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n","import { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Config } from '../teamconfigs';\nimport { getKeys } from './utils';\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  postMessage: (githubLogin: string, text: string) => Promise<void>;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<TeamSlack> => {\n  if (!config.slackToken) {\n    return {\n      mention: (githubLogin: string) => '',\n      postMessage: (githubLogin: string, text: string) => Promise.resolve(),\n    };\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackClient = new WebClient(config.slackToken);\n  const allUsers: any = await slackClient.users.list({ limit: 200 });\n  const members: [string, { member: any; im: any }][] = Object.values(\n    githubLoginToSlackEmail,\n  )\n    .map((email) => {\n      const member = allUsers.members.find(\n        (user: any) => user.profile.email === email,\n      );\n      if (!member) {\n        console.warn(`Could not find user ${email}`);\n        return;\n      }\n      return [email, { member, im: undefined }] as [\n        string,\n        { member: any; im: any }\n      ];\n    })\n    .filter(ExcludesFalsy);\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string) => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (githubLogin: string, text: string) => {\n      context.log.info('send slack', { githubLogin, text });\n      if (process.env.DRY_RUN) return;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return;\n      await slackClient.chat.postMessage({\n        channel: user.im.id,\n        text,\n      });\n    },\n  };\n};\n","import { Context } from 'probot';\nimport { Config } from '../teamconfigs';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface TeamContext<GroupNames extends string = any> {\n  config: Config<GroupNames>;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n}\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nconst initTeamContext = async (\n  context: Context<any>,\n  config: Config,\n): Promise<TeamContext> => {\n  const slackPromise = initTeamSlack(context, config);\n\n  const githubLoginToGroup = getKeys(config.groups).reduce<Map<string, string>>(\n    (acc, groupName) => {\n      Object.keys(config.groups[groupName]).forEach((login) => {\n        acc.set(login, groupName);\n      });\n      return acc;\n    },\n    new Map(),\n  );\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  return {\n    config,\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst teamContextsPromise = new Map();\nconst teamContexts = new Map();\n\nexport const obtainTeamContext = (\n  context: Context<any>,\n  config: Config,\n): Promise<TeamContext> => {\n  const owner = context.payload.repository.owner;\n\n  const existingTeamContext = teamContexts.get(owner.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = teamContextsPromise.get(owner.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(context, config);\n  teamContextsPromise.set(owner.login, promise);\n\n  return promise.then((teamContext) => {\n    teamContextsPromise.delete(owner.login);\n    teamContexts.set(owner.login, teamContext);\n    return teamContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { teamConfigs, Config } from '../teamconfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainTeamContext, TeamContext } from './teamContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removeMergeLockedPr(context: Context<any>, pr: LockedMergePr): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport type RepoContext<GroupNames extends string = any> = TeamContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const teamContext = await obtainTeamContext(context, config);\n  const repoContext = Object.create(teamContext);\n\n  const [labels] = await Promise.all([initRepoLabels(context, config)]);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  const automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      console.log('lock: try to lock pr', { prIdOrIds });\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        console.log('lock: lock acquired', { prIdOrIds });\n        try {\n          await callback();\n        } catch (err) {\n          console.log('lock: release pr (with error)', { prIdOrIds });\n          release();\n          reject(err);\n          return;\n        }\n        console.log('lock: release pr', { prIdOrIds });\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', () => {\n        return lockPROrPRS(String(pr.id), async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(context, repoContext, prResult.data);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds: [\n      ...requestedReviewLabelIds,\n      ...changesRequestedLabelIds,\n      ...approvedReviewLabelIds,\n    ],\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', pr);\n      if (lockMergePr && lockMergePr.number === pr.number) return;\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removeMergeLockedPr: (context, pr: LockedMergePr): void => {\n      console.log('merge lock: remove', pr);\n      if (!lockMergePr || lockMergePr.number !== pr.number) return;\n      lockMergePr = automergeQueue.shift();\n      console.log('merge lock: next', lockMergePr);\n      if (lockMergePr) {\n        reschedule(context, lockMergePr);\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const obtainRepoContext = (\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  if (\n    repo.name === 'reviewflow-test' &&\n    process.env.NAME !== 'reviewflow-test'\n  ) {\n    return null;\n  }\n  const owner = repo.owner;\n  if (!teamConfigs[owner.login]) {\n    console.warn(owner.login, Object.keys(teamConfigs));\n    return null;\n  }\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initRepoContext(context, teamConfigs[owner.login]);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { obtainRepoContext, RepoContext } from '../context/repoContext';\n\nexport type Handler<T = any> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => Promise<void>;\n\nexport type CallbackWithRepoContext = (\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  callback: CallbackWithRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  repoContext.lockPROrPRS(String(context.payload.pull_request.id), async () => {\n    await callback(repoContext);\n  });\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  callback: CallbackContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(context, (repoContext) =>\n    callback(context, repoContext),\n  );\n};\n\nexport const createHandlerPullRequestsChange = <T>(\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(prs.map((pr) => String(pr.id)), () =>\n    callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Handler } from '../utils';\n\nexport const autoAssignPRToCreator: Handler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (context, repoContext) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n\n  const pr = context.payload.pull_request;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    context.issue({\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(/[\\s-]+\\[?\\s*ONK[- ](\\d+)\\s*]?\\s*$/i, ' ONK-$1')\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../teamconfigs/types';\nimport { parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\nexport const updateBody = (\n  description: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n) => {\n  const parsed = parseBody(description, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return description;\n  }\n  const {\n    content,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  return `${content}${reviewflowContentColPrefix}\n${\n  infos && infos.length !== 0 ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n` : ''\n}#### Options:\n${toMarkdownOptions(options)}\n${reviewflowContentColSuffix}\n`;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { StatusError, StatusInfo } from '../../teamconfigs/types';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const editOpenedPR = async (\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<void> => {\n  const repo = context.payload.repository;\n  const pr = context.payload.pull_request;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return;\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(pr.title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check) => check.name === `${process.env.NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(({ name, error, info }) =>\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.NAME}/${name}`,\n            sha: pr.head.sha,\n            state: (error ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: error ? undefined : (info as StatusInfo).url,\n            description: error ? error.title : (info as StatusInfo).title,\n          }),\n        ),\n      ),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck &&\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.NAME}/lint-pr`,\n            sha: pr.head.sha,\n            state: (errorRule ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: undefined,\n            description: errorRule\n              ? errorRule.error.title\n              : '✓ Your PR is valid',\n          }),\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const body = updateBody(\n    pr.body,\n    repoContext.config.prDefaultOptions,\n    statuses\n      .filter((status) => status.info && status.info.inBody)\n      .map((status) => status.info) as StatusInfo[],\n  );\n\n  const hasDiffInTitle = pr.title !== title;\n  const hasDiffInBody = pr.body !== body;\n  if (hasDiffInTitle || hasDiffInBody) {\n    const update: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      update.title = title;\n      pr.title = title;\n    }\n    if (hasDiffInBody) {\n      update.body = body;\n      pr.body = body;\n    }\n\n    await context.github.issues.update(context.issue(update));\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\n\nconst addStatusCheck = async function<\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<E>,\n  pr: any,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n): Promise<void> {\n  const hasPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find((check) => check.name === process.env.NAME);\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else {\n    await context.github.repos.createStatus(\n      context.repo({\n        context: process.env.NAME,\n        sha: pr.head.sha,\n        state,\n        target_url: undefined,\n        description,\n      }),\n    );\n  }\n};\n\nconst createFailedStatusCheck = <E extends Webhooks.WebhookPayloadPullRequest>(\n  context: Context<E>,\n  pr: any,\n  description: string,\n): Promise<void> =>\n  addStatusCheck(context, pr, {\n    state: 'failure',\n    description,\n  });\n\nexport const updateStatusCheckFromLabels = (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any = context.payload.pull_request,\n  labels: LabelResponse[] = pr.labels || [],\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l && l.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        context,\n        pr,\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(context, pr, {\n    state: 'success',\n    description: '✓ PR ready to merge !',\n  });\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../teamconfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends Webhooks.WebhookPayloadPullRequest,\n  GroupNames extends string = any\n>(\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  const pr = context.payload.pull_request;\n  let prLabels = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels>();\n  const toDelete = new Set<GroupLabels>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (\n        !label ||\n        prLabels.some((prLabel: LabelResponse) => prLabel.id === label.id)\n      ) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find(\n        (prLabel: LabelResponse) => prLabel.id === label.id,\n      );\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n      }\n    });\n  }\n\n  const newLabelNamesArray = [...newLabelNames];\n\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    toAdd: [...toAdd],\n    toDelete: [...toDelete],\n    oldLabels: prLabels.map((l: LabelResponse) => l.name),\n    newLabelNames: newLabelNamesArray,\n  });\n\n  // if (process.env.DRY_RUN) return;\n\n  if (toAdd.size || toDelete.size) {\n    const result = await context.github.issues.replaceLabels(\n      context.issue({\n        labels: newLabelNamesArray,\n      }),\n    );\n    prLabels = result.data;\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(context, repoContext, pr, prLabels);\n  // }\n\n  return prLabels;\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function opened(app: Application): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        await Promise.all([\n          autoAssignPRToCreator(context, repoContext),\n          editOpenedPR(context, repoContext),\n          context.payload.pull_request.head.ref.startsWith('renovate/')\n            ? Promise.resolve(undefined)\n            : updateReviewStatus(context, repoContext, 'dev', {\n                add: ['needsReview'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBody } from './actions/utils/parseBody';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n        const pr = context.payload.pull_request;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id &&\n            parseBody(pr.body, repoContext.config.prDefaultOptions);\n          const createMergeLockPrFromPr = () => ({\n            id: pr.id,\n            number: pr.number,\n            branch: pr.head.ref,\n          });\n          await Promise.all([\n            repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr()),\n            parsedBody && parsedBody.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            updateReviewStatus(context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(app: Application): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        // ignore if sender is self (dismissed review rerequest review)\n        if (sender.type === 'Bot') return;\n\n        const pr = context.payload.pull_request;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup &&\n              review.state === 'REQUEST_CHANGES' &&\n              // In case this is a rerequest for review\n              review.user.login !== reviewer.login,\n          );\n\n          if (!hasChangesRequestedInReviews) {\n            await updateReviewStatus(context, repoContext, reviewerGroup, {\n              add: ['needsReview', !shouldWait && 'requested'],\n              remove: ['approved', 'changesRequested'],\n            });\n          }\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:eyes: ${repoContext.slack.mention(\n              sender.login,\n            )} requests your review on ${pr.html_url} !\\n> ${pr.title}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequestRemoved(app: Application): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const pr = context.payload.pull_request;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const hasApprovedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'APPROVED',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n          await updateReviewStatus(context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n            ],\n          });\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:skull_and_crossbones: ${repoContext.slack.mention(\n              sender.login,\n            )} removed the request for your review on ${pr.html_url}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewSubmitted(app: Application): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const pr = context.payload.pull_request;\n        const { user: reviewer, state } = (context.payload as any).review;\n        if (pr.user.login === reviewer.login) return;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        let merged;\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n              // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n              // includesWaitForGroups: true,\n            },\n          );\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            state === 'approved';\n\n          const newLabels = await updateReviewStatus(\n            context,\n            repoContext,\n            reviewerGroup,\n            {\n              add: [\n                approved && 'approved',\n                state === 'changes_requested' && 'changesRequested',\n              ],\n              remove: [\n                approved && 'needsReview',\n                !(\n                  hasRequestedReviewsForGroup || state === 'changes_requested'\n                ) && 'requested',\n                state === 'approved' &&\n                  !hasChangesRequestedInReviews &&\n                  'changesRequested',\n                state === 'changes_requested' && 'approved',\n              ],\n            },\n          );\n\n          if (approved && !hasChangesRequestedInReviews) {\n            merged = await autoMergeIfPossible(\n              context,\n              repoContext,\n              pr,\n              newLabels,\n            );\n          }\n        }\n\n        const mention = repoContext.slack.mention(reviewer.login);\n        const prUrl = pr.html_url;\n\n        const message = (() => {\n          if (state === 'changes_requested') {\n            return `:x: ${mention} requests changes on ${prUrl}`;\n          }\n          if (state === 'approved') {\n            return `:clap: :white_check_mark: ${mention} approves ${prUrl}${\n              merged ? ' and PR is merged :tada:' : ''\n            }`;\n          }\n          return `:speech_balloon: ${mention} commented on ${prUrl}`;\n        })();\n\n        repoContext.slack.postMessage(pr.user.login, message);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewDismissed(app: Application): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const pr = context.payload.pull_request;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          await updateReviewStatus(context, repoContext, reviewerGroup, {\n            add: ['needsReview', 'requested'],\n            remove: [\n              !hasChangesRequestedInReviews && 'changesRequested',\n              'approved',\n            ],\n          });\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              pr.user.login,\n              `:skull: ${repoContext.slack.mention(\n                reviewer.login,\n              )} dismissed his review on ${pr.html_url}`,\n            );\n          } else {\n            repoContext.slack.postMessage(\n              reviewer.login,\n              `:skull: ${repoContext.slack.mention(\n                sender.login,\n              )} dismissed your review on ${pr.html_url}`,\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function synchronize(app: Application): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n\n        await Promise.all([\n          editOpenedPR(context, repoContext),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(context, repoContext),\n          // call autoMergeIfPossible to re-add to the queue when push is fixed\n          autoMergeIfPossible(context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(app: Application): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        await editOpenedPR(context, repoContext);\n\n        await autoMergeIfPossible(context, repoContext);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\n\nexport default function labelsChanged(app: Application): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context) => {\n      const sender = context.payload.sender;\n      if (sender.type === 'Bot') return;\n\n      await handlerPullRequestChange(context, async (repoContext) => {\n        const label = context.payload.label;\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              context.issue({ name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              context.issue({ labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(context, repoContext);\n\n        if (\n          context.payload.action === 'labeled' &&\n          label.id ===\n            (repoContext.labels['merge/automerge'] &&\n              repoContext.labels['merge/automerge'].id)\n        ) {\n          await autoMergeIfPossible(context, repoContext);\n        }\n      });\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(app: Application): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(context, repoContext, prResult.data);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(app: Application): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(context, repoContext, prResult.data);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(app: Application): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (isSameBranch(context, lockedPr)) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchromizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\n\nif (!process.env.NAME) process.env.NAME = 'reviewflow';\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application) => {\n  openedHandler(app);\n  closedHandler(app);\n  reviewRequestedHandler(app);\n  reviewRequestRemovedHandler(app);\n\n  // app.on('pull_request.closed', async context => {\n\n  // });\n\n  // app.on('pull_request.reopened', async context => {\n\n  // });\n\n  reviewSubmittedHandler(app);\n  reviewDismissedHandler(app);\n  labelsChanged(app);\n  synchromizeHandler(app);\n  editedHandler(app);\n\n  checkrunCompleted(app);\n  checksuiteCompleted(app);\n  status(app);\n});\n"],"names":["config","slackToken","process","env","ORNIKAR_SLACK_TOKEN","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","deleteAfterMerge","parsePR","title","regExp","error","summary","bot","status","statusInfoFromMatch","match","issue","inBody","url","groups","dev","abarreir","ORNIKAR_EMAIL_DOMAIN","arthurflachs","CorentinAndre","rigma","damienorny","darame07","christophehurpeau","HugoGarrido","LentnerStefan","Mxime","tilap","design","jperriere","CoralineColasse","waitForGroups","labels","list","name","color","review","ci","inProgress","succeeded","failed","needsReview","requested","changesRequested","approved","teamConfigs","ornikar","options","optionsRegexps","map","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","defaultConfig","reduce","acc","exec","parseBody","description","reviewFlowCol","reviewFlowColMatch","reviewflowContentColPrefix","reviewflowContentColSuffix","reviewflowContentCol","hasFailedStatusOrChecks","context","repoContext","pr","checks","github","listForRef","repo","ref","head","sha","per_page","failedChecks","data","check_runs","filter","check","conclusion","length","log","info","id","combinedStatus","repos","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossible","payload","pull_request","prLabels","autoMergeLabel","createMergeLockPrFromPr","number","branch","find","l","debug","removeMergeLockedPr","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","pushAutomergeQueue","addMergeLockPr","mergeable","undefined","prResult","pulls","get","pull_number","merged","mergeable_state","reschedule","startsWith","issues","update","body","replace","base","merge","owner","login","parsedBody","mergeResult","merge_method","commit_title","commit_message","Boolean","err","message","initRepoLabels","listLabelsForRepo","finalLabels","labelKey","labelConfig","Object","entries","labelColor","slice","existingLabel","result","createLabel","current_name","updateLabel","getKeys","o","keys","ExcludesFalsy","initTeamSlack","mention","postMessage","Promise","resolve","githubLoginToSlackEmail","groupName","assign","slackClient","WebClient","allUsers","users","limit","members","values","email","member","user","profile","console","warn","im","open","channel","membersMap","Map","getUserFromGithubLogin","githubLogin","text","DRY_RUN","chat","initTeamContext","slackPromise","githubLoginToGroup","forEach","set","getReviewerGroups","githubLogins","Set","getReviewerGroup","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","includes","some","group","slack","teamContextsPromise","teamContexts","obtainTeamContext","repository","existingTeamContext","existingPromise","promise","then","teamContext","delete","initRepoContext","create","all","reviewGroupNames","needsReviewLabelIds","key","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","labelIdToGroupName","reviewGroupLabels","lock","Lock","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","callback","reject","createReleaseCallback","release","Error","setTimeout","String","protectedLabelIds","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","p","push","repoContextsPromise","repoContexts","obtainRepoContext","NAME","existingRepoContext","handlerPullRequestChange","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","type","addAssignees","cleanTitle","trim","s","arg1","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","updateBody","parsed","editOpenedPR","isPrFromBot","errorRule","rule","date","Date","toISOString","hasLintPrCheck","createStatus","target_url","head_sha","started_at","completed_at","output","hasDiffInTitle","hasDiffInBody","addStatusCheck","hasPrCheck","created_at","createFailedStatusCheck","updateStatusCheckFromLabels","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toDelete","getLabelFromKey","reviewConfig","prLabel","existing","newLabelNamesArray","oldLabels","size","replaceLabels","opened","app","on","closed","git","deleteRef","catch","reviewRequested","sender","reviewer","requested_reviewer","reviews","listReviews","hasChangesRequestedInReviews","html_url","reviewRequestRemoved","hasRequestedReviewsForGroup","hasApprovedInReviews","reviewSubmitted","newLabels","prUrl","reviewDismissed","synchronize","edited","labelsChanged","action","removeLabel","addLabels","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","Probot","run","openedHandler","closedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchromizeHandler","editedHandler"],"mappings":"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"}