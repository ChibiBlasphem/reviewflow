{"version":3,"file":"index-node10.cjs.js","sources":["../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/utils/random.ts","../src/appRouter.tsx","../src/orgsConfigs/defaultConfig.ts","../src/orgsConfigs/ornikar.ts","../src/orgsConfigs/christophehurpeau.ts","../src/orgsConfigs/index.ts","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/utils/hasLabelInPR.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/utils/ExcludesFalsy.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/orgContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/updatePr.ts","../src/pr-handlers/actions/utils/syncLabel.ts","../src/pr-handlers/actions/utils/createStatus.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/pr-handlers/actions/readCommitsAndUpdateInfos.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reopened.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/actions/updatePrBody.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/initApp.ts","../src/index.ts"],"sourcesContent":["// import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { MongoConnection } from 'liwi-mongo';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const config = new Map([\n    ['host', process.env.MONGO_HOST || 'localhost'],\n    ['port', process.env.MONGO_PORT || '27017'],\n    ['database', process.env.MONGO_DB as string],\n  ]);\n  if (process.env.MONGO_USER) {\n    config.set('user', process.env.MONGO_USER);\n    config.set('password', process.env.MONGO_PASSWORD as string);\n  }\n  const connection = new MongoConnection(config);\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  // return { connection, prEvents };\n  return { connection };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>{children}</body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { randomBytes } from 'crypto';\nimport { promisify } from 'util';\n\nconst randomBytesPromisified = promisify(randomBytes);\n\nexport async function randomBase64(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('base64');\n}\n\nexport async function randomHex(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('hex');\n}\n","/* eslint-disable max-lines */\n\nimport { promisify } from 'util';\nimport type { Request, Response } from 'express';\nimport { Octokit, Application } from 'probot';\nimport cookieParser from 'cookie-parser';\nimport { sign, verify } from 'jsonwebtoken';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { MongoStores } from './mongo';\nimport Layout from './views/Layout';\nimport * as githubAuth from './auth/github';\nimport { randomHex } from './utils/random';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request, strategy: string) => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/app/${strategy}/login-response`;\n};\n\ninterface AuthInfo {\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nexport default async function appRouter(\n  app: Application,\n  mongoStuff: MongoStores,\n): Promise<void> {\n  const router = app.route('/app');\n  const api = await app.auth();\n  router.use(cookieParser());\n\n  router.get('/', (req, res) => {\n    res.redirect('/app/gh');\n  });\n\n  router.get('/gh', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/app/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a\n                    href={`/app/gh/repository/${repo.owner.login}/${repo.name}`}\n                  >\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          {data.length === 100 && (\n            <div>We currently have a limit to 100 repositories</div>\n          )}\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/gh/login', async (req: Request, res: Response) => {\n    const strategy = 'gh';\n    if (await readAuthCookie(req, strategy)) {\n      return res.redirect('/app/gh');\n    }\n\n    const state = await randomHex(8);\n    res.cookie(`auth_${strategy}_${state}`, strategy, {\n      maxAge: 10 * 60 * 1000,\n      httpOnly: true,\n      secure,\n    });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req, strategy),\n      scope: 'read:user,repo',\n      state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/gh/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code: string = req.query.code as string;\n    const state = req.query.state;\n    const cookieName = `auth_${strategy}_${state}`;\n    const cookie = req.cookies && req.cookies[cookieName];\n    if (!cookie) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        '<html><body>No cookie for this state. <a href=\"/app/gh/login\">Retry ?</a></body></html>',\n      );\n      return;\n    }\n    res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req, strategy),\n    });\n\n    if (!result) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/app/gh/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const login = user.data.login;\n\n    const token = await signPromisified(\n      { login, accessToken, time: Date.now() },\n      AUTH_SECRET_KEY,\n      {\n        algorithm: 'HS512',\n        audience: req.headers['user-agent'],\n        expiresIn: '10 days',\n      },\n    );\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/gh');\n  });\n\n  router.get('/gh/repository/:owner/:repository', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      return res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n    }\n\n    if (!data.permissions.admin) {\n      return res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed on this repo. Go to \"}\n              <a\n                href={`https://github.com/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import { Config } from './types';\n\nconst config: Config<never, never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [],\n  },\n  groups: {},\n  waitForGroups: {},\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n    },\n  },\n};\n\nexport default config;\n","/* eslint-disable max-lines */\n\nimport { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'ops' | 'frontends' | 'backends'> = {\n  slackToken: process.env.ORNIKAR_SLACK_TOKEN,\n  autoAssignToCreator: true,\n  trimTitle: true,\n  ignoreRepoPattern: '(infra-.*|devenv)',\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z][\\dA-Z]+-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      /* ops */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Alan-pad': null,\n      CamilSadiki: null,\n      busser: null,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Radyum: `romain.reynaud${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'budet-b': `benjamin.budet${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      mdcarter: `maxime.dehaye${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Lenamari: `lena${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'AlexisRiols-Ornikar': `alexis.riols${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      ChibiBlasphem: `christopher${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    ops: {\n      logins: ['JulienBreux', 'Alan-pad', 'CamilSadiki', 'busser'],\n      labels: ['teams/ops'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n        'Radyum',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'vlbr',\n        'budet-b',\n        'mdcarter',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/ops': {\n        name: 'ops',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        description: 'This issue or pull request will need a new major version',\n        color: '#FF6F00',\n      },\n      duplicate: {\n        name: 'duplicate',\n        description: 'This issue or pull request already exists',\n        color: '#ECEFF1',\n      },\n      documentation: {\n        name: 'documentation',\n        description: 'Improvements or additions to documentation',\n        color: '#7FCEFF',\n      },\n      rfc: {\n        name: 'RFC',\n        description: 'Request For Comments',\n        color: '#FFD3B2',\n      },\n      bug: {\n        name: 'bug',\n        description: \"Something isn't working\",\n        color: '#FF3D00',\n      },\n      enhancement: {\n        name: 'enhancement',\n        description: 'New feature or request',\n        color: '#7FCEFF',\n      },\n      'help-wanted': {\n        name: 'help wanted',\n        description: 'Extra attention is needed',\n        color: '#B1EE8B',\n      },\n      question: {\n        name: 'question',\n        description: 'Further information is requested',\n        color: '#F860A4',\n      },\n      wontfix: {\n        name: 'wontfix',\n        description: 'This will not be worked on',\n        color: '#ECEFF1',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?(!)?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport defaultConfig from './defaultConfig';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const orgsConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n};\n\nexport { defaultConfig };\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","export type Options =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: Options[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'autoMergeWithSkipCi',\n    label: 'Auto merge with `[skip ci]`',\n  },\n  {\n    name: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->)(.*)$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\ntype Config = Record<Options, boolean>;\n\nconst parseOptions = (content: string, defaultConfig: Config): Config => {\n  return optionsRegexps.reduce((acc, { name, regexp }) => {\n    const match = regexp.exec(content);\n    acc[name] = !match\n      ? defaultConfig[name] || false\n      : match[1] === 'x' || match[1] === 'X';\n    return acc;\n  }, {} as any) as Config;\n};\n\ninterface ParseBodyResultWithoutOptions {\n  content: string;\n  ending: string;\n  reviewflowContentCol: string;\n  reviewflowContentColPrefix: string;\n  reviewflowContentColSuffix: string;\n}\n\ninterface ParseBodyResultWithOptions extends ParseBodyResultWithoutOptions {\n  options: Config;\n  breakingChanges: string;\n}\n\nexport const parseBody = (\n  description: string,\n): ParseBodyResultWithoutOptions | null => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol, reviewflowContent, ending] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      ending,\n      reviewflowContentCol: reviewflowContent,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  };\n};\n\nexport const parseBodyWithOptions = (\n  description: string,\n  defaultConfig: Config,\n): ParseBodyResultWithOptions | null => {\n  const parsedBody = parseBody(description);\n  if (parsedBody === null) return null;\n\n  // console.log(parsedBody.reviewflowContentCol);\n  let breakingChanges = parsedBody.reviewflowContentCol.replace(\n    /^.*#### Commits Notes:(.*)#### Options:.*$/s,\n    '$1',\n  );\n\n  if (breakingChanges === parsedBody.reviewflowContentCol) {\n    breakingChanges = '';\n  } else {\n    breakingChanges = breakingChanges.trim();\n  }\n\n  return {\n    ...parsedBody,\n    options: parseOptions(parsedBody.reviewflowContentCol, defaultConfig),\n    breakingChanges,\n  };\n};\n","import { Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\n\nexport default function hasLabelInPR(\n  prLabels: Octokit.PullsGetResponse['labels'],\n  label: LabelResponse,\n): boolean {\n  if (!label) return false;\n  return prLabels.some((l): boolean => l.id === label.id);\n}\n","/* eslint-disable max-lines */\nimport { Context, Octokit } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBodyWithOptions } from './utils/parseBody';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nconst hasFailedStatusOrChecks = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n\n  if (!hasLabelInPR(prLabels, autoMergeLabel)) {\n    context.log.debug('automerge not possible: no label', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (pr.state !== 'open') {\n    context.log.debug('automerge not possible: pr is not opened', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && lockedPr.number !== pr.number) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info('automerge not possible: already merged pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${pr.mergeable_state}`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        if (pr.body.includes('<!-- renovate-rebase -->')) {\n          if (pr.body.includes('[x] <!-- renovate-rebase -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- renovate-rebase -->',\n            '[x] <!-- renovate-rebase -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${pr.mergeable_state}`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${pr.mergeable_state}`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n\n    const parsedBody = parseBodyWithOptions(\n      pr.body,\n      repoContext.config.prDefaultOptions,\n    );\n    const options = parsedBody?.options || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: `${pr.title}${\n        options.autoMergeWithSkipCi ? ' [skip ci]' : ''\n      } (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","export const ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n","import { Context, Octokit } from 'probot';\nimport { Config } from '../orgsConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const getLabelsForRepo = async (\n  context: Context<any>,\n): Promise<Octokit.IssuesListLabelsForRepoResponse> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  return labels;\n};\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const labels = await getLabelsForRepo(context);\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = labelConfig.description\n      ? `${labelConfig.description} - Synced by reviewflow`\n      : `Synced by reviewflow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n      if (labelKey === 'teams/ops') {\n        existingLabel = labels.find((label) => label.name === 'archi');\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor ||\n      existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","import { Context } from 'probot';\n\nexport const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n\nexport const contextIssue = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  issue_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    issue_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    issue_number: number;\n  } & T;\n};\n\nexport const contextPr = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  pull_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    pull_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    pull_number: number;\n  } & T;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { WebClient, KnownBlock } from '@slack/web-api';\nimport { Context, Octokit } from 'probot';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { Config } from '../orgsConfigs';\nimport { getKeys } from './utils';\n\ninterface SlackMessage {\n  text: string;\n  blocks?: KnownBlock[];\n  secondaryBlocks?: KnownBlock[];\n  ts?: string;\n}\n\ninterface SlackMessageResult {\n  ts: string;\n}\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  postMessage: (\n    githubLogin: string,\n    message: SlackMessage,\n  ) => Promise<SlackMessageResult | null>;\n  prLink: <T extends Webhooks.WebhookPayloadPullRequest>(\n    pr: Octokit.PullsGetResponse,\n    context: Context<T>,\n  ) => string;\n}\n\nexport const voidTeamSlack = (): TeamSlack => ({\n  mention: (): string => '',\n  postMessage: (): Promise<null> => Promise.resolve(null),\n  prLink: (): string => '',\n});\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<TeamSlack> => {\n  if (!config.slackToken) {\n    return voidTeamSlack();\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackClient = new WebClient(config.slackToken);\n  const allUsers: any = await slackClient.users.list({ limit: 200 });\n  const members: [string, { member: any; im: any }][] = Object.values(\n    githubLoginToSlackEmail,\n  )\n    .map((email) => {\n      const member = allUsers.members.find(\n        (user: any) => user.profile.email === email,\n      );\n      if (!member) {\n        console.warn(`Could not find user ${email}`);\n        return;\n      }\n      return [email, { member, im: undefined }] as [\n        string,\n        { member: any; im: any },\n      ];\n    })\n    .filter(ExcludesFalsy);\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string): string => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (\n      githubLogin: string,\n      message: SlackMessage,\n    ): Promise<null | SlackMessageResult> => {\n      context.log.debug('send slack', { githubLogin, message });\n      if (process.env.DRY_RUN) return null;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return null;\n      const result = await slackClient.chat.postMessage({\n        username: process.env.REVIEWFLOW_NAME,\n        channel: user.im.id,\n        text: message.text,\n        blocks: message.blocks,\n        attachments: message.secondaryBlocks\n          ? [{ blocks: message.secondaryBlocks }]\n          : undefined,\n        thread_ts: message.ts,\n      });\n      if (!result.ok) return null;\n      return { ts: result.ts as string };\n    },\n    prLink: <T extends Webhooks.WebhookPayloadPullRequest>(\n      pr: Octokit.PullsGetResponse,\n      context: Context<T>,\n    ): string => {\n      return `<${pr.html_url}|${context.payload.repository.name}#${pr.number}>`;\n    },\n  };\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface OrgContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n}\n\nconst initTeamContext = async (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const slackPromise = initTeamSlack(context, config);\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  return {\n    config,\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    getTeamsForLogin: (githubLogin) =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst orgContextsPromise = new Map();\nconst orgContexts = new Map();\n\nexport const obtainOrgContext = (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const owner = context.payload.repository.owner;\n\n  const existingTeamContext = orgContexts.get(owner.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = orgContextsPromise.get(owner.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(context, config);\n  orgContextsPromise.set(owner.login, promise);\n\n  return promise.then((orgContext) => {\n    orgContextsPromise.delete(owner.login);\n    orgContexts.set(owner.login, orgContext);\n    return orgContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { orgsConfigs, Config, defaultConfig } from '../orgsConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainOrgContext, OrgContext } from './orgContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    prNumberOrPrNumbers: number | number[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(context: Context<any>, prNumber: number): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nexport type RepoContext<GroupNames extends string = any> = OrgContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const repo = context.payload.repository;\n  const orgContext = await obtainOrgContext(context, config);\n  const repoContext = Object.create(orgContext);\n\n  const labels = await initRepoLabels(context, config);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    prNumberOrPrNumbers: number | number[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      const logInfos = {\n        repo: `${repo.owner.login}/${repo.name}`,\n        prIdOrIds,\n        prNumberOrPrNumbers,\n      };\n      context.log.info('lock: try to lock pr', logInfos);\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        context.log.info('lock: lock acquired', logInfos);\n        try {\n          await callback();\n        } catch (err) {\n          context.log.info('lock: release pr (with error)', logInfos);\n          release();\n          reject(err);\n          return;\n        }\n        context.log.info('lock: release pr', logInfos);\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', pr.number, () => {\n        return lockPROrPRS(String(pr.id), pr.number, async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(prResult.data, context, repoContext);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', {\n        repo: `${repo.owner.login}/${repo.name}`,\n        pr,\n      });\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (context, prNumber: number | string): void => {\n      context.log('merge lock: remove', {\n        repo: `${repo.owner.login}/${repo.name}`,\n        prNumber,\n      });\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log('merge lock: next', {\n          repo: `${repo.owner.login}/${repo.name}`,\n          lockMergePr,\n        });\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        repo: `${repo.owner.login}/${repo.name}`,\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const shouldIgnoreRepo = (\n  repoName: string,\n  orgConfig: Config<any, any>,\n): boolean => {\n  const ignoreRepoRegexp =\n    orgConfig.ignoreRepoPattern &&\n    new RegExp(`^${orgConfig.ignoreRepoPattern}$`);\n\n  if (repoName === 'reviewflow-test') {\n    return process.env.REVIEWFLOW_NAME !== 'reviewflow-test';\n  }\n\n  if (ignoreRepoRegexp) {\n    return ignoreRepoRegexp.test(repoName);\n  }\n\n  return false;\n};\n\nexport const obtainRepoContext = (\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  const owner = repo.owner;\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  let orgConfig = orgsConfigs[owner.login];\n\n  if (!orgConfig) {\n    console.warn(`using default config for ${owner.login}`);\n    orgConfig = defaultConfig as Config<any, any>;\n  }\n\n  if (shouldIgnoreRepo(repo.name, orgConfig)) {\n    console.warn('repo ignored', { owner: repo.owner.login, name: repo.name });\n    return null;\n  }\n\n  const promise = initRepoContext(context, orgConfig);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { obtainRepoContext, RepoContext } from '../context/repoContext';\n\nexport type PRHandler<T = any, Result = void, FourthArgument = never> = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n  fourthArgument?: FourthArgument,\n) => Promise<Result>;\n\nexport type CallbackWithPRAndRepoContext = (\n  pr: Octokit.PullsGetResponse,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  callback: CallbackWithPRAndRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  return repoContext.lockPROrPRS(\n    String(context.payload.pull_request.id),\n    context.payload.pull_request.number,\n    async () => {\n      const prResult = await context.github.pulls.get(\n        context.repo({\n          pull_number: context.payload.pull_request.number,\n        }),\n      );\n\n      await callback(prResult.data, repoContext);\n    },\n  );\n};\n\ntype CallbackPRAndContextAndRepoContext<T> = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  callback: CallbackPRAndContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(context, (pr, repoContext) =>\n    callback(pr, context, repoContext),\n  );\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestsChange = <T>(\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number; number: number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(\n    prs.map((pr) => String(pr.id)),\n    prs.map((pr) => pr.number),\n    () => callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PRHandler } from '../utils';\nimport { contextIssue } from '../../context/utils';\n\nexport const autoAssignPRToCreator: PRHandler<Webhooks.WebhookPayloadPullRequest> = async (\n  pr,\n  context,\n  repoContext,\n) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    contextIssue(context, {\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z][\\dA-Za-z]+)[ -](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/i, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../orgsConfigs/types';\nimport { parseBodyWithOptions, parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  body: string;\n  options?: Record<Options, boolean>;\n}\n\nconst getReplacement = (infos?: StatusInfo[]): string => {\n  if (!infos) return '$1$2';\n  return infos.length !== 0\n    ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n$2`\n    : '$2';\n};\n\nexport const updateBody = (\n  body: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n  updateOptions?: Partial<Record<Options, boolean>>,\n): UpdatedBodyWithOptions => {\n  const parsed = parseBodyWithOptions(body, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return { body };\n  }\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  const infosAndCommitNotesParagraph = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^\\s*(?:(#### Infos:.*)?(#### Commits Notes:.*)?#### Options:)?.*$/s,\n    getReplacement(infos),\n  );\n\n  const updatedOptions = !updateOptions\n    ? options\n    : { ...options, ...updateOptions };\n\n  return {\n    options: updatedOptions,\n    body: `${content}${reviewflowContentColPrefix}\n${infosAndCommitNotesParagraph}#### Options:\n${toMarkdownOptions(updatedOptions)}\n${reviewflowContentColSuffix}${ending || ''}`,\n  };\n};\n\nexport const updateBodyCommitsNotes = (\n  body: string,\n  commitNotes?: string,\n): string => {\n  const parsed = parseBody(body);\n  if (!parsed) {\n    console.info('could not parse body');\n    return body;\n  }\n\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  } = parsed;\n\n  const reviewflowContentColReplaced = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /(?:#### Commits Notes:.*)?(#### Options:)/s,\n    // eslint-disable-next-line no-nested-ternary\n    !commitNotes ? '$1' : `#### Commits Notes:\\n\\n${commitNotes}\\n\\n$1`,\n  );\n\n  return `${content}${reviewflowContentColPrefix}${reviewflowContentColReplaced}${reviewflowContentColSuffix}${\n    ending || ''\n  }`;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextIssue } from '../../context/utils';\n\ninterface UpdatePr {\n  title?: string;\n  body?: string;\n}\n\nexport const updatePrIfNeeded = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  update: UpdatePr,\n): Promise<void> => {\n  const hasDiffInTitle = update.title && pr.title !== update.title;\n  const hasDiffInBody = update.body && pr.body !== update.body;\n\n  if (hasDiffInTitle || hasDiffInBody) {\n    const diff: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      diff.title = update.title;\n      pr.title = update.title as string;\n    }\n    if (hasDiffInBody) {\n      diff.body = update.body;\n      pr.body = update.body as string;\n    }\n\n    await context.github.issues.update(contextIssue(context, diff));\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport { contextIssue } from '../../../context/utils';\nimport hasLabelInPR from './hasLabelInPR';\n\ninterface SyncLabelOptions {\n  onRemove?: () => void | Promise<void>;\n  onAdd?: (prLabels: LabelResponse[]) => void | Promise<void>;\n}\n\nexport default async function syncLabel<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  shouldHaveLabel: boolean,\n  label: LabelResponse,\n  prHasLabel = hasLabelInPR(pr.labels, label),\n  { onRemove, onAdd }: SyncLabelOptions = {},\n): Promise<void> {\n  if (prHasLabel && !shouldHaveLabel) {\n    await context.github.issues.removeLabel(\n      contextIssue(context, { name: label.name }),\n    );\n    if (onRemove) await onRemove();\n  }\n  if (shouldHaveLabel && !prHasLabel) {\n    const response = await context.github.issues.addLabels(\n      contextIssue(context, { labels: [label.name] }),\n    );\n    if (onAdd) await onAdd(response.data);\n  }\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\n\nexport default async function createStatus<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  name: string,\n  sha: string,\n  type: 'failure' | 'success',\n  description: string,\n  url?: string,\n): Promise<void> {\n  await context.github.repos.createStatus(\n    context.repo({\n      context:\n        name === ''\n          ? process.env.REVIEWFLOW_NAME\n          : `${process.env.REVIEWFLOW_NAME}/${name}`,\n      sha,\n      state: type,\n      description,\n      target_url: url,\n    }),\n  );\n}\n","/* eslint-disable max-lines */\nimport Webhooks from '@octokit/webhooks';\nimport { StatusError, StatusInfo } from '../../orgsConfigs/types';\nimport { PRHandler } from '../utils';\nimport { ExcludesFalsy } from '../../utils/ExcludesFalsy';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport { updatePrIfNeeded } from './updatePr';\nimport hasLabelInPR from './utils/hasLabelInPR';\nimport syncLabel from './utils/syncLabel';\nimport createStatus from './utils/createStatus';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nexport const editOpenedPR: PRHandler<\n  Webhooks.WebhookPayloadPullRequest,\n  { skipAutoMerge: boolean },\n  string\n> = async (pr, context, repoContext, previousSha) => {\n  const repo = context.payload.repository;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return { skipAutoMerge: true };\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find(\n    (check): boolean => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(\n        ({ name, error, info }): Promise<void> =>\n          createStatus(\n            context,\n            name,\n            pr.head.sha,\n            error ? 'failure' : 'success',\n            error ? error.title : (info as StatusInfo).title,\n            error ? undefined : (info as StatusInfo).url,\n          ),\n      ),\n      ...(previousSha\n        ? statuses\n            .map(({ name, error, info }): Promise<void> | undefined =>\n              error\n                ? createStatus(\n                    context,\n                    name,\n                    previousSha,\n                    'success',\n                    'New commits have been pushed',\n                  )\n                : undefined,\n            )\n            .filter(ExcludesFalsy)\n        : []),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck && previousSha && errorRule\n        ? createStatus(\n            context,\n            'lint-pr',\n            previousSha,\n            'success',\n            'New commits have been pushed',\n          )\n        : undefined,\n      !hasLintPrCheck &&\n        createStatus(\n          context,\n          'lint-pr',\n          pr.head.sha,\n          errorRule ? 'failure' : 'success',\n          errorRule ? errorRule.error.title : '✓ Your PR is valid',\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = hasLabelInPR(pr.labels, featureBranchLabel);\n  const prHasSkipCiLabel = hasLabelInPR(pr.labels, skipCiLabel);\n  const prHasAutoMergeLabel = hasLabelInPR(pr.labels, automergeLabel);\n\n  const defaultOptions = {\n    ...repoContext.config.prDefaultOptions,\n    featureBranch: prHasFeatureBranchLabel,\n    autoMergeWithSkipCi: prHasSkipCiLabel,\n    autoMerge: prHasAutoMergeLabel,\n  };\n\n  const { body, options } = updateBody(\n    pr.body,\n    defaultOptions,\n    statuses\n      .filter((status) => status.info && status.info.inBody)\n      .map((status) => status.info) as StatusInfo[],\n  );\n  await updatePrIfNeeded(pr, context, repoContext, { title, body });\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    await Promise.all([\n      featureBranchLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.featureBranch,\n          featureBranchLabel,\n          prHasFeatureBranchLabel,\n        ),\n      skipCiLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMergeWithSkipCi,\n          skipCiLabel,\n          prHasSkipCiLabel,\n        ),\n      automergeLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMerge,\n          automergeLabel,\n          prHasAutoMergeLabel,\n          {\n            onAdd: async (prLabels) => {\n              await autoMergeIfPossible(pr, context, repoContext, prLabels);\n            },\n            onRemove: () => {\n              repoContext.removePrFromAutomergeQueue(context, pr.number);\n            },\n          },\n        ),\n    ]);\n\n    if (!automergeLabel) {\n      return { skipAutoMerge: true };\n    }\n  }\n\n  return { skipAutoMerge: false };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\nimport createStatus from './utils/createStatus';\n\nconst addStatusCheck = async function <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n  previousSha?: string,\n): Promise<void> {\n  const hasPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find((check) => check.name === process.env.REVIEWFLOW_NAME);\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else if (previousSha && state === 'failure') {\n    await Promise.all([\n      createStatus(\n        context,\n        '',\n        previousSha,\n        'success',\n        'New commits have been pushed',\n      ),\n      createStatus(context, '', pr.head.sha, state, description),\n    ]);\n  } else {\n    await createStatus(context, '', pr.head.sha, state, description);\n  }\n};\n\nexport const updateStatusCheckFromLabels = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  labels: LabelResponse[] = pr.labels || [],\n  previousSha?: string,\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l?.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  const createFailedStatusCheck = (description: string): Promise<void> =>\n    addStatusCheck(\n      pr,\n      context,\n      {\n        state: 'failure',\n        description,\n      },\n      previousSha,\n    );\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(\n    pr,\n    context,\n    {\n      state: 'success',\n      description: '✓ PR ready to merge !',\n    },\n    previousSha,\n  );\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../orgsConfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextIssue } from '../../context/utils';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends Webhooks.WebhookPayloadPullRequest,\n  GroupNames extends string = any\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n          toAddNames.add(label.name);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN) return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          contextIssue(context, {\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          try {\n            const result = await context.github.issues.removeLabel(\n              contextIssue(context, {\n                name: toDeleteName,\n              }),\n            );\n            prLabels = result.data;\n          } catch (err) {\n            context.log.warn('error removing label', {\n              err: err?.message,\n            });\n          }\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        contextIssue(context, {\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(pr, context, repoContext, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextPr } from '../../context/utils';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nexport const autoApproveAndAutoMerge = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = repoContext.labels['code/approved'];\n  if (hasLabelInPR(pr.labels, codeApprovedLabel)) {\n    await context.github.pulls.createReview(\n      contextPr(context, { event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(pr, context, repoContext);\n    return true;\n  }\n\n  return false;\n};\n","import Webhooks from '@octokit/webhooks';\nimport parse from '@commitlint/parse';\nimport { PRHandler } from '../utils';\nimport { contextPr } from '../../context/utils';\nimport syncLabel from './utils/syncLabel';\nimport { updateBodyCommitsNotes } from './utils/updateBody';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const readCommitsAndUpdateInfos: PRHandler<Webhooks.WebhookPayloadPullRequest> = async (\n  pr,\n  context,\n  repoContext,\n) => {\n  // tmp.data[0].sha\n  // tmp.data[0].commit.message\n\n  const commits = await context.github.paginate(\n    context.github.pulls.listCommits.endpoint.merge(\n      contextPr(context, {\n        // A custom page size up to 100. Default is 30.\n        per_page: 100,\n      }),\n    ),\n    (res) => res.data,\n  );\n\n  const conventionalCommits = await Promise.all(\n    commits.map((c) => parse(c.commit.message)),\n  );\n\n  const breakingChangesCommits: any = conventionalCommits.reduce(\n    (acc, c, index) => {\n      const breakingChangesNotes = c.notes.filter(\n        (note: any) => note.title === 'BREAKING CHANGE',\n      );\n      if (breakingChangesNotes.length !== 0) {\n        acc.push({ commit: commits[index], breakingChangesNotes });\n      }\n\n      return acc;\n    },\n    [],\n  );\n\n  const breakingChangesLabel = repoContext.labels['breaking-changes'];\n  const newBody = updateBodyCommitsNotes(\n    pr.body,\n    breakingChangesCommits.length === 0\n      ? ''\n      : `Breaking Changes:\\n${breakingChangesCommits\n          .map(({ commit, breakingChangesNotes }: any) =>\n            breakingChangesNotes.map(\n              (note: any) =>\n                `- ${note.text.replace('\\n', ' ')} (${commit.sha})`,\n            ),\n          )\n          .join('')}`,\n  );\n\n  await Promise.all([\n    syncLabel(\n      pr,\n      context,\n      breakingChangesCommits.length !== 0,\n      breakingChangesLabel,\n    ),\n    updatePrIfNeeded(pr, context, repoContext, { body: newBody }),\n  ]);\n\n  // TODO auto update ! in front of : to signal a breaking change when https://github.com/conventional-changelog/commitlint/issues/658 is closed\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function opened(app: Application): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const fromRenovate = pr.head.ref.startsWith('renovate/');\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(pr, context, repoContext),\n          editOpenedPR(pr, context, repoContext).then(() => {\n            return readCommitsAndUpdateInfos(pr, context, repoContext);\n          }),\n          fromRenovate\n            ? autoApproveAndAutoMerge(pr, context, repoContext).then(\n                async (approved: boolean): Promise<void> => {\n                  if (!approved) {\n                    await updateReviewStatus(pr, context, repoContext, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(pr, context, repoContext, 'dev', {\n                add: ['needsReview'],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBodyWithOptions } from './actions/utils/parseBody';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id\n              ? parseBodyWithOptions(\n                  pr.body,\n                  repoContext.config.prDefaultOptions,\n                )\n              : null;\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            parsedBody?.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            updateReviewStatus(pr, context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.reopened',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        await Promise.all([\n          updateReviewStatus(pr, context, repoContext, 'dev', {\n            add: ['needsReview'],\n            remove: ['approved'],\n          }),\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { contextPr } from '../context/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(app: Application): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        // ignore if sender is self (dismissed review rerequest review)\n        if (sender.type === 'Bot') return;\n\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            contextPr(context, { per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup &&\n              review.state === 'REQUEST_CHANGES' &&\n              // In case this is a rerequest for review\n              review.user.login !== reviewer.login,\n          );\n\n          if (!hasChangesRequestedInReviews) {\n            await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n              add: ['needsReview', !shouldWait && 'requested'],\n              remove: ['approved', 'changesRequested'],\n            });\n          }\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          repoContext.slack.postMessage(reviewer.login, {\n            text: `:eyes: ${repoContext.slack.mention(\n              sender.login,\n            )} requests your review on ${repoContext.slack.prLink(\n              pr,\n              context,\n            )} !\\n> ${pr.title}`,\n          });\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { contextPr } from '../context/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequestRemoved(app: Application): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { data: reviews } = await context.github.pulls.listReviews(\n            contextPr(context, { per_page: 50 }),\n          );\n\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const hasApprovedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'APPROVED',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n            ],\n          });\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (repoContext.slack) {\n          repoContext.slack.postMessage(reviewer.login, {\n            text: `:skull_and_crossbones: ${repoContext.slack.mention(\n              sender.login,\n            )} removed the request for your review on ${repoContext.slack.prLink(\n              pr,\n              context,\n            )}`,\n          });\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { contextPr } from '../context/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewSubmitted(app: Application): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const { user: reviewer, state, body } = (context.payload as any).review;\n        if (pr.user.login === reviewer.login) return;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        let merged;\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n              // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n              // includesWaitForGroups: true,\n            },\n          );\n          const { data: reviews } = await context.github.pulls.listReviews(\n            contextPr(context, { per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            state === 'approved';\n\n          const newLabels = await updateReviewStatus(\n            pr,\n            context,\n            repoContext,\n            reviewerGroup,\n            {\n              add: [\n                approved && 'approved',\n                state === 'changes_requested' && 'changesRequested',\n              ],\n              remove: [\n                approved && 'needsReview',\n                !(\n                  hasRequestedReviewsForGroup || state === 'changes_requested'\n                ) && 'requested',\n                state === 'approved' &&\n                  !hasChangesRequestedInReviews &&\n                  'changesRequested',\n                state === 'changes_requested' && 'approved',\n              ],\n            },\n          );\n\n          if (approved && !hasChangesRequestedInReviews) {\n            merged = await autoMergeIfPossible(\n              pr,\n              context,\n              repoContext,\n              newLabels,\n            );\n          }\n        }\n\n        const mention = repoContext.slack.mention(reviewer.login);\n        const prUrl = repoContext.slack.prLink(pr, context);\n\n        const message = (() => {\n          if (state === 'changes_requested') {\n            return `:x: ${mention} requests changes on ${prUrl}`;\n          }\n          if (state === 'approved') {\n            return `:clap: :white_check_mark: ${mention} approves ${prUrl}${\n              merged ? ' and PR is merged :tada:' : ''\n            }`;\n          }\n          return `:speech_balloon: ${mention} commented on ${prUrl}`;\n        })();\n\n        repoContext.slack.postMessage(pr.user.login, {\n          text: message,\n          blocks: [\n            {\n              type: 'section' as const,\n              text: {\n                type: 'mrkdwn' as const,\n                text: message,\n              },\n            },\n          ],\n          secondaryBlocks: !body\n            ? undefined\n            : [\n                {\n                  type: 'section' as const,\n                  text: {\n                    type: 'mrkdwn' as const,\n                    text: body,\n                  },\n                },\n              ],\n        });\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { contextPr } from '../context/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewDismissed(app: Application): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            contextPr(context, { per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: ['needsReview', 'requested'],\n            remove: [\n              !hasChangesRequestedInReviews && 'changesRequested',\n              'approved',\n            ],\n          });\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(pr.user.login, {\n              text: `:skull: ${repoContext.slack.mention(\n                reviewer.login,\n              )} dismissed his review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            });\n          } else {\n            repoContext.slack.postMessage(reviewer.login, {\n              text: `:skull: ${repoContext.slack.mention(\n                sender.login,\n              )} dismissed your review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            });\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function synchronize(app: Application): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n        const previousSha = (context.payload as any).before as string;\n\n        await Promise.all([\n          editOpenedPR(pr, context, repoContext, previousSha),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(\n            pr,\n            context,\n            repoContext,\n            pr.labels,\n            previousSha,\n          ),\n\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n\n        // call autoMergeIfPossible to re-add to the queue when push is fixed\n        await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(app: Application): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        if (\n          sender.type === 'Bot' &&\n          sender.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n        ) {\n          return;\n        }\n\n        const { skipAutoMerge } = await editOpenedPR(pr, context, repoContext);\n        if (!skipAutoMerge) await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateBody } from './utils/updateBody';\nimport { Options } from './utils/prOptions';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const updatePrBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  updateOptions: Partial<Record<Options, boolean>>,\n): Promise<void> => {\n  const { body } = updateBody(\n    pr.body,\n    repoContext.config.prDefaultOptions,\n    undefined,\n    updateOptions,\n  );\n\n  await updatePrIfNeeded(pr, context, repoContext, { body });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { contextPr, contextIssue } from '../context/utils';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrBody } from './actions/updatePrBody';\nimport hasLabelInPR from './actions/utils/hasLabelInPR';\n\nexport default function labelsChanged(app: Application): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context: Context<Webhooks.WebhookPayloadPullRequest>) => {\n      const sender = context.payload.sender;\n      const fromRenovate =\n        sender.type === 'Bot' && sender.login === 'renovate[bot]';\n      context.payload.pull_request.head.ref.startsWith('renovate/');\n\n      if (sender.type === 'Bot' && !fromRenovate) {\n        return;\n      }\n\n      await handlerPullRequestChange(context, async (pr, repoContext) => {\n        const label = (context.payload as any).label;\n        if (fromRenovate) {\n          const codeApprovedLabel = repoContext.labels['code/approved'];\n          const autoMergeLabel = repoContext.labels['merge/automerge'];\n          const autoMergeSkipCiLabel = repoContext.labels['merge/skip-ci'];\n          if (context.payload.action === 'labeled') {\n            if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n              // const { data: reviews } = await context.github.pulls.listReviews(\n              //   contextPr(context, { per_page: 1 }),\n              // );\n              // if (reviews.length !== 0) {\n              await context.github.pulls.createReview(\n                contextPr(context, { event: 'APPROVE' }),\n              );\n              if (autoMergeSkipCiLabel) {\n                await context.github.issues.addLabels(\n                  contextIssue(context, {\n                    labels: [autoMergeSkipCiLabel.name],\n                  }),\n                );\n              }\n              await updateStatusCheckFromLabels(pr, context, repoContext);\n              await updatePrBody(pr, context, repoContext, {\n                autoMergeWithSkipCi: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                autoMerge: hasLabelInPR(pr.labels, autoMergeLabel)\n                  ? true\n                  : repoContext.config.prDefaultOptions.autoMerge,\n              });\n              // }\n            } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n              await updatePrBody(pr, context, repoContext, {\n                autoMerge: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                autoMergeWithSkipCi: hasLabelInPR(pr.labels, codeApprovedLabel)\n                  ? true\n                  : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n              });\n            }\n            await autoMergeIfPossible(pr, context, repoContext);\n          }\n          return;\n        }\n\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              contextIssue(context, { name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              contextIssue(context, { labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(pr, context, repoContext);\n\n        const featureBranchLabel = repoContext.labels['feature-branch'];\n        const automergeLabel = repoContext.labels['merge/automerge'];\n        const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n        const option = (() => {\n          if (featureBranchLabel && label.id === featureBranchLabel.id)\n            return 'featureBranch';\n          if (automergeLabel && label.id === automergeLabel.id)\n            return 'autoMerge';\n          if (skipCiLabel && label.id === skipCiLabel.id)\n            return 'autoMergeWithSkipCi';\n          return null;\n        })();\n\n        if (option) {\n          await updatePrBody(pr, context, repoContext, {\n            [option]: context.payload.action === 'labeled',\n          });\n        } else if (context.payload.action === 'labeled') {\n          if (\n            repoContext.labels['merge/automerge'] &&\n            label.id === repoContext.labels['merge/automerge'].id\n          ) {\n            await autoMergeIfPossible(pr, context, repoContext);\n          }\n        }\n      });\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(app: Application): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  pull_number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(app: Application): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  pull_number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(app: Application): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (\n          context.payload.state !== 'loading' &&\n          isSameBranch(context, lockedPr)\n        ) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reopenedHandler from './pr-handlers/reopened';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchromizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\n\nexport default function initApp(app: Application): void {\n  openedHandler(app);\n  closedHandler(app);\n  reopenedHandler(app);\n  reviewRequestedHandler(app);\n  reviewRequestRemovedHandler(app);\n\n  // app.on('pull_request.closed', async context => {\n\n  // });\n\n  // app.on('pull_request.reopened', async context => {\n\n  // });\n\n  reviewSubmittedHandler(app);\n  reviewDismissedHandler(app);\n  labelsChanged(app);\n  synchromizeHandler(app);\n  editedHandler(app);\n\n  checkrunCompleted(app);\n  checksuiteCompleted(app);\n  status(app);\n}\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\nimport initApp from './initApp';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application): void => {\n  const mongoStores = mongoInit();\n  appRouter(app, mongoStores);\n  initApp(app);\n});\n"],"names":["process","env","MONGO_DB","Error","init","config","Map","MONGO_HOST","MONGO_PORT","MONGO_USER","set","MONGO_PASSWORD","connection","MongoConnection","Layout","lang","title","NAME","children","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","create","client","id","secret","auth","tokenHost","tokenPath","authorizePath","randomBytesPromisified","promisify","randomBytes","randomHex","size","buffer","toString","AUTH_SECRET_KEY","signPromisified","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","strategy","host","hostname","PORT","readAuthCookie","cookie","cookies","algorithm","audience","headers","appRouter","app","router","route","api","use","cookieParser","get","res","redirect","authInfo","octokit","Octokit","accessToken","data","repos","list","per_page","send","renderToStaticMarkup","map","repo","owner","login","name","length","state","maxAge","httpOnly","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error","error_description","code","cookieName","clearCookie","result","getToken","access_token","user","users","getAuthenticated","token","time","Date","now","expiresIn","params","repository","status","permissions","admin","data2","apps","getRepoInstallation","catch","err","undefined","REVIEWFLOW_NAME","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","groups","waitForGroups","teams","labels","color","review","ci","inProgress","succeeded","failed","slackToken","ORNIKAR_SLACK_TOKEN","ignoreRepoPattern","regExp","summary","bot","statusInfoFromMatch","match","issue","inBody","url","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","CamilSadiki","busser","abarreir","arthurflachs","damienorny","darame07","Pixy","Radyum","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","vlbr","mdcarter","design","jperriere","CoralineColasse","Lenamari","ChibiBlasphem","ops","logins","backends","frontends","description","duplicate","documentation","rfc","bug","enhancement","question","wontfix","needsReview","requested","changesRequested","approved","tilap","orgsConfigs","ornikar","options","optionsRegexps","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","defaultConfig","reduce","acc","exec","parseBody","reviewFlowCol","reviewflowContent","ending","reviewFlowColMatch","reviewflowContentCol","reviewflowContentColPrefix","reviewflowContentColSuffix","parseBodyWithOptions","parsedBody","breakingChanges","replace","trim","hasLabelInPR","prLabels","some","l","hasFailedStatusOrChecks","pr","context","checks","github","listForRef","ref","head","sha","failedChecks","check_runs","filter","check","conclusion","log","info","combinedStatus","getCombinedStatusForRef","failedStatuses","statuses","autoMergeIfPossible","repoContext","autoMergeLabel","debug","prId","prNumber","number","removePrFromAutomergeQueue","createMergeLockPrFromPr","branch","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","pushAutomergeQueue","addMergeLockPr","mergeable","prResult","pulls","pull_number","merged","mergeable_state","reschedule","startsWith","body","includes","renovateRebaseBody","issues","update","issue_number","base","merge","mergeResult","merge_method","commit_title","commit_message","Boolean","message","ExcludesFalsy","getLabelsForRepo","listLabelsForRepo","initRepoLabels","finalLabels","labelKey","labelConfig","Object","entries","labelColor","slice","existingLabel","find","createLabel","current_name","updateLabel","getKeys","o","keys","contextIssue","object","payload","pull_request","contextPr","voidTeamSlack","mention","postMessage","Promise","resolve","prLink","initTeamSlack","githubLoginToSlackEmail","groupName","assign","slackClient","WebClient","allUsers","limit","members","values","email","member","profile","console","warn","im","open","channel","membersMap","getUserFromGithubLogin","githubLogin","DRY_RUN","chat","username","text","blocks","attachments","secondaryBlocks","thread_ts","ts","ok","html_url","initTeamContext","slackPromise","githubLoginToGroup","forEach","githubLoginToTeams","teamName","push","getReviewerGroups","githubLogins","Set","getReviewerGroup","getTeamsForLogin","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","group","slack","orgContextsPromise","orgContexts","obtainOrgContext","existingTeamContext","existingPromise","promise","then","orgContext","delete","initRepoContext","reviewGroupNames","needsReviewLabelIds","key","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lock","Lock","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","prNumberOrPrNumbers","callback","reject","logInfos","createReleaseCallback","release","setTimeout","String","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","value","p","repoContextsPromise","repoContexts","shouldIgnoreRepo","repoName","orgConfig","ignoreRepoRegexp","test","obtainRepoContext","existingRepoContext","handlerPullRequestChange","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","type","addAssignees","cleanTitle","s","arg1","arg2","toUpperCase","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","getReplacement","updateBody","updateOptions","parsed","infosAndCommitNotesParagraph","updatedOptions","updateBodyCommitsNotes","commitNotes","reviewflowContentColReplaced","updatePrIfNeeded","hasDiffInTitle","hasDiffInBody","diff","syncLabel","shouldHaveLabel","prHasLabel","onRemove","onAdd","removeLabel","response","addLabels","createStatus","target_url","editOpenedPR","previousSha","skipAutoMerge","isPrFromBot","errorRule","rule","date","toISOString","hasLintPrCheck","all","head_sha","started_at","completed_at","output","featureBranchLabel","automergeLabel","skipCiLabel","prHasFeatureBranchLabel","prHasSkipCiLabel","prHasAutoMergeLabel","defaultOptions","addStatusCheck","hasPrCheck","created_at","updateStatusCheckFromLabels","createFailedStatusCheck","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","existing","team","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","readCommitsAndUpdateInfos","commits","paginate","listCommits","endpoint","conventionalCommits","c","parse","commit","breakingChangesCommits","index","breakingChangesNotes","notes","note","breakingChangesLabel","newBody","opened","on","fromRenovate","closed","git","deleteRef","reviewRequested","sender","reviewer","requested_reviewer","reviews","listReviews","hasChangesRequestedInReviews","reviewRequestRemoved","hasRequestedReviewsForGroup","hasApprovedInReviews","reviewSubmitted","newLabels","prUrl","reviewDismissed","synchronize","before","edited","updatePrBody","labelsChanged","autoMergeSkipCiLabel","action","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","initApp","openedHandler","closedHandler","reopenedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchromizeHandler","editedHandler","Probot","run","mongoStores","mongoInit"],"mappings":"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"}