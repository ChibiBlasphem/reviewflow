{"version":3,"file":"index-node10.cjs.js","sources":["../src/teamconfigs/ornikar.ts","../src/teamconfigs/christophehurpeau.ts","../src/teamconfigs/index.ts","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/teamContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/index.ts"],"sourcesContent":["import { Config } from './types';\n\nconst config: Config<'dev' | 'design'> = {\n  slackToken: process.env.ORNIKAR_SLACK_TOKEN,\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s(ONK-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      skyline42sh: `alexandre.charbonnier${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      rigma: `romain${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      tilap: `julien.lavinh${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      '63m29': `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFD57F',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#B2E1FF',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev'> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/delete-branch': {\n        name: ':recycle: delete branch after merge',\n        color: '#64DD17',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<GroupNames extends string = any> = ConfigType<GroupNames>;\n\nexport const teamConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n};\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","export type Options = 'featureBranch' | 'deleteAfterMerge';\n\nexport const options: Options[] = ['featureBranch', 'deleteAfterMerge'];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[[ xX]]\\\\s*<!-- renovate-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->.*<!---? end - don't add anything after this -?-->).*$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\nconst parseOptions = (\n  content: string,\n  defaultConfig: Record<Options, boolean>,\n): Record<Options, boolean> => {\n  return optionsRegexps.reduce(\n    (acc, { name, regexp }) => {\n      const match = regexp.exec(content);\n      acc[name] = !match\n        ? defaultConfig[name] || false\n        : match[1] === 'x' || match[2] === 'X';\n      return acc;\n    },\n    {} as any,\n  ) as Record<Options, boolean>;\n};\n\nexport const parseBody = (\n  description: string,\n  defaultConfig: Record<Options, boolean>,\n) => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) return null;\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options: parseOptions(reviewflowContentCol, defaultConfig),\n  };\n};\n","/* eslint-disable max-lines */\nimport { Context } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBody } from './utils/parseBody';\n\nconst hasFailedStatusOrChecks = async (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const hasFailedChecks = checks.data.check_runs.some(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (hasFailedChecks) return true;\n\n  const statuses = await context.github.repos.listStatusesForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const hasFailedStatuses = statuses.data.some(\n    (status) => status.state === 'failure',\n  );\n\n  return hasFailedStatuses;\n};\n\nexport const autoMergeIfPossible = async (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any = context.payload.pull_request,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n  if (!autoMergeLabel) return false;\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (!prLabels.find((l: LabelResponse) => l.id === autoMergeLabel.id)) {\n    context.log.debug('automerge not possible: no label');\n    repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    return false;\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels');\n    // repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && lockedPr.number !== pr.number) {\n    context.log.info(`automerge not possible: locked pr ${pr.id}`);\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    context.log.info(`automerge not possible: already merged pr ${pr.id}`);\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, mergeable=${pr.mergeable} state=${\n      pr.mergeable_state\n    }`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        await context.github.issues.update(\n          context.repo({\n            number: pr.number,\n            body: pr.body.replace(\n              '[ ] <!-- renovate-rebase -->',\n              '[x] <!-- renovate-rebase -->',\n            ),\n          }),\n        );\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(context, repoContext, pr)) {\n        context.log.info(\n          `automerge not possible: renovate with failed status pr ${pr.id}`,\n        );\n        repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${\n          pr.mergeable_state\n        }`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(context, repoContext, pr)) {\n        context.log.info(`automerge not possible: failed status pr ${pr.id}`);\n        repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch');\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        base: pr.head.name,\n        head: pr.head.name,\n      });\n\n      return false;\n    }\n\n    repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${\n        pr.mergeable_state\n      }`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n    const parsedBody = parseBody(pr.body, repoContext.config.prDefaultOptions);\n    const mergeResult = await context.github.pulls.merge({\n      merge_method:\n        parsedBody && parsedBody.options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      number: pr.number,\n      commit_title: `${pr.title} (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr());\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","import { Context } from 'probot';\nimport { Config } from '../teamconfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = `Generated by review-flow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor // ||\n      // TODO: description is never updated\n      // existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","export const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n","import { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Config } from '../teamconfigs';\nimport { getKeys } from './utils';\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  postMessage: (githubLogin: string, text: string) => Promise<void>;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<TeamSlack> => {\n  if (!config.slackToken) {\n    return {\n      mention: (githubLogin: string) => '',\n      postMessage: (githubLogin: string, text: string) => Promise.resolve(),\n    };\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackClient = new WebClient(config.slackToken);\n  const allUsers: any = await slackClient.users.list({ limit: 200 });\n  const members: [string, { member: any; im: any }][] = Object.values(\n    githubLoginToSlackEmail,\n  )\n    .map((email) => {\n      const member = allUsers.members.find(\n        (user: any) => user.profile.email === email,\n      );\n      if (!member) {\n        console.warn(`Could not find user ${email}`);\n        return;\n      }\n      return [email, { member, im: undefined }] as [\n        string,\n        { member: any; im: any }\n      ];\n    })\n    .filter(ExcludesFalsy);\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string) => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (githubLogin: string, text: string) => {\n      context.log.info('send slack', { githubLogin, text });\n      if (process.env.DRY_RUN) return;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return;\n      await slackClient.chat.postMessage({\n        channel: user.im.id,\n        text,\n      });\n    },\n  };\n};\n","import { Context } from 'probot';\nimport { Config } from '../teamconfigs';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface TeamContext<GroupNames extends string = any> {\n  config: Config<GroupNames>;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n}\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nconst initTeamContext = async (\n  context: Context<any>,\n  config: Config,\n): Promise<TeamContext> => {\n  const slackPromise = initTeamSlack(context, config);\n\n  const githubLoginToGroup = getKeys(config.groups).reduce<Map<string, string>>(\n    (acc, groupName) => {\n      Object.keys(config.groups[groupName]).forEach((login) => {\n        acc.set(login, groupName);\n      });\n      return acc;\n    },\n    new Map(),\n  );\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  return {\n    config,\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst teamContextsPromise = new Map();\nconst teamContexts = new Map();\n\nexport const obtainTeamContext = (\n  context: Context<any>,\n  config: Config,\n): Promise<TeamContext> => {\n  const owner = context.payload.repository.owner;\n\n  const existingTeamContext = teamContexts.get(owner.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = teamContextsPromise.get(owner.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(context, config);\n  teamContextsPromise.set(owner.login, promise);\n\n  return promise.then((teamContext) => {\n    teamContextsPromise.delete(owner.login);\n    teamContexts.set(owner.login, teamContext);\n    return teamContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { teamConfigs, Config } from '../teamconfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainTeamContext, TeamContext } from './teamContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removeMergeLockedPr(context: Context<any>, pr: LockedMergePr): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport type RepoContext<GroupNames extends string = any> = TeamContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const teamContext = await obtainTeamContext(context, config);\n  const repoContext = Object.create(teamContext);\n\n  const [labels] = await Promise.all([initRepoLabels(context, config)]);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  const automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      console.log('lock: try to lock pr', { prIdOrIds });\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        console.log('lock: lock acquired', { prIdOrIds });\n        try {\n          await callback();\n        } catch (err) {\n          console.log('lock: release pr (with error)', { prIdOrIds });\n          release();\n          reject(err);\n          return;\n        }\n        console.log('lock: release pr', { prIdOrIds });\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', () => {\n        return lockPROrPRS(String(pr.id), async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(context, repoContext, prResult.data);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds: [\n      ...requestedReviewLabelIds,\n      ...changesRequestedLabelIds,\n      ...approvedReviewLabelIds,\n    ],\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', pr);\n      if (lockMergePr && lockMergePr.number === pr.number) return;\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removeMergeLockedPr: (context, pr: LockedMergePr): void => {\n      console.log('merge lock: remove', pr);\n      if (!lockMergePr || lockMergePr.number !== pr.number) return;\n      lockMergePr = automergeQueue.shift();\n      console.log('merge lock: next', lockMergePr);\n      if (lockMergePr) {\n        reschedule(context, lockMergePr);\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const obtainRepoContext = (\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const owner = context.payload.repository.owner;\n  if (!teamConfigs[owner.login]) {\n    console.warn(owner.login, Object.keys(teamConfigs));\n    return null;\n  }\n  const key = context.payload.repository.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initRepoContext(context, teamConfigs[owner.login]);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { obtainRepoContext, RepoContext } from '../context/repoContext';\n\nexport type Handler<T = any> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => Promise<void>;\n\nexport type CallbackWithRepoContext = (\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  callback: CallbackWithRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  repoContext.lockPROrPRS(String(context.payload.pull_request.id), async () => {\n    await callback(repoContext);\n  });\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  callback: CallbackContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(context, (repoContext) =>\n    callback(context, repoContext),\n  );\n};\n\nexport const createHandlerPullRequestsChange = <T>(\n  getPullRequests: (context: Context<T>, repoContext: RepoContext) => any[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>) => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(prs.map((pr) => String(pr.id)), () =>\n    callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Handler } from '../utils';\n\nexport const autoAssignPRToCreator: Handler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (context, repoContext) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n\n  const pr = context.payload.pull_request;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    context.issue({\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(/[\\s-]+\\[?\\s*(ONK-\\d+)\\s*]?\\s*$/, ' $1')\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../teamconfigs/types';\nimport { parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\nexport const updateBody = (\n  description: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n) => {\n  const parsed = parseBody(description, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return description;\n  }\n  const {\n    content,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  return `${content}${reviewflowContentColPrefix}\n${\n  infos && infos.length !== 0 ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n` : ''\n}#### Options:\n${toMarkdownOptions(options)}\n${reviewflowContentColSuffix}\n`;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { StatusError, StatusInfo } from '../../teamconfigs/types';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const editOpenedPR = async (\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<void> => {\n  const repo = context.payload.repository;\n  const pr = context.payload.pull_request;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return;\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(pr.title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check) => check.name === `${process.env.NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(({ name, error, info }) =>\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.NAME}/${name}`,\n            sha: pr.head.sha,\n            state: (error ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: error ? undefined : (info as StatusInfo).url,\n            description: error ? error.title : (info as StatusInfo).title,\n          }),\n        ),\n      ),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck &&\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.NAME}/lint-pr`,\n            sha: pr.head.sha,\n            state: (errorRule ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: undefined,\n            description: errorRule\n              ? errorRule.error.title\n              : '✓ Your PR is valid',\n          }),\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const body = updateBody(\n    pr.body,\n    repoContext.config.prDefaultOptions,\n    statuses\n      .filter((status) => status.info && status.info.inBody)\n      .map((status) => status.info) as StatusInfo[],\n  );\n\n  if (pr.title !== title || pr.body !== body) {\n    pr.title = title;\n    pr.body = body;\n    await context.github.issues.update(\n      context.issue({\n        title,\n        body,\n      }),\n    );\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\n\nconst addStatusCheck = async function<\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<E>,\n  pr: any,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n): Promise<void> {\n  const hasPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find((check) => check.name === process.env.NAME);\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else {\n    await context.github.repos.createStatus(\n      context.repo({\n        context: process.env.NAME,\n        sha: pr.head.sha,\n        state,\n        target_url: undefined,\n        description,\n      }),\n    );\n  }\n};\n\nconst createFailedStatusCheck = <E extends Webhooks.WebhookPayloadPullRequest>(\n  context: Context<E>,\n  pr: any,\n  description: string,\n): Promise<void> =>\n  addStatusCheck(context, pr, {\n    state: 'failure',\n    description,\n  });\n\nexport const updateStatusCheckFromLabels = (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any = context.payload.pull_request,\n  labels: LabelResponse[] = pr.labels || [],\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l && l.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        context,\n        pr,\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(context, pr, {\n    state: 'success',\n    description: '✓ PR ready to merge !',\n  });\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../teamconfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends Webhooks.WebhookPayloadPullRequest,\n  GroupNames extends string = any\n>(\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  const pr = context.payload.pull_request;\n  let prLabels = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels>();\n  const toDelete = new Set<GroupLabels>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (\n        !label ||\n        prLabels.some((prLabel: LabelResponse) => prLabel.id === label.id)\n      ) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find(\n        (prLabel: LabelResponse) => prLabel.id === label.id,\n      );\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n      }\n    });\n  }\n\n  const newLabelNamesArray = [...newLabelNames];\n\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    toAdd: [...toAdd],\n    toDelete: [...toDelete],\n    oldLabels: prLabels.map((l: LabelResponse) => l.name),\n    newLabelNames: newLabelNamesArray,\n  });\n\n  // if (process.env.DRY_RUN) return;\n\n  if (toAdd.size || toDelete.size) {\n    const result = await context.github.issues.replaceLabels(\n      context.issue({\n        labels: newLabelNamesArray,\n      }),\n    );\n    prLabels = result.data;\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(context, repoContext, pr, prLabels);\n  // }\n\n  return prLabels;\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      await Promise.all([\n        autoAssignPRToCreator(context, repoContext),\n        editOpenedPR(context, repoContext),\n        context.payload.pull_request.head.ref.startsWith('renovate/')\n          ? Promise.resolve(undefined)\n          : updateReviewStatus(context, repoContext, 'dev', {\n              add: ['needsReview'],\n            }),\n      ]);\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBody } from './actions/utils/parseBody';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const repo = context.payload.repository;\n      const pr = context.payload.pull_request;\n\n      if (pr.merged) {\n        const parsedBody =\n          pr.head.repo.id === repo.id &&\n          parseBody(pr.body, repoContext.config.prDefaultOptions);\n        const createMergeLockPrFromPr = () => ({\n          id: pr.id,\n          number: pr.number,\n          branch: pr.head.ref,\n        });\n        await Promise.all([\n          repoContext.removeMergeLockedPr(context, createMergeLockPrFromPr()),\n          parsedBody && parsedBody.options.deleteAfterMerge\n            ? context.github.git\n                .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                .catch(() => {})\n            : undefined,\n        ]);\n      } else {\n        await Promise.all([\n          updateReviewStatus(context, repoContext, 'dev', {\n            remove: ['needsReview'],\n          }),\n        ]);\n      }\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const sender = context.payload.sender;\n\n      // ignore if sender is self (dismissed review rerequest review)\n      if (sender.type === 'Bot') return;\n\n      const pr = context.payload.pull_request;\n      const reviewer = (context.payload as any).requested_reviewer;\n\n      const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n      const shouldWait = false;\n      // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n      if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n        const { data: reviews } = await context.github.pulls.listReviews(\n          context.issue({ per_page: 50 }),\n        );\n        const hasChangesRequestedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'REQUEST_CHANGES' &&\n            // In case this is a rerequest for review\n            review.user.login !== reviewer.login,\n        );\n\n        if (!hasChangesRequestedInReviews) {\n          await updateReviewStatus(context, repoContext, reviewerGroup, {\n            add: ['needsReview', !shouldWait && 'requested'],\n            remove: ['approved', 'changesRequested'],\n          });\n        }\n      }\n\n      if (sender.login === reviewer.login) return;\n\n      if (!shouldWait && repoContext.slack) {\n        repoContext.slack.postMessage(\n          reviewer.login,\n          `:eyes: ${repoContext.slack.mention(\n            sender.login,\n          )} requests your review on ${pr.html_url} !\\n> ${pr.title}`,\n        );\n      }\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const sender = context.payload.sender;\n      const pr = context.payload.pull_request;\n      const reviewer = (context.payload as any).requested_reviewer;\n\n      const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n      if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n        const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n          reviewerGroup,\n          pr.requested_reviewers,\n          {\n            includesReviewerGroup: true,\n          },\n        );\n\n        const { data: reviews } = await context.github.pulls.listReviews(\n          context.issue({ per_page: 50 }),\n        );\n\n        const hasChangesRequestedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'REQUEST_CHANGES',\n        );\n\n        const hasApprovedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'APPROVED',\n        );\n\n        const approved =\n          !hasRequestedReviewsForGroup &&\n          !hasChangesRequestedInReviews &&\n          hasApprovedInReviews;\n        await updateReviewStatus(context, repoContext, reviewerGroup, {\n          add: [\n            // if changes requested by the one which requests was removed\n            hasChangesRequestedInReviews && 'changesRequested',\n            // if was already approved by another member in the group and has no other requests waiting\n            approved && 'approved',\n          ],\n          // remove labels if has no other requests waiting\n          remove: [\n            approved && 'needsReview',\n            !hasRequestedReviewsForGroup &&\n              !hasChangesRequestedInReviews &&\n              'requested',\n          ],\n        });\n      }\n\n      if (sender.login === reviewer.login) return;\n\n      if (repoContext.slack) {\n        repoContext.slack.postMessage(\n          reviewer.login,\n          `:skull_and_crossbones: ${repoContext.slack.mention(\n            sender.login,\n          )} removed the request for your review on ${pr.html_url}`,\n        );\n      }\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const pr = context.payload.pull_request;\n      const { user: reviewer, state } = (context.payload as any).review;\n      if (pr.user.login === reviewer.login) return;\n\n      const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n      let merged;\n\n      if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n        const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n          reviewerGroup,\n          pr.requested_reviewers,\n          {\n            includesReviewerGroup: true,\n            // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n            // includesWaitForGroups: true,\n          },\n        );\n        const { data: reviews } = await context.github.pulls.listReviews(\n          context.issue({ per_page: 50 }),\n        );\n        const hasChangesRequestedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'REQUEST_CHANGES',\n        );\n\n        const approved =\n          !hasRequestedReviewsForGroup &&\n          !hasChangesRequestedInReviews &&\n          state === 'approved';\n\n        const newLabels = await updateReviewStatus(\n          context,\n          repoContext,\n          reviewerGroup,\n          {\n            add: [\n              approved && 'approved',\n              state === 'changes_requested' && 'changesRequested',\n            ],\n            remove: [\n              approved && 'needsReview',\n              !(hasRequestedReviewsForGroup || state === 'changes_requested') &&\n                'requested',\n              state === 'approved' &&\n                !hasChangesRequestedInReviews &&\n                'changesRequested',\n              state === 'changes_requested' && 'approved',\n            ],\n          },\n        );\n\n        if (approved && !hasChangesRequestedInReviews) {\n          merged = await autoMergeIfPossible(\n            context,\n            repoContext,\n            pr,\n            newLabels,\n          );\n        }\n      }\n\n      const mention = repoContext.slack.mention(reviewer.login);\n      const prUrl = pr.html_url;\n\n      const message = (() => {\n        if (state === 'changes_requested') {\n          return `:x: ${mention} requests changes on ${prUrl}`;\n        }\n        if (state === 'approved') {\n          return `:clap: :white_check_mark: ${mention} approves ${prUrl}${\n            merged ? ' and PR is merged :tada:' : ''\n          }`;\n        }\n        return `:speech_balloon: ${mention} commented on ${prUrl}`;\n      })();\n\n      repoContext.slack.postMessage(pr.user.login, message);\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const sender = context.payload.sender;\n      const pr = context.payload.pull_request;\n      const reviewer = (context.payload as any).review.user;\n\n      const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n      if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n        const { data: reviews } = await context.github.pulls.listReviews(\n          context.issue({ per_page: 50 }),\n        );\n        const hasChangesRequestedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'REQUEST_CHANGES',\n        );\n\n        await updateReviewStatus(context, repoContext, reviewerGroup, {\n          add: ['needsReview', 'requested'],\n          remove: [\n            !hasChangesRequestedInReviews && 'changesRequested',\n            'approved',\n          ],\n        });\n      }\n\n      if (repoContext.slack) {\n        if (sender.login === reviewer.login) {\n          repoContext.slack.postMessage(\n            pr.user.login,\n            `:skull: ${repoContext.slack.mention(\n              reviewer.login,\n            )} dismissed his review on ${pr.html_url}`,\n          );\n        } else {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:skull: ${repoContext.slack.mention(\n              sender.login,\n            )} dismissed your review on ${pr.html_url}`,\n          );\n        }\n      }\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      // old and new sha\n      // const { before, after } = context.payload;\n\n      await Promise.all([\n        editOpenedPR(context, repoContext),\n        // addStatusCheckToLatestCommit\n        updateStatusCheckFromLabels(context, repoContext),\n      ]);\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      await editOpenedPR(context, repoContext);\n\n      await autoMergeIfPossible(context, repoContext);\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\n\nexport default (app: Application) => {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context) => {\n      const sender = context.payload.sender;\n      if (sender.type === 'Bot') return;\n\n      await handlerPullRequestChange(context, async (repoContext) => {\n        const label = context.payload.label;\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              context.issue({ name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              context.issue({ labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(context, repoContext);\n\n        if (\n          context.payload.action === 'labeled' &&\n          label.id ===\n            (repoContext.labels['merge/automerge'] &&\n              repoContext.labels['merge/automerge'].id)\n        ) {\n          await autoMergeIfPossible(context, repoContext);\n        }\n      });\n    },\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default (app: Application) => {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(context, repoContext, prResult.data);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default (app: Application) => {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(context, repoContext, prResult.data);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n) => {\n  if (!lockedPr) return false;\n  return context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default (app: Application) => {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      (context, repoContext) => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (isSameBranch(context, lockedPr)) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext) => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n};\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchromizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\n\nif (!process.env.NAME) process.env.NAME = 'reviewflow';\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application) => {\n  openedHandler(app);\n  closedHandler(app);\n  reviewRequestedHandler(app);\n  reviewRequestRemovedHandler(app);\n\n  // app.on('pull_request.closed', async context => {\n\n  // });\n\n  // app.on('pull_request.reopened', async context => {\n\n  // });\n\n  reviewSubmittedHandler(app);\n  reviewDismissedHandler(app);\n  labelsChanged(app);\n  synchromizeHandler(app);\n  editedHandler(app);\n\n  checkrunCompleted(app);\n  checksuiteCompleted(app);\n  status(app);\n});\n"],"names":["config","slackToken","process","env","ORNIKAR_SLACK_TOKEN","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","deleteAfterMerge","parsePR","title","regExp","error","summary","bot","status","statusInfoFromMatch","match","issue","inBody","url","groups","dev","abarreir","ORNIKAR_EMAIL_DOMAIN","christophehurpeau","arthurflachs","skyline42sh","LentnerStefan","HugoGarrido","CorentinAndre","rigma","Mxime","damienorny","tilap","design","jperriere","CoralineColasse","waitForGroups","labels","list","name","color","review","ci","inProgress","succeeded","failed","needsReview","requested","changesRequested","approved","teamConfigs","ornikar","options","optionsRegexps","map","option","regexp","RegExp","optionsLabels","label","regexpCols","regexpReviewflowCol","parseOptions","content","defaultConfig","reduce","acc","exec","parseBody","description","reviewFlowCol","reviewFlowColMatch","reviewflowContentColPrefix","reviewflowContentCol","reviewflowContentColSuffix","hasFailedStatusOrChecks","context","repoContext","pr","checks","github","listForRef","repo","ref","head","sha","per_page","hasFailedChecks","data","check_runs","some","check","conclusion","statuses","repos","listStatusesForRef","hasFailedStatuses","state","autoMergeIfPossible","payload","pull_request","prLabels","autoMergeLabel","createMergeLockPrFromPr","id","number","branch","find","l","log","debug","removeMergeLockedPr","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","info","pushAutomergeQueue","addMergeLockPr","mergeable","undefined","prResult","pulls","get","merged","mergeable_state","reschedule","startsWith","issues","update","body","replace","merge","owner","login","base","parsedBody","mergeResult","merge_method","commit_title","commit_message","Boolean","err","message","initRepoLabels","listLabelsForRepo","finalLabels","labelKey","labelConfig","Object","entries","labelColor","slice","existingLabel","result","createLabel","current_name","updateLabel","getKeys","o","keys","ExcludesFalsy","initTeamSlack","mention","postMessage","Promise","resolve","githubLoginToSlackEmail","groupName","assign","slackClient","WebClient","allUsers","users","limit","members","values","email","member","user","profile","console","warn","im","filter","open","channel","membersMap","Map","getUserFromGithubLogin","githubLogin","text","DRY_RUN","chat","initTeamContext","slackPromise","githubLoginToGroup","forEach","set","getReviewerGroups","githubLogins","Set","getReviewerGroup","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","includes","group","slack","teamContextsPromise","teamContexts","obtainTeamContext","repository","existingTeamContext","existingPromise","promise","then","teamContext","delete","initRepoContext","create","all","reviewGroupNames","needsReviewLabelIds","key","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","labelIdToGroupName","reviewGroupLabels","lock","Lock","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","callback","reject","createReleaseCallback","release","Error","setTimeout","String","protectedLabelIds","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","p","push","repoContextsPromise","repoContexts","obtainRepoContext","existingRepoContext","handlerPullRequestChange","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","length","autoAssignPRToCreator","assignees","type","addAssignees","cleanTitle","trim","s","arg1","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","updateBody","parsed","editOpenedPR","isPrFromBot","errorRule","rule","date","Date","toISOString","hasLintPrCheck","NAME","createStatus","target_url","head_sha","started_at","completed_at","output","addStatusCheck","hasPrCheck","created_at","createFailedStatusCheck","updateStatusCheckFromLabels","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toDelete","getLabelFromKey","reviewConfig","prLabel","existing","newLabelNamesArray","oldLabels","size","replaceLabels","app","on","git","deleteRef","catch","sender","reviewer","requested_reviewer","reviews","listReviews","hasChangesRequestedInReviews","html_url","hasRequestedReviewsForGroup","hasApprovedInReviews","newLabels","prUrl","action","removeLabel","addLabels","check_run","pull_requests","check_suite","isSameBranch","branches","b","Probot","run","openedHandler","closedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","labelsChanged","synchromizeHandler","editedHandler","checkrunCompleted","checksuiteCompleted"],"mappings":"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"}