{"version":3,"file":"index-node10.cjs.js","sources":["../src/teamconfigs/ornikar.ts","../src/teamconfigs/christophehurpeau.ts","../src/teamconfigs/index.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/teamContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/lintPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/index.ts"],"sourcesContent":["import { Config } from './types';\n\nconst config: Config<'dev' | 'design'> = {\n  slackToken: process.env.ORNIKAR_SLACK_TOKEN,\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: true,\n  prLint: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s(ONK-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      skyline42sh: `alexandre.charbonnier${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      rigma: `romain${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      tilap: `julien.lavinh${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      '63m29': `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFD57F',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#B2E1FF',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev'> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prLint: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/delete-branch': {\n        name: ':recycle: delete branch after merge',\n        color: '#64DD17',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<GroupNames extends string = any> = ConfigType<GroupNames>;\n\nexport const teamConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n};\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","import { Context } from 'probot';\nimport { Config } from '../teamconfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = `Generated by review-flow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor // ||\n      // TODO: description is never updated\n      // existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","export const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n","import { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Config } from '../teamconfigs';\nimport { getKeys } from './utils';\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  postMessage: (githubLogin: string, text: string) => Promise<void>;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<TeamSlack> => {\n  if (!config.slackToken) {\n    return {\n      mention: (githubLogin: string) => '',\n      postMessage: (githubLogin: string, text: string) => Promise.resolve(),\n    };\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackClient = new WebClient(config.slackToken);\n  const allUsers: any = await slackClient.users.list({ limit: 200 });\n  const members: [string, { member: any; im: any }][] = Object.values(\n    githubLoginToSlackEmail,\n  )\n    .map((email) => {\n      const member = allUsers.members.find(\n        (user: any) => user.profile.email === email,\n      );\n      if (!member) {\n        console.warn(`Could not find user ${email}`);\n        return;\n      }\n      return [email, { member, im: undefined }] as [\n        string,\n        { member: any; im: any }\n      ];\n    })\n    .filter(ExcludesFalsy);\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string) => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (githubLogin: string, text: string) => {\n      context.log.info('send slack', { githubLogin, text });\n      if (process.env.DRY_RUN) return;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return;\n      await slackClient.chat.postMessage({\n        channel: user.im.id,\n        text,\n      });\n    },\n  };\n};\n","import { Context } from 'probot';\nimport { Config } from '../teamconfigs';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface TeamContext<GroupNames extends string = any> {\n  config: Config<GroupNames>;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n}\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nconst initTeamContext = async (\n  context: Context<any>,\n  config: Config,\n): Promise<TeamContext> => {\n  const slackPromise = initTeamSlack(context, config);\n\n  const githubLoginToGroup = getKeys(config.groups).reduce<Map<string, string>>(\n    (acc, groupName) => {\n      Object.keys(config.groups[groupName]).forEach((login) => {\n        acc.set(login, groupName);\n      });\n      return acc;\n    },\n    new Map(),\n  );\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  return {\n    config,\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst teamContextsPromise = new Map();\nconst teamContexts = new Map();\n\nexport const obtainTeamContext = (\n  context: Context<any>,\n  config: Config,\n): Promise<TeamContext> => {\n  const owner = context.payload.repository.owner;\n\n  const existingTeamContext = teamContexts.get(owner.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = teamContextsPromise.get(owner.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(context, config);\n  teamContextsPromise.set(owner.login, promise);\n\n  return promise.then((teamContext) => {\n    teamContextsPromise.delete(owner.login);\n    teamContexts.set(owner.login, teamContext);\n    return teamContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { teamConfigs, Config } from '../teamconfigs';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainTeamContext, TeamContext } from './teamContext';\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport type RepoContext<GroupNames extends string = any> = TeamContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const teamContext = await obtainTeamContext(context, config);\n  const repoContext = Object.create(teamContext);\n\n  const labels = await initRepoLabels(context, config);\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds: [\n      ...requestedReviewLabelIds,\n      ...changesRequestedLabelIds,\n      ...approvedReviewLabelIds,\n    ],\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    lockPROrPRS: (prIdOrIds, callback): Promise<void> =>\n      new Promise((resolve, reject) => {\n        console.log('lock: try to lock pr', { prIdOrIds });\n        lock(prIdOrIds, async (createReleaseCallback) => {\n          const release = createReleaseCallback(() => {});\n          console.log('lock: lock acquired', { prIdOrIds });\n          try {\n            await callback();\n          } catch (err) {\n            console.log('lock: release pr (with error)', { prIdOrIds });\n            release();\n            reject(err);\n            return;\n          }\n          console.log('lock: release pr', { prIdOrIds });\n          release();\n          resolve();\n        });\n      }),\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const obtainRepoContext = (\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const owner = context.payload.repository.owner;\n  if (!teamConfigs[owner.login]) {\n    console.warn(owner.login, Object.keys(teamConfigs));\n    return null;\n  }\n  const key = context.payload.repository.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initRepoContext(context, teamConfigs[owner.login]);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { obtainRepoContext, RepoContext } from '../context/repoContext';\n\nexport type Handler<T = any> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => Promise<void>;\n\nexport type CallbackWithRepoContext = (\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  callback: CallbackWithRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  repoContext.lockPROrPRS(String(context.payload.pull_request.id), async () => {\n    await callback(repoContext);\n  });\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  callback: CallbackContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(context, (repoContext) =>\n    callback(context, repoContext),\n  );\n};\n\nexport const createHandlerPullRequestsChange = <T>(\n  getPullRequests: (context: Context<T>) => any[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>) => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  return repoContext.lockPROrPRS(\n    getPullRequests(context).map((pr) => String(pr.id)),\n    () => callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Handler } from '../utils';\n\nexport const autoAssignPRToCreator: Handler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (context, repoContext) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n\n  const pr = context.payload.pull_request;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    context.issue({\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(/[\\s-]+\\[?\\s*(ONK-\\d+)\\s*]?\\s*$/, ' $1')\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { cleanTitle } from './utils/cleanTitle';\n\nexport const editOpenedPR = (\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n) => {\n  if (!repoContext.config.trimTitle) return;\n\n  const pr = context.payload.pull_request;\n  const title = cleanTitle(pr.title);\n\n  if (pr.title !== title) {\n    pr.title = title;\n    context.github.issues.update(\n      context.issue({\n        title,\n      }),\n    );\n  }\n};\n","import { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { StatusError, StatusInfo } from '../../teamconfigs/types';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const lintPR = async (\n  context: Context<any>,\n  repoContext: RepoContext,\n) => {\n  if (!repoContext.config.prLint) return;\n\n  const repo = context.payload.repository;\n  const pr = context.payload.pull_request;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.prLint.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(pr.title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check) => check.name === `${process.env.NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(({ name, error, info }) =>\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.NAME}/${name}`,\n            sha: pr.head.sha,\n            state: (error ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: error ? undefined : (info as StatusInfo).url,\n            description: error ? error.title : (info as StatusInfo).title,\n          }),\n        ),\n      ),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck &&\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.NAME}/lint-pr`,\n            sha: pr.head.sha,\n            state: (errorRule ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: undefined,\n            description: errorRule\n              ? errorRule.error.title\n              : '✓ Your PR is valid',\n          }),\n        ),\n    ].filter(ExcludesFalsy),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\n\nconst addStatusCheck = async function<\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<E>,\n  pr: any,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n): Promise<void> {\n  const hasPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find((check) => check.name === process.env.NAME);\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else {\n    await context.github.repos.createStatus(\n      context.repo({\n        context: process.env.NAME,\n        sha: pr.head.sha,\n        state,\n        target_url: undefined,\n        description,\n      }),\n    );\n  }\n};\n\nconst createFailedStatusCheck = <E extends Webhooks.WebhookPayloadPullRequest>(\n  context: Context<E>,\n  pr: any,\n  description: string,\n): Promise<void> =>\n  addStatusCheck(context, pr, {\n    state: 'failure',\n    description,\n  });\n\nexport const updateStatusCheckFromLabels = (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any = context.payload.pull_request,\n  labels: LabelResponse[] = pr.labels || [],\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l && l.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        context,\n        pr,\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(context, pr, {\n    state: 'success',\n    description: '✓ PR ready to merge !',\n  });\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../teamconfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends Webhooks.WebhookPayloadPullRequest,\n  GroupNames extends string = any\n>(\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  const pr = context.payload.pull_request;\n  let prLabels = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels>();\n  const toDelete = new Set<GroupLabels>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (\n        !label ||\n        prLabels.some((prLabel: LabelResponse) => prLabel.id === label.id)\n      ) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find(\n        (prLabel: LabelResponse) => prLabel.id === label.id,\n      );\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n      }\n    });\n  }\n\n  const newLabelNamesArray = [...newLabelNames];\n\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    toAdd: [...toAdd],\n    toDelete: [...toDelete],\n    oldLabels: prLabels.map((l: LabelResponse) => l.name),\n    newLabelNames: newLabelNamesArray,\n  });\n\n  // if (process.env.DRY_RUN) return;\n\n  if (toAdd.size || toDelete.size) {\n    const result = await context.github.issues.replaceLabels(\n      context.issue({\n        labels: newLabelNamesArray,\n      }),\n    );\n    prLabels = result.data;\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(context, repoContext, pr, prLabels);\n  // }\n\n  return prLabels;\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { lintPR } from './actions/lintPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      await Promise.all([\n        autoAssignPRToCreator(context, repoContext),\n        editOpenedPR(context, repoContext),\n        lintPR(context, repoContext),\n        updateReviewStatus(context, repoContext, 'dev', {\n          add: ['needsReview'],\n        }),\n      ]);\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const sender = context.payload.sender;\n\n      // ignore if sender is self (dismissed review rerequest review)\n      if (sender.type === 'Bot') return;\n\n      const pr = context.payload.pull_request;\n      const reviewer = (context.payload as any).requested_reviewer;\n\n      const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n      const shouldWait = false;\n      // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n      if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n        const { data: reviews } = await context.github.pulls.listReviews(\n          context.issue({ per_page: 50 }),\n        );\n        const hasChangesRequestedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'REQUEST_CHANGES' &&\n            // In case this is a rerequest for review\n            review.user.login !== reviewer.login,\n        );\n\n        if (!hasChangesRequestedInReviews) {\n          await updateReviewStatus(context, repoContext, reviewerGroup, {\n            add: ['needsReview', !shouldWait && 'requested'],\n            remove: ['approved', 'changesRequested'],\n          });\n        }\n      }\n\n      if (sender.login === reviewer.login) return;\n\n      if (!shouldWait && repoContext.slack) {\n        repoContext.slack.postMessage(\n          reviewer.login,\n          `:eyes: ${repoContext.slack.mention(\n            sender.login,\n          )} requests your review on ${pr.html_url} !\\n> ${pr.title}`,\n        );\n      }\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const sender = context.payload.sender;\n      const pr = context.payload.pull_request;\n      const reviewer = (context.payload as any).requested_reviewer;\n\n      const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n      if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n        const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n          reviewerGroup,\n          pr.requested_reviewers,\n          {\n            includesReviewerGroup: true,\n          },\n        );\n\n        const { data: reviews } = await context.github.pulls.listReviews(\n          context.issue({ per_page: 50 }),\n        );\n\n        const hasChangesRequestedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'REQUEST_CHANGES',\n        );\n\n        const hasApprovedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'APPROVED',\n        );\n\n        const approved =\n          !hasRequestedReviewsForGroup &&\n          !hasChangesRequestedInReviews &&\n          hasApprovedInReviews;\n        await updateReviewStatus(context, repoContext, reviewerGroup, {\n          add: [\n            // if changes requested by the one which requests was removed\n            hasChangesRequestedInReviews && 'changesRequested',\n            // if was already approved by another member in the group and has no other requests waiting\n            approved && 'approved',\n          ],\n          // remove labels if has no other requests waiting\n          remove: [\n            approved && 'needsReview',\n            !hasRequestedReviewsForGroup &&\n              !hasChangesRequestedInReviews &&\n              'requested',\n          ],\n        });\n      }\n\n      if (sender.login === reviewer.login) return;\n\n      if (repoContext.slack) {\n        repoContext.slack.postMessage(\n          reviewer.login,\n          `:skull_and_crossbones: ${repoContext.slack.mention(\n            sender.login,\n          )} removed the request for your review on ${pr.html_url}`,\n        );\n      }\n    }),\n  );\n};\n","import { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\n\nexport const autoMergeIfPossible = async (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any = context.payload.pull_request,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n  if (!autoMergeLabel) return false;\n\n  if (!prLabels.find((l: LabelResponse) => l.id === autoMergeLabel.id)) {\n    context.log.debug('automerge not possible: no label');\n    return false;\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels');\n    return false;\n  }\n\n  if (!pr.mergeable) {\n    context.log.debug('automerge not possible: not mergeable');\n    return false;\n  }\n\n  const mergeResult = await context.github.pulls.merge({\n    merge_method: 'squash',\n    owner: pr.head.repo.owner.login,\n    repo: pr.head.repo.name,\n    number: pr.number,\n    commit_title: `${pr.title} (#${pr.number})`,\n    commit_message: '', // TODO add BC\n  });\n  context.log.debug('merge result:', mergeResult.data);\n\n  return Boolean(mergeResult.data.merged);\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const pr = context.payload.pull_request;\n      const { user: reviewer, state } = (context.payload as any).review;\n      if (pr.user.login === reviewer.login) return;\n\n      const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n      let merged;\n\n      if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n        const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n          reviewerGroup,\n          pr.requested_reviewers,\n          {\n            includesReviewerGroup: true,\n            // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n            // includesWaitForGroups: true,\n          },\n        );\n        const { data: reviews } = await context.github.pulls.listReviews(\n          context.issue({ per_page: 50 }),\n        );\n        const hasChangesRequestedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'REQUEST_CHANGES',\n        );\n\n        const approved =\n          !hasRequestedReviewsForGroup &&\n          !hasChangesRequestedInReviews &&\n          state === 'approved';\n\n        const newLabels = await updateReviewStatus(\n          context,\n          repoContext,\n          reviewerGroup,\n          {\n            add: [\n              approved && 'approved',\n              state === 'changes_requested' && 'changesRequested',\n            ],\n            remove: [\n              approved && 'needsReview',\n              !(hasRequestedReviewsForGroup || state === 'changes_requested') &&\n                'requested',\n              state === 'approved' &&\n                !hasChangesRequestedInReviews &&\n                'changesRequested',\n              state === 'changes_requested' && 'approved',\n            ],\n          },\n        );\n\n        if (approved && !hasChangesRequestedInReviews) {\n          merged = await autoMergeIfPossible(\n            context,\n            repoContext,\n            pr,\n            newLabels,\n          );\n        }\n      }\n\n      const mention = repoContext.slack.mention(reviewer.login);\n      const prUrl = pr.html_url;\n\n      const message = (() => {\n        if (state === 'changes_requested') {\n          return `:x: ${mention} requests changes on ${prUrl}`;\n        }\n        if (state === 'approved') {\n          return `:clap: :white_check_mark: ${mention} approves ${prUrl}${\n            merged ? ' and PR is merged :tada:' : ''\n          }`;\n        }\n        return `:speech_balloon: ${mention} commented on ${prUrl}`;\n      })();\n\n      repoContext.slack.postMessage(pr.user.login, message);\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      const sender = context.payload.sender;\n      const pr = context.payload.pull_request;\n      const reviewer = (context.payload as any).review.user;\n\n      const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n      if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n        const { data: reviews } = await context.github.pulls.listReviews(\n          context.issue({ per_page: 50 }),\n        );\n        const hasChangesRequestedInReviews = reviews.some(\n          (review) =>\n            repoContext.getReviewerGroup(review.user.login) === reviewerGroup &&\n            review.state === 'REQUEST_CHANGES',\n        );\n\n        await updateReviewStatus(context, repoContext, reviewerGroup, {\n          add: ['needsReview', 'requested'],\n          remove: [\n            !hasChangesRequestedInReviews && 'changesRequested',\n            'approved',\n          ],\n        });\n      }\n\n      if (repoContext.slack) {\n        if (sender.login === reviewer.login) {\n          repoContext.slack.postMessage(\n            pr.user.login,\n            `:skull: ${repoContext.slack.mention(\n              reviewer.login,\n            )} dismissed his review on ${pr.html_url}`,\n          );\n        } else {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:skull: ${repoContext.slack.mention(\n              sender.login,\n            )} dismissed your review on ${pr.html_url}`,\n          );\n        }\n      }\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { lintPR } from './actions/lintPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      // old and new sha\n      // const { before, after } = context.payload;\n\n      await Promise.all([\n        editOpenedPR(context, repoContext),\n        lintPR(context, repoContext),\n        // addStatusCheckToLatestCommit\n        updateStatusCheckFromLabels(context, repoContext),\n      ]);\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { lintPR } from './actions/lintPR';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default (app: Application) => {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(async (context, repoContext) => {\n      await Promise.all([\n        editOpenedPR(context, repoContext),\n        lintPR(context, repoContext),\n      ]);\n\n      await autoMergeIfPossible(context, repoContext);\n    }),\n  );\n};\n","import { Application } from 'probot';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\n\nexport default (app: Application) => {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context) => {\n      const sender = context.payload.sender;\n      if (sender.type === 'Bot') return;\n\n      await handlerPullRequestChange(context, async (repoContext) => {\n        const label = context.payload.label;\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              context.issue({ name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              context.issue({ labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(context, repoContext);\n\n        if (\n          context.payload.action === 'labeled' &&\n          label.id ===\n            (repoContext.labels['merge/automerge'] &&\n              repoContext.labels['merge/automerge'].id)\n        ) {\n          await autoMergeIfPossible(context, repoContext);\n        }\n      });\n    },\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default (app: Application) => {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(context, repoContext, prResult.data);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default (app: Application) => {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(context, repoContext, prResult.data);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n};\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport openedHandler from './pr-handlers/opened';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchromizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\n\nif (!process.env.NAME) process.env.NAME = 'reviewflow';\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application) => {\n  openedHandler(app);\n  reviewRequestedHandler(app);\n  reviewRequestRemovedHandler(app);\n\n  // app.on('pull_request.closed', async context => {\n\n  // });\n\n  // app.on('pull_request.reopened', async context => {\n\n  // });\n\n  reviewSubmittedHandler(app);\n  reviewDismissedHandler(app);\n  labelsChanged(app);\n  synchromizeHandler(app);\n  editedHandler(app);\n\n  checkrunCompleted(app);\n  checksuiteCompleted(app);\n});\n"],"names":["config","slackToken","process","env","ORNIKAR_SLACK_TOKEN","autoAssignToCreator","trimTitle","requiresReviewRequest","prLint","title","regExp","error","summary","bot","status","statusInfoFromMatch","match","issue","url","groups","dev","abarreir","ORNIKAR_EMAIL_DOMAIN","christophehurpeau","arthurflachs","skyline42sh","LentnerStefan","HugoGarrido","CorentinAndre","rigma","Mxime","damienorny","tilap","design","jperriere","CoralineColasse","waitForGroups","labels","list","name","color","review","ci","inProgress","succeeded","failed","needsReview","requested","changesRequested","approved","teamConfigs","ornikar","initRepoLabels","context","data","github","issues","listLabelsForRepo","repo","per_page","finalLabels","labelKey","labelConfig","Object","entries","labelColor","slice","description","existingLabel","find","label","result","createLabel","log","info","current_name","updateLabel","getKeys","o","keys","ExcludesFalsy","Boolean","initTeamSlack","mention","postMessage","Promise","resolve","githubLoginToSlackEmail","reduce","acc","groupName","assign","slackClient","WebClient","allUsers","users","limit","members","values","map","email","member","user","profile","console","warn","im","undefined","filter","open","id","channel","err","membersMap","Map","getUserFromGithubLogin","githubLogin","get","text","DRY_RUN","chat","initTeamContext","slackPromise","githubLoginToGroup","forEach","login","set","getReviewerGroups","githubLogins","Set","getReviewerGroup","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","includes","some","group","slack","teamContextsPromise","teamContexts","obtainTeamContext","owner","payload","repository","existingTeamContext","existingPromise","promise","then","teamContext","delete","initRepoContext","repoContext","create","reviewGroupNames","needsReviewLabelIds","key","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","labelIdToGroupName","reviewGroupLabels","lock","Lock","protectedLabelIds","hasNeedsReview","hasRequestedReview","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","lockPROrPRS","prIdOrIds","callback","reject","createReleaseCallback","release","repoContextsPromise","repoContexts","obtainRepoContext","existingRepoContext","handlerPullRequestChange","String","pull_request","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","pr","autoAssignPRToCreator","assignees","length","type","addAssignees","cleanTitle","trim","replace","s","arg1","toLowerCase","editOpenedPR","update","lintPR","head","isPrFromBot","statuses","errorRule","rule","exec","push","date","Date","toISOString","hasLintPrCheck","checks","listForRef","ref","sha","check_runs","check","NAME","all","repos","createStatus","state","target_url","head_sha","conclusion","started_at","completed_at","output","addStatusCheck","hasPrCheck","created_at","createFailedStatusCheck","updateStatusCheckFromLabels","l","requested_reviewers","rr","join","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","prLabels","newLabelNames","toAdd","toDelete","getLabelFromKey","reviewConfig","prLabel","existing","newLabelNamesArray","oldLabels","size","replaceLabels","app","on","sender","reviewer","requested_reviewer","reviews","pulls","listReviews","hasChangesRequestedInReviews","html_url","hasRequestedReviewsForGroup","hasApprovedInReviews","autoMergeIfPossible","autoMergeLabel","debug","mergeable","mergeResult","merge","merge_method","number","commit_title","commit_message","merged","newLabels","prUrl","message","action","removeLabel","addLabels","check_run","pull_requests","prResult","check_suite","Probot","run","openedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","labelsChanged","synchromizeHandler","editedHandler","checkrunCompleted","checksuiteCompleted"],"mappings":"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"}