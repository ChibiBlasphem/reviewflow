{"version":3,"file":"index-node10.cjs.js","sources":["../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/app/auth.tsx","../src/app/repository.tsx","../src/app/home.tsx","../src/account-handlers/actions/syncTeams.ts","../src/account-handlers/actions/syncOrg.ts","../src/accountConfigs/defaultConfig.ts","../src/accountConfigs/ornikar.ts","../src/accountConfigs/christophehurpeau.ts","../src/accountConfigs/reviewflow.ts","../src/accountConfigs/index.ts","../src/dm/defaultDmSettings.ts","../src/dm/getUserDmSettings.ts","../src/app/org-settings.tsx","../src/account-handlers/actions/syncUser.ts","../src/app/user-settings.tsx","../src/appRouter.tsx","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/utils/hasLabelInPR.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/utils/ExcludesFalsy.ts","../src/context/initRepoLabels.ts","../src/slack/utils.ts","../src/slack/home.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/getOrCreateAccount.ts","../src/context/accountContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils/index.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/updatePr.ts","../src/pr-handlers/actions/utils/syncLabel.ts","../src/pr-handlers/actions/utils/createStatus.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/pr-handlers/actions/readCommitsAndUpdateInfos.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reopened.ts","../src/pr-handlers/utils/postSlackMessageWithSecondaryBlock.ts","../src/pr-handlers/utils/getReviewersAndReviewStates.ts","../src/pr-handlers/utils/parseMentions.ts","../src/pr-handlers/comment.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/actions/updatePrBody.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/account-handlers/utils/handler.ts","../src/initApp.ts","../src/index.ts"],"sourcesContent":["import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { MessageCategory } from './dm/MessageCategory';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport interface UserDmSettings extends MongoModel {\n  userId: number;\n  orgId: number;\n  settings: Record<MessageCategory, boolean>;\n}\n\n// TODO _id is number\ninterface BaseAccount extends MongoModel {\n  login: string;\n  installationId?: number;\n}\n\nexport interface User extends BaseAccount {\n  type: string;\n}\n\nexport interface Org extends BaseAccount {\n  slackToken?: string;\n}\n\nexport interface OrgMember extends MongoModel {\n  org: { id: number; login: string };\n  user: { id: number; login: string };\n  slack?: { id: string };\n}\n\nexport interface OrgTeam extends MongoModel {\n  org: { id: number; login: string };\n  name: string;\n  slug: string;\n  description: string;\n}\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  userDmSettings: MongoStore<UserDmSettings>;\n  users: MongoStore<User>;\n  orgs: MongoStore<Org>;\n  orgMembers: MongoStore<OrgMember>;\n  orgTeams: MongoStore<OrgTeam>;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const config = new Map([\n    ['host', process.env.MONGO_HOST || 'localhost'],\n    ['port', process.env.MONGO_PORT || '27017'],\n    ['database', process.env.MONGO_DB as string],\n  ]);\n  if (process.env.MONGO_USER) {\n    config.set('user', process.env.MONGO_USER);\n    config.set('password', process.env.MONGO_PASSWORD as string);\n  }\n  const connection = new MongoConnection(config);\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  const userDmSettings = new MongoStore<UserDmSettings>(\n    connection,\n    'userDmSettings',\n  );\n  userDmSettings.collection.then((coll) => {\n    coll.createIndex({ userId: 1, orgId: 1 }, { unique: true });\n  });\n\n  const users = new MongoStore<User>(connection, 'users');\n  users.collection.then((coll) => {\n    coll.createIndex({ login: 1 }, { unique: true });\n  });\n\n  const orgs = new MongoStore<Org>(connection, 'orgs');\n  orgs.collection.then((coll) => {\n    coll.createIndex({ login: 1 }, { unique: true });\n  });\n\n  const orgMembers = new MongoStore<OrgMember>(connection, 'orgMembers');\n  orgMembers.collection.then((coll) => {\n    coll.createIndex({ 'user.id': 1, 'org.id': 1 }, { unique: true });\n  });\n\n  const orgTeams = new MongoStore<OrgTeam>(connection, 'orgTeams');\n  orgTeams.collection.then((coll) => {\n    coll.createIndex({ 'org.id': 1 });\n  });\n\n  // return { connection, prEvents };\n  return { connection, userDmSettings, users, orgs, orgMembers, orgTeams };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.REVIEWFLOW_NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>\n        <div style={{ padding: '24px 48px' }}>{children}</div>\n      </body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { promisify } from 'util';\nimport { Octokit } from 'probot';\nimport type { Router, Request, Response } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { sign, verify } from 'jsonwebtoken';\nimport * as githubAuth from '../auth/github';\nimport Layout from '../views/Layout';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request, strategy: string): string => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/app/${strategy}/login-response`;\n};\n\ninterface AuthInfo {\n  id: number;\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nconst getAuthInfoFromCookie = async (\n  req: Request,\n  res: Response,\n): Promise<undefined | AuthInfo> => {\n  const strategy = 'gh'; // req.params.strategy\n  const authInfo = await readAuthCookie(req, strategy);\n\n  if (authInfo?.id) {\n    return authInfo;\n  }\n\n  res.clearCookie(`auth_${strategy}`);\n  return undefined;\n};\n\nexport const getUser = async (\n  req: Request,\n  res: Response,\n): Promise<{ authInfo: AuthInfo; api: Octokit } | null> => {\n  const authInfo = await getAuthInfoFromCookie(req, res);\n  if (!authInfo) {\n    res.redirect('/app/login');\n    return null;\n  }\n\n  return {\n    authInfo,\n    api: new Octokit({ auth: `token ${authInfo.accessToken}` }),\n  };\n};\n\nexport default function auth(router: Router): void {\n  router.get('/login', async (req: Request, res: Response) => {\n    if (await getAuthInfoFromCookie(req, res)) {\n      return res.redirect('/app');\n    }\n\n    // const state = await randomHex(8);\n    // res.cookie(`auth_${strategy}_${state}`, strategy, {\n    //   maxAge: 10 * 60 * 1000,\n    //   httpOnly: true,\n    //   secure,\n    // });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req, 'gh'),\n      scope: 'read:user,repo',\n      // state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code: string = req.query.code as string;\n    // const state = req.query.state;\n    // const cookieName = `auth_${strategy}_${state}`;\n    // const cookie = req.cookies && req.cookies[cookieName];\n    // if (!cookie) {\n    //   // res.redirect(`/${strategy}/login`);\n    //   res.send(\n    //     '<html><body>No cookie for this state. <a href=\"/app/login\">Retry ?</a></body></html>',\n    //   );\n    //   return;\n    // }\n    // res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req, strategy),\n    });\n\n    if (!result) {\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/app/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const id = user.data.id;\n    const login = user.data.login;\n\n    const authInfo: AuthInfo = { id, login, accessToken, time: Date.now() };\n    const token = await signPromisified(authInfo, AUTH_SECRET_KEY, {\n      algorithm: 'HS512',\n      audience: req.headers['user-agent'],\n      expiresIn: '10 days',\n    });\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/app');\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function repository(router: Router, api: GitHubAPI): void {\n  router.get('/repositories', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n    const { data } = await user.api.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a href={`/app/repository/${repo.owner.login}/${repo.name}`}>\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n\n            {data.length === 100 && (\n              <div>We currently have a limit to 100 repositories</div>\n            )}\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/repository/:owner/:repository', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n    const { data } = await user.api.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    if (!data.permissions.admin) {\n      res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed on this repo. Go to \"}\n              <a\n                href={`https://github.com/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function home(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/gh', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h1>{process.env.REVIEWFLOW_NAME}</h1>\n            <div style={{ display: 'flex' }}>\n              <div style={{ flexGrow: 1 }}>\n                <h4>Choose your account</h4>\n                <ul>\n                  <li>\n                    <a href=\"/app/user\">{user.authInfo.login}</a>\n                  </li>\n                  {orgs.data.map((org) => (\n                    <li key={org.id}>\n                      <a href={`/app/org/${org.login}`}>{org.login}</a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import { Octokit } from 'probot';\nimport { MongoStores } from '../../mongo';\n\nexport const syncTeams = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  org: { login: string; id: number },\n): Promise<void> => {\n  const orgEmbed = { id: org.id, login: org.login };\n\n  const teamIds: number[] = [];\n\n  await Promise.all(\n    await github.paginate(\n      github.teams.list.endpoint.merge({\n        org: org.login,\n      }),\n      ({ data }: Octokit.Response<Octokit.TeamsListResponse>) => {\n        return Promise.all(\n          data.map((team) => {\n            teamIds.push(team.id);\n            return mongoStores.orgTeams.upsertOne({\n              _id: team.id as any, // TODO _id number\n              org: orgEmbed,\n              name: team.name,\n              slug: team.slug,\n              description: team.description,\n            });\n          }),\n        );\n      },\n    ),\n  );\n\n  await mongoStores.orgTeams.deleteMany({\n    'org.id': org.id,\n    _id: { $not: { $in: teamIds } },\n  });\n};\n","import { Octokit } from 'probot';\nimport { MongoStores, Org } from '../../mongo';\n\ninterface OrgInfo {\n  login: string;\n  id: number;\n}\n\nexport const syncOrg = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  installationId: number,\n  org: OrgInfo,\n): Promise<Org> => {\n  const orgInStore = await mongoStores.orgs.upsertOne({\n    _id: org.id as any, // TODO _id is number\n    login: org.login,\n    installationId,\n  });\n\n  const orgEmbed = { id: org.id, login: org.login };\n\n  const memberIds: number[] = [];\n\n  await Promise.all(\n    await github.paginate(\n      github.orgs.listMembers.endpoint.merge({\n        org: org.login,\n      }),\n      ({ data }: Octokit.Response<Octokit.OrgsListMembersResponse>) => {\n        return Promise.all(\n          data.map(async (member) => {\n            memberIds.push(member.id);\n            return Promise.all([\n              mongoStores.orgMembers.upsertOne({\n                _id: `${org.id}_${member.id}`,\n                org: orgEmbed,\n                user: {\n                  id: member.id,\n                  login: member.login,\n                },\n              }),\n              mongoStores.users.upsertOne({\n                _id: member.id as any,\n                login: member.login,\n                type: member.type,\n              }),\n            ]);\n          }),\n        );\n      },\n    ),\n  );\n\n  await mongoStores.orgMembers.deleteMany({\n    'org.id': org.id,\n    'user.id': { $not: { $in: memberIds } },\n  });\n\n  return orgInStore;\n};\n","import { Config } from './types';\n\nconst config: Config<never, never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [],\n  },\n  groups: {},\n  waitForGroups: {},\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n    },\n  },\n};\n\nexport default config;\n","/* eslint-disable max-lines */\n\nimport { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'ops' | 'frontends' | 'backends'> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  ignoreRepoPattern: '(infra-.*|devenv)',\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z][\\dA-Z]+-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      /* ops */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Alan-pad': null,\n      CamilSadiki: null,\n      busser: null,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Radyum: `romain.reynaud${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'budet-b': `benjamin.budet${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      mdcarter: `maxime.dehaye${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      ChibiBlasphem: `christopher${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Lenamari: `lena${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'AlexisRiols-Ornikar': `alexis.riols${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    ops: {\n      logins: ['JulienBreux', 'Alan-pad', 'CamilSadiki', 'busser'],\n      labels: ['teams/ops'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n        'Radyum',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'vlbr',\n        'budet-b',\n        'mdcarter',\n        'ChibiBlasphem',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/ops': {\n        name: 'ops',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        description: 'This issue or pull request will need a new major version',\n        color: '#FF6F00',\n      },\n      duplicate: {\n        name: 'duplicate',\n        description: 'This issue or pull request already exists',\n        color: '#ECEFF1',\n      },\n      documentation: {\n        name: 'documentation',\n        description: 'Improvements or additions to documentation',\n        color: '#7FCEFF',\n      },\n      rfc: {\n        name: 'RFC',\n        description: 'Request For Comments',\n        color: '#FFD3B2',\n      },\n      bug: {\n        name: 'bug',\n        description: \"Something isn't working\",\n        color: '#FF3D00',\n      },\n      enhancement: {\n        name: 'enhancement',\n        description: 'New feature or request',\n        color: '#7FCEFF',\n      },\n      'help-wanted': {\n        name: 'help wanted',\n        description: 'Extra attention is needed',\n        color: '#B1EE8B',\n      },\n      question: {\n        name: 'question',\n        description: 'Further information is requested',\n        color: '#F860A4',\n      },\n      wontfix: {\n        name: 'wontfix',\n        description: 'This will not be worked on',\n        color: '#ECEFF1',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?(!)?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\nimport chrisconfig from './christophehurpeau';\n\nconst config: Config<'dev', never> = {\n  ...chrisconfig,\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n    },\n  },\n};\nexport default config;\n","import { Config as ConfigType } from './types';\nimport defaultConfig from './defaultConfig';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\nimport reviewflow from './reviewflow';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const accountConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n  reviewflow,\n};\n\nexport { defaultConfig };\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","import { MessageCategory } from './MessageCategory';\n\nexport const defaultDmSettings: Record<MessageCategory, boolean> = {\n  'pr-review': true,\n  'pr-review-follow': true,\n  'pr-comment': true,\n  'pr-comment-follow': true,\n  'pr-comment-mention': true,\n  'pr-comment-thread': true,\n  'pr-merge-conflicts': true,\n  'issue-comment-mention': true,\n};\n","import { MongoStores } from '../mongo';\nimport { accountConfigs, defaultConfig } from '../accountConfigs';\nimport { MessageCategory } from './MessageCategory';\nimport { defaultDmSettings } from './defaultDmSettings';\n\nexport type UserDmSettings = Record<MessageCategory, boolean>;\nconst cache = new Map<string, Map<number, UserDmSettings>>();\n\nconst getDefaultDmSettings = (org: string): UserDmSettings => {\n  const accountConfig = accountConfigs[org] || defaultConfig;\n  return accountConfig.defaultDmSettings\n    ? { ...defaultDmSettings, ...accountConfig.defaultDmSettings }\n    : defaultDmSettings;\n};\n\nexport const updateCache = (\n  org: string,\n  userId: number,\n  newSettings: Partial<UserDmSettings>,\n): void => {\n  let orgCache = cache.get(org);\n  if (!orgCache) {\n    orgCache = new Map();\n    cache.set(org, orgCache);\n  }\n  orgCache.set(userId, { ...getDefaultDmSettings(org), ...newSettings });\n};\n\nexport const getUserDmSettings = async (\n  mongoStores: MongoStores,\n  org: string,\n  orgId: number,\n  userId: number,\n): Promise<UserDmSettings> => {\n  const orgDefaultDmSettings = getDefaultDmSettings(org);\n\n  const userDmSettingsConfig = await mongoStores.userDmSettings.findOne({\n    orgId,\n    userId,\n  });\n\n  const config = userDmSettingsConfig\n    ? {\n        ...orgDefaultDmSettings,\n        ...userDmSettingsConfig.settings,\n      }\n    : orgDefaultDmSettings;\n\n  updateCache(org, userId, config);\n  return config;\n};\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport bodyParser from 'body-parser';\nimport { syncTeams } from '../account-handlers/actions/syncTeams';\nimport { syncOrg } from '../account-handlers/actions/syncOrg';\nimport { MessageCategory } from '../dm/MessageCategory';\nimport { getUserDmSettings, updateCache } from '../dm/getUserDmSettings';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { accountConfigs } from '../accountConfigs';\nimport { getUser } from './auth';\n\nconst dmMessages: Record<MessageCategory, string> = {\n  'pr-review': 'You are assigned to a review, someone reviewed your PR',\n  'pr-review-follow': \"Someone reviewed a PR you're also reviewing (NEW!)\",\n  'pr-comment': 'Someone commented on your PR (NEW!)',\n  'pr-comment-follow': \"Someone commented on a PR you're reviewing (NEW!)\",\n  'pr-comment-mention': 'Someone mentioned you in a PR (NEW!)',\n  'pr-comment-thread': \"Someone replied to a discussion you're in (NEW!)\",\n  'pr-merge-conflicts': 'Your PR has a merge conflict (not implemented)',\n  'issue-comment-mention':\n    'Someone mentioned you in an issue (not implemented)',\n};\n\nexport default function orgSettings(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/org/:org/force-sync', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    const o = await mongoStores.orgs.findByKey(org.id);\n    if (!o) return res.redirect('/app');\n\n    await syncOrg(mongoStores, user.api, o.installationId as number, org);\n    await syncTeams(mongoStores, user.api, org);\n\n    res.redirect(`/app/org/${req.params.org}`);\n  });\n\n  router.get('/org/:org', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    const installation = await api.apps\n      .getOrgInstallation({ org: org.login })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!installation) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed for this user. Go to \"}\n              <a\n                href={`https://github.com/settings/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to install it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const accountConfig = accountConfigs[org.login];\n    const userDmSettings = await getUserDmSettings(\n      mongoStores,\n      org.login,\n      org.id,\n      user.authInfo.id,\n    );\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h1>{process.env.REVIEWFLOW_NAME}</h1>\n            <div style={{ display: 'flex' }}>\n              <h2 style={{ flexGrow: 1 }}>{org.login}</h2>\n              <a href=\"/app\">Switch account</a>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n              <div style={{ flexGrow: 1 }}>\n                <h4>Information</h4>\n                {!accountConfig\n                  ? 'Default config is used: https://github.com/christophehurpeau/reviewflow/blob/master/src/accountConfigs/defaultConfig.ts'\n                  : `Custom config: https://github.com/christophehurpeau/reviewflow/blob/master/src/accountConfigs/${org.login}.ts`}\n              </div>\n              <div style={{ width: '380px' }}>\n                <h4>My DM Settings</h4>\n                {Object.entries(dmMessages).map(([key, name]) => (\n                  <div key={key}>\n                    <label htmlFor={key}>\n                      <span\n                        // eslint-disable-next-line react/no-danger\n                        dangerouslySetInnerHTML={{\n                          __html: `<input id=\"${key}\" type=\"checkbox\" autocomplete=\"off\" ${\n                            userDmSettings[key as MessageCategory]\n                              ? 'checked=\"checked\" '\n                              : ''\n                          }onclick=\"fetch(location.pathname, { method: 'PATCH', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ key: '${key}', value: event.currentTarget.checked }) })\" />`,\n                        }}\n                      />\n                      {name}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n\n  router.patch('/org/:org', bodyParser.json(), async (req, res) => {\n    if (!req.body) {\n      res.status(400).send('not ok');\n      return;\n    }\n\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    (await mongoStores.userDmSettings.collection).updateOne(\n      {\n        _id: `${org.id}_${user.authInfo.id}`,\n      },\n      {\n        $set: {\n          [`settings.${req.body.key}`]: req.body.value,\n          updated: new Date(),\n        },\n        $setOnInsert: {\n          orgId: org.id,\n          userId: user.authInfo.id,\n          created: new Date(),\n        },\n      },\n      { upsert: true },\n    );\n\n    const userDmSettingsConfig = await mongoStores.userDmSettings.findOne({\n      orgId: org.id,\n      userId: user.authInfo.id,\n    });\n\n    if (userDmSettingsConfig) {\n      updateCache(org.login, user.authInfo.id, userDmSettingsConfig.settings);\n    }\n\n    res.send('ok');\n  });\n}\n","import { Octokit } from 'probot';\nimport { MongoStores, User } from '../../mongo';\n\ninterface UserInfo {\n  login: string;\n  id: number;\n}\n\nexport const syncUser = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  installationId: number,\n  userInfo: UserInfo,\n): Promise<User> => {\n  const user = await mongoStores.users.upsertOne({\n    _id: userInfo.id as any, // TODO _id is number\n    login: userInfo.login,\n    installationId,\n  });\n\n  return user;\n};\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport { syncUser } from '../account-handlers/actions/syncUser';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function userSettings(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/user/force-sync', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    // const { data: installation } = await api.apps\n    //   .getUserInstallation({\n    //     username: user.authInfo.login,\n    //   })\n    //   .catch((err) => {\n    //     return { status: err.status, data: undefined };\n    //   });\n\n    // console.log(installation);\n\n    const u = await mongoStores.users.findByKey(user.authInfo.id);\n    if (!u || !u.installationId) return res.redirect('/app');\n\n    await syncUser(\n      mongoStores,\n      user.api,\n      u.installationId as number,\n      user.authInfo,\n    );\n\n    res.redirect(`/app/user`);\n  });\n\n  router.get('/user', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const { data: installation } = await api.apps\n      .getUserInstallation({\n        username: user.authInfo.login,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!installation) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed for this user. Go to \"}\n              <a\n                href={`https://github.com/settings/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to install it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    return res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>{process.env.REVIEWFLOW_NAME} is installed for this user</div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","/* eslint-disable max-lines */\n\nimport { Application } from 'probot';\nimport cookieParser from 'cookie-parser';\nimport { MongoStores } from './mongo';\nimport repository from './app/repository';\nimport auth from './app/auth';\nimport home from './app/home';\nimport orgSettings from './app/org-settings';\nimport userSettings from './app/user-settings';\n\nexport default async function appRouter(\n  app: Application,\n  mongoStores: MongoStores,\n): Promise<void> {\n  const router = app.route('/app');\n  const api = await app.auth();\n\n  router.use(cookieParser());\n\n  auth(router);\n  repository(router, api);\n  home(router, api, mongoStores);\n  orgSettings(router, api, mongoStores);\n  userSettings(router, api, mongoStores);\n}\n","export type Options =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: Options[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'autoMergeWithSkipCi',\n    label: 'Auto merge with `[skip ci]`',\n  },\n  {\n    name: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->)(.*)$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\ntype Config = Record<Options, boolean>;\n\nconst parseOptions = (content: string, defaultConfig: Config): Config => {\n  return optionsRegexps.reduce((acc, { name, regexp }) => {\n    const match = regexp.exec(content);\n    acc[name] = !match\n      ? defaultConfig[name] || false\n      : match[1] === 'x' || match[1] === 'X';\n    return acc;\n  }, {} as any) as Config;\n};\n\ninterface ParseBodyResultWithoutOptions {\n  content: string;\n  ending: string;\n  reviewflowContentCol: string;\n  reviewflowContentColPrefix: string;\n  reviewflowContentColSuffix: string;\n}\n\ninterface ParseBodyResultWithOptions extends ParseBodyResultWithoutOptions {\n  options: Config;\n  breakingChanges: string;\n}\n\nexport const parseBody = (\n  description: string,\n): ParseBodyResultWithoutOptions | null => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol, reviewflowContent, ending] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      ending,\n      reviewflowContentCol: reviewflowContent,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  };\n};\n\nexport const parseBodyWithOptions = (\n  description: string,\n  defaultConfig: Config,\n): ParseBodyResultWithOptions | null => {\n  const parsedBody = parseBody(description);\n  if (parsedBody === null) return null;\n\n  // console.log(parsedBody.reviewflowContentCol);\n  let breakingChanges = parsedBody.reviewflowContentCol.replace(\n    /^.*#### Commits Notes:(.*)#### Options:.*$/s,\n    '$1',\n  );\n\n  if (breakingChanges === parsedBody.reviewflowContentCol) {\n    breakingChanges = '';\n  } else {\n    breakingChanges = breakingChanges.trim();\n  }\n\n  return {\n    ...parsedBody,\n    options: parseOptions(parsedBody.reviewflowContentCol, defaultConfig),\n    breakingChanges,\n  };\n};\n","import { Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\n\nexport default function hasLabelInPR(\n  prLabels: Octokit.PullsGetResponse['labels'],\n  label: LabelResponse,\n): boolean {\n  if (!label) return false;\n  return prLabels.some((l): boolean => l.id === label.id);\n}\n","/* eslint-disable max-lines */\nimport { Context, Octokit } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBodyWithOptions } from './utils/parseBody';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nconst hasFailedStatusOrChecks = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n\n  if (!hasLabelInPR(prLabels, autoMergeLabel)) {\n    context.log.debug('automerge not possible: no label', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (pr.state !== 'open') {\n    context.log.debug('automerge not possible: pr is not opened', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && String(lockedPr.number) !== String(pr.number)) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info('automerge not possible: already merged pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${pr.mergeable_state}`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        if (pr.body.includes('<!-- renovate-rebase -->')) {\n          if (pr.body.includes('[x] <!-- renovate-rebase -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- renovate-rebase -->',\n            '[x] <!-- renovate-rebase -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${pr.mergeable_state}`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${pr.mergeable_state}`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n\n    const parsedBody = parseBodyWithOptions(\n      pr.body,\n      repoContext.config.prDefaultOptions,\n    );\n    const options = parsedBody?.options || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: `${pr.title}${\n        options.autoMergeWithSkipCi ? ' [skip ci]' : ''\n      } (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","export const ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n","import { Context, Octokit } from 'probot';\nimport { Config } from '../accountConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const getLabelsForRepo = async (\n  context: Context<any>,\n): Promise<Octokit.IssuesListLabelsForRepoResponse> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  return labels;\n};\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const labels = await getLabelsForRepo(context);\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = labelConfig.description\n      ? `${labelConfig.description} - Synced by reviewflow`\n      : `Synced by reviewflow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n      if (labelKey === 'teams/ops') {\n        existingLabel = labels.find((label) => label.name === 'archi');\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor ||\n      existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","export const createLink = (url: string, text: string): string => {\n  return `<${url}|${text}>`;\n};\n","import { WebClient } from '@slack/web-api';\nimport { Octokit } from 'probot';\nimport { MongoStores, Org, OrgMember } from '../mongo';\nimport { createLink } from './utils';\n\nexport const updateMember = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  slackClient: WebClient,\n  member: OrgMember,\n): Promise<void> => {\n  if (!member.slack) return;\n\n  const [\n    prsWithRequestedReviews,\n    prsToMerge,\n    prsWithRequestedChanges,\n  ] = await Promise.all([\n    github.search.issuesAndPullRequests({\n      q: `is:pr user:${member.org.login} is:open review-requested:${member.user.login} `,\n      sort: 'created',\n      order: 'desc',\n    }),\n    github.search.issuesAndPullRequests({\n      q: `is:pr user:${member.org.login} is:open author:${member.user.login} label:\":ok_hand: code/approved\"`,\n      sort: 'created',\n      order: 'desc',\n    }),\n    github.search.issuesAndPullRequests({\n      q: `is:pr user:${member.org.login} is:open author:${member.user.login} label:\":ok_hand: code/changes-requested\"`,\n      sort: 'created',\n      order: 'desc',\n    }),\n  ]);\n\n  const blocks: any[] = [];\n\n  const buildBlocks = (title: string, results: any) => {\n    if (!results.total_count) return;\n\n    blocks.push(\n      {\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: `*${title}*`,\n        },\n      },\n      {\n        type: 'divider',\n      },\n      ...results.items.map((pr: any) => ({\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: `${createLink(\n            pr.html_url,\n            `${pr.html_url.replace(/^.*\\/([^/]+)\\/pull\\/\\d+$/, '$1')}#${\n              pr.number\n            }`,\n          )} ${pr.title}\\nby ${pr.user.login}`,\n        },\n      })),\n    );\n  };\n\n  buildBlocks('Requested Reviews', prsWithRequestedReviews.data);\n  buildBlocks('Ready to Merge', prsToMerge.data);\n  buildBlocks('Changes Requested', prsWithRequestedChanges.data);\n\n  if (blocks.length === 0) {\n    blocks.push({\n      type: 'section',\n      text: {\n        type: 'mrkdwn',\n        text: \":tada: It looks like you don't have any PR to review!\",\n      },\n    });\n  }\n\n  slackClient.views.publish({\n    user_id: member.slack.id,\n    view: {\n      type: 'home',\n      blocks,\n    },\n  });\n};\n\nexport const updateOrg = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  org: Org,\n  slackClient = new WebClient(org.slackToken),\n): Promise<void> => {\n  const cursor = await mongoStores.orgMembers.cursor();\n  cursor.forEach((member) => {\n    updateMember(mongoStores, github, slackClient, member);\n  });\n};\n\nexport const updateAllOrgs = async (\n  mongoStores: MongoStores,\n  auth: (installationId: number) => Promise<Octokit>,\n): Promise<void> => {\n  const cursor = await mongoStores.orgs.cursor();\n  cursor.forEach(async (org) => {\n    if (!org.slackToken || !org.installationId) return;\n    const github = await auth(org.installationId);\n    await updateOrg(mongoStores, github, org);\n  });\n};\n","import { Context } from 'probot';\n\nexport const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n\nexport const contextIssue = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  issue_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    issue_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    issue_number: number;\n  } & T;\n};\n\nexport const contextPr = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  pull_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    pull_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    pull_number: number;\n  } & T;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { WebClient, KnownBlock } from '@slack/web-api';\nimport { Context, Octokit } from 'probot';\nimport { createLink } from '../slack/utils';\nimport { MongoStores, Org, User } from '../mongo';\nimport { getUserDmSettings } from '../dm/getUserDmSettings';\nimport { MessageCategory } from '../dm/MessageCategory';\nimport { Config } from '../accountConfigs';\nimport * as slackHome from '../slack/home';\nimport { getKeys } from './utils';\n\ninterface SlackMessage {\n  text: string;\n  blocks?: KnownBlock[];\n  secondaryBlocks?: KnownBlock[];\n  ts?: string;\n}\n\ninterface SlackMessageResult {\n  ts: string;\n}\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  link: (url: string, text: string) => string;\n  postMessage: (\n    category: MessageCategory,\n    githubId: number,\n    githubLogin: string,\n    message: SlackMessage,\n  ) => Promise<SlackMessageResult | null>;\n  prLink: <T extends { repository: Webhooks.PayloadRepository }>(\n    pr: Octokit.PullsGetResponse,\n    context: Context<T>,\n  ) => string;\n  updateHome: (githubLogin: string) => void;\n}\n\nexport const voidTeamSlack = (): TeamSlack => ({\n  mention: (): string => '',\n  link: (): string => '',\n  postMessage: (): Promise<null> => Promise.resolve(null),\n  prLink: (): string => '',\n  updateHome: (): void => undefined,\n});\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  mongoStores: MongoStores,\n  context: Context<any>,\n  config: Config<GroupNames>,\n  account: Org | User,\n): Promise<TeamSlack> => {\n  const owner = context.payload.repository.owner;\n\n  if (!(account as Org).slackToken) {\n    return voidTeamSlack();\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackEmails = Object.values(githubLoginToSlackEmail);\n  const slackClient = new WebClient(account.slackToken);\n\n  const membersInDb = await mongoStores.orgMembers.findAll({\n    'org.id': account._id,\n  });\n\n  const members: [string, { member: any; im: any }][] = [];\n  const foundEmailMembers: string[] = [];\n\n  Object.entries(githubLoginToSlackEmail).forEach(([login, email]) => {\n    const member = membersInDb.find((m) => m.user.login === login);\n    if (member?.slack?.id) {\n      foundEmailMembers.push(email);\n      members.push([email, { member: { id: member.slack.id }, im: undefined }]);\n    }\n  });\n\n  if (foundEmailMembers.length !== slackEmails.length) {\n    const missingEmails = slackEmails.filter(\n      (email) => !foundEmailMembers.includes(email),\n    );\n\n    const memberEmailToMemberId = new Map<string, number>(\n      Object.entries(githubLoginToSlackEmail).map(([login, email]) => [\n        email,\n        membersInDb.find((m) => m.user.login === login)?._id as any,\n      ]),\n    );\n\n    await slackClient.paginate('users.list', {}, (page: any) => {\n      page.members.forEach((member: any) => {\n        const email = member.profile && member.profile.email;\n        if (email && missingEmails.includes(email)) {\n          members.push([email, { member, im: undefined }]);\n          if (memberEmailToMemberId.has(email)) {\n            mongoStores.orgMembers.partialUpdateMany(\n              {\n                _id: memberEmailToMemberId.get(email),\n              },\n              { $set: { slack: { id: member.id } } },\n            );\n          }\n        }\n      });\n      return false;\n    });\n  }\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.conversations.open({\n        users: user.member.id,\n      });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string): string => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (\n      category: MessageCategory,\n      githubId: number,\n      githubLogin: string,\n      message: SlackMessage,\n    ): Promise<null | SlackMessageResult> => {\n      context.log.debug('send slack', { category, githubLogin, message });\n      if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return null;\n\n      const userDmSettings = await getUserDmSettings(\n        mongoStores,\n        owner.login,\n        owner.id,\n        githubId,\n      );\n\n      if (!userDmSettings[category]) return null;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return null;\n      const result = await slackClient.chat.postMessage({\n        username: process.env.REVIEWFLOW_NAME,\n        channel: user.im.id,\n        text: message.text,\n        blocks: message.blocks,\n        attachments: message.secondaryBlocks\n          ? [{ blocks: message.secondaryBlocks }]\n          : undefined,\n        thread_ts: message.ts,\n      });\n      if (!result.ok) return null;\n      return { ts: result.ts as string };\n    },\n    link: createLink,\n    prLink: <T extends { repository: Webhooks.PayloadRepository }>(\n      pr: Octokit.PullsGetResponse,\n      context: Context<T>,\n    ): string => {\n      return createLink(\n        pr.html_url,\n        `${context.payload.repository.name}#${pr.number}`,\n      );\n    },\n\n    updateHome: (githubLogin: string): void => {\n      context.log.debug('update slack home', { githubLogin });\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.member) return;\n\n      slackHome.updateMember(mongoStores, context.github, slackClient, {\n        user: { id: null, login: githubLogin },\n        org: { id: account._id, login: account.login },\n        slack: { id: user.member.id },\n      } as any);\n    },\n  };\n};\n","import { Octokit } from 'probot';\nimport { syncOrg } from '../account-handlers/actions/syncOrg';\nimport { syncTeams } from '../account-handlers/actions/syncTeams';\nimport { syncUser } from '../account-handlers/actions/syncUser';\nimport { MongoStores, Org, User } from '../mongo';\n\nexport interface AccountInfo {\n  id: number;\n  login: string;\n  type: string;\n}\n\nexport const getOrCreateAccount = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  installationId: number,\n  accountInfo: AccountInfo,\n): Promise<Org | User> => {\n  switch (accountInfo.type) {\n    case 'Organization': {\n      let org = await mongoStores.orgs.findByKey(accountInfo.id);\n      if (org?.installationId) return org;\n\n      // TODO diff org vs user...\n      org = await syncOrg(mongoStores, github, installationId, accountInfo);\n      await syncTeams(mongoStores, github, accountInfo);\n      return org;\n    }\n\n    case 'User': {\n      let user = await mongoStores.users.findByKey(accountInfo.id);\n      if (user?.installationId) return user;\n\n      user = await syncUser(mongoStores, github, installationId, accountInfo);\n      return user;\n    }\n\n    default:\n      throw new Error(`Account type not supported ${accountInfo.type}`);\n  }\n};\n","import { Context } from 'probot';\nimport { Lock } from 'lock';\nimport { MongoStores, Org, User } from '../mongo';\nimport { Config } from '../accountConfigs';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\nimport { getOrCreateAccount, AccountInfo } from './getOrCreateAccount';\n\ntype AccountType = 'Organization' | 'User';\n\nexport interface AccountContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  accountType: AccountType;\n  account: Org | User;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => GroupNames | undefined;\n  getReviewerGroups: (githubLogins: string[]) => GroupNames[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  approveShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n\n  lock(callback: () => Promise<void> | void): Promise<void>;\n}\n\nconst initAccountContext = async (\n  mongoStores: MongoStores,\n  context: Context<any>,\n  config: Config,\n  accountInfo: AccountInfo,\n): Promise<AccountContext> => {\n  const account = await getOrCreateAccount(\n    mongoStores,\n    context.github,\n    context.payload.installation.id,\n    accountInfo,\n  );\n  const slackPromise = initTeamSlack(mongoStores, context, config, account);\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]): string[] => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(ExcludesFalsy),\n    ),\n  ];\n\n  const lock = Lock();\n\n  return {\n    config,\n    account,\n    accountType: accountInfo.type as AccountType,\n    lock: (callback: () => Promise<void> | void): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const logInfos = { account: accountInfo.login };\n        context.log.info('lock: try to lock account', logInfos);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        lock('_', async (createReleaseCallback) => {\n          const release = createReleaseCallback(() => {});\n          context.log.info('lock: lock account acquired', logInfos);\n          try {\n            await callback();\n          } catch (err) {\n            context.log.info('lock: release account (with error)', logInfos);\n            release();\n            reject(err);\n            return;\n          }\n          context.log.info('lock: release account', logInfos);\n          release();\n          resolve();\n        });\n      });\n    },\n    getReviewerGroup: (githubLogin): string | undefined =>\n      githubLoginToGroup.get(githubLogin),\n    getReviewerGroups,\n\n    getTeamsForLogin: (githubLogin): string[] =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    approveShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ): boolean => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst accountContextsPromise = new Map();\nconst accountContexts = new Map();\n\nexport const obtainAccountContext = (\n  mongoStores: MongoStores,\n  context: Context<any>,\n  config: Config,\n  accountInfo: AccountInfo,\n): Promise<AccountContext> => {\n  const existingAccountContext = accountContexts.get(accountInfo.login);\n  if (existingAccountContext) return existingAccountContext;\n\n  const existingPromise = accountContextsPromise.get(accountInfo.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initAccountContext(mongoStores, context, config, accountInfo);\n  accountContextsPromise.set(accountInfo.login, promise);\n\n  return promise.then((accountContext) => {\n    accountContextsPromise.delete(accountInfo.login);\n    accountContexts.set(accountInfo.login, accountContext);\n    return accountContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { accountConfigs, Config, defaultConfig } from '../accountConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainAccountContext, AccountContext } from './accountContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    prNumberOrPrNumbers: number | number[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(context: Context<any>, prNumber: number): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nexport type RepoContext<GroupNames extends string = any> = AccountContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  mongoStores: MongoStores,\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const repo = context.payload.repository;\n  const org = repo.owner;\n  const accountContext = await obtainAccountContext(\n    mongoStores,\n    context,\n    config,\n    org,\n  );\n  const repoContext = Object.create(accountContext);\n\n  const labels = await initRepoLabels(context, config);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    prNumberOrPrNumbers: number | number[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      const logInfos = {\n        repo: repo.full_name,\n        prIdOrIds,\n        prNumberOrPrNumbers,\n      };\n      context.log.info('lock: try to lock pr', logInfos);\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        context.log.info('lock: lock pr acquired', logInfos);\n        try {\n          await callback();\n        } catch (err) {\n          context.log.info('lock: release pr (with error)', logInfos);\n          release();\n          reject(err);\n          return;\n        }\n        context.log.info('lock: release pr', logInfos);\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', pr.number, () => {\n        return lockPROrPRS(String(pr.id), pr.number, async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(prResult.data, context, repoContext);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', {\n        repo: `${repo.owner.login}/${repo.name}`,\n        pr,\n      });\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (context, prNumber: number | string): void => {\n      context.log(`merge lock: remove ${repo.full_name}#${prNumber}`);\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log(`merge lock: next ${repo.full_name}`, lockMergePr);\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        repo: repo.full_name,\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const shouldIgnoreRepo = (\n  repoName: string,\n  accountConfig: Config<any, any>,\n): boolean => {\n  const ignoreRepoRegexp =\n    accountConfig.ignoreRepoPattern &&\n    new RegExp(`^${accountConfig.ignoreRepoPattern}$`);\n\n  if (repoName === 'reviewflow-test') {\n    return process.env.REVIEWFLOW_NAME !== 'reviewflow-test';\n  }\n\n  if (ignoreRepoRegexp) {\n    return ignoreRepoRegexp.test(repoName);\n  }\n\n  return false;\n};\n\nexport const obtainRepoContext = (\n  mongoStores: MongoStores,\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  const owner = repo.owner;\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  let accountConfig = accountConfigs[owner.login];\n\n  if (!accountConfig) {\n    console.warn(`using default config for ${owner.login}`);\n    accountConfig = defaultConfig as Config<any, any>;\n  }\n\n  if (shouldIgnoreRepo(repo.name, accountConfig)) {\n    console.warn('repo ignored', { owner: repo.owner.login, name: repo.name });\n    return null;\n  }\n\n  const promise = initRepoContext(mongoStores, context, accountConfig);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import { Context, Octokit } from 'probot';\nimport { MongoStores } from '../../mongo';\nimport { obtainRepoContext, RepoContext } from '../../context/repoContext';\n\nexport type PRHandler<T = any, Result = void, FourthArgument = never> = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n  fourthArgument?: FourthArgument,\n) => Promise<Result>;\n\nexport type CallbackWithPRAndRepoContext = (\n  pr: Octokit.PullsGetResponse,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends { pull_request: { id: number; number: number } }\n>(\n  mongoStores: MongoStores,\n  context: Context<T>,\n  callback: CallbackWithPRAndRepoContext,\n): Promise<void> => {\n  let pullRequest = context.payload.pull_request;\n  if (!pullRequest) {\n    const issue = (context.payload as any).issue;\n    if (!issue) return;\n    pullRequest = {\n      ...issue,\n      ...issue.pull_request,\n    };\n  }\n  if (!pullRequest) return;\n\n  const repoContext = await obtainRepoContext(mongoStores, context);\n  if (!repoContext) return;\n\n  return repoContext.lockPROrPRS(\n    String(pullRequest.id),\n    pullRequest.number,\n    async () => {\n      const prResult = await context.github.pulls.get(\n        context.repo({\n          pull_number: pullRequest.number,\n        }),\n      );\n\n      await callback(prResult.data, repoContext);\n    },\n  );\n};\n\ntype CallbackPRAndContextAndRepoContext<T> = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends { pull_request: { id: number; number: number } }\n>(\n  mongoStores: MongoStores,\n  callback: CallbackPRAndContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(mongoStores, context, (pr, repoContext) =>\n    callback(pr, context, repoContext),\n  );\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestsChange = <T>(\n  mongoStores: MongoStores,\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number; number: number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(mongoStores, context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(\n    prs.map((pr) => String(pr.id)),\n    prs.map((pr) => pr.number),\n    () => callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PRHandler } from '../utils';\nimport { contextIssue } from '../../context/utils';\n\nexport const autoAssignPRToCreator: PRHandler<Webhooks.WebhookPayloadPullRequest> = async (\n  pr,\n  context,\n  repoContext,\n) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    contextIssue(context, {\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z][\\dA-Za-z]+)[ -](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/i, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../accountConfigs/types';\nimport { parseBodyWithOptions, parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  body: string;\n  options?: Record<Options, boolean>;\n}\n\nconst getReplacement = (infos?: StatusInfo[]): string => {\n  if (!infos) return '$1$2';\n  return infos.length !== 0\n    ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n$2`\n    : '$2';\n};\n\nexport const updateBody = (\n  body: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n  updateOptions?: Partial<Record<Options, boolean>>,\n): UpdatedBodyWithOptions => {\n  const parsed = parseBodyWithOptions(body, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return { body };\n  }\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  const infosAndCommitNotesParagraph = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^\\s*(?:(#### Infos:.*)?(#### Commits Notes:.*)?#### Options:)?.*$/s,\n    getReplacement(infos),\n  );\n\n  const updatedOptions = !updateOptions\n    ? options\n    : { ...options, ...updateOptions };\n\n  return {\n    options: updatedOptions,\n    body: `${content}${reviewflowContentColPrefix}\n${infosAndCommitNotesParagraph}#### Options:\n${toMarkdownOptions(updatedOptions)}\n${reviewflowContentColSuffix}${ending || ''}`,\n  };\n};\n\nexport const updateBodyCommitsNotes = (\n  body: string,\n  commitNotes?: string,\n): string => {\n  const parsed = parseBody(body);\n  if (!parsed) {\n    console.info('could not parse body');\n    return body;\n  }\n\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  } = parsed;\n\n  const reviewflowContentColReplaced = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /(?:#### Commits Notes:.*)?(#### Options:)/s,\n    // eslint-disable-next-line no-nested-ternary\n    !commitNotes ? '$1' : `#### Commits Notes:\\n\\n${commitNotes}\\n\\n$1`,\n  );\n\n  return `${content}${reviewflowContentColPrefix}${reviewflowContentColReplaced}${reviewflowContentColSuffix}${\n    ending || ''\n  }`;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextIssue } from '../../context/utils';\n\ninterface UpdatePr {\n  title?: string;\n  body?: string;\n}\n\nexport const updatePrIfNeeded = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  update: UpdatePr,\n): Promise<void> => {\n  const hasDiffInTitle = update.title && pr.title !== update.title;\n  const hasDiffInBody = update.body && pr.body !== update.body;\n\n  if (hasDiffInTitle || hasDiffInBody) {\n    const diff: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      diff.title = update.title;\n      pr.title = update.title as string;\n    }\n    if (hasDiffInBody) {\n      diff.body = update.body;\n      pr.body = update.body as string;\n    }\n\n    await context.github.issues.update(contextIssue(context, diff));\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport { contextIssue } from '../../../context/utils';\nimport hasLabelInPR from './hasLabelInPR';\n\ninterface SyncLabelOptions {\n  onRemove?: () => void | Promise<void>;\n  onAdd?: (prLabels: LabelResponse[]) => void | Promise<void>;\n}\n\nexport default async function syncLabel<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  shouldHaveLabel: boolean,\n  label: LabelResponse,\n  prHasLabel = hasLabelInPR(pr.labels, label),\n  { onRemove, onAdd }: SyncLabelOptions = {},\n): Promise<void> {\n  if (prHasLabel && !shouldHaveLabel) {\n    await context.github.issues.removeLabel(\n      contextIssue(context, { name: label.name }),\n    );\n    if (onRemove) await onRemove();\n  }\n  if (shouldHaveLabel && !prHasLabel) {\n    const response = await context.github.issues.addLabels(\n      contextIssue(context, { labels: [label.name] }),\n    );\n    if (onAdd) await onAdd(response.data);\n  }\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\n\nexport default async function createStatus<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  name: string,\n  sha: string,\n  type: 'failure' | 'success',\n  description: string,\n  url?: string,\n): Promise<void> {\n  await context.github.repos.createStatus(\n    context.repo({\n      context:\n        name === ''\n          ? process.env.REVIEWFLOW_NAME\n          : `${process.env.REVIEWFLOW_NAME}/${name}`,\n      sha,\n      state: type,\n      description,\n      target_url: url,\n    }),\n  );\n}\n","/* eslint-disable max-lines */\nimport Webhooks from '@octokit/webhooks';\nimport { StatusError, StatusInfo } from '../../accountConfigs/types';\nimport { PRHandler } from '../utils';\nimport { ExcludesFalsy } from '../../utils/ExcludesFalsy';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport { updatePrIfNeeded } from './updatePr';\nimport hasLabelInPR from './utils/hasLabelInPR';\nimport syncLabel from './utils/syncLabel';\nimport createStatus from './utils/createStatus';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nexport const editOpenedPR: PRHandler<\n  Webhooks.WebhookPayloadPullRequest,\n  { skipAutoMerge: boolean },\n  string\n> = async (pr, context, repoContext, previousSha) => {\n  const repo = context.payload.repository;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return { skipAutoMerge: true };\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find(\n    (check): boolean => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(\n        ({ name, error, info }): Promise<void> =>\n          createStatus(\n            context,\n            name,\n            pr.head.sha,\n            error ? 'failure' : 'success',\n            error ? error.title : (info as StatusInfo).title,\n            error ? undefined : (info as StatusInfo).url,\n          ),\n      ),\n      ...(previousSha\n        ? statuses\n            .map(({ name, error, info }): Promise<void> | undefined =>\n              error\n                ? createStatus(\n                    context,\n                    name,\n                    previousSha,\n                    'success',\n                    'New commits have been pushed',\n                  )\n                : undefined,\n            )\n            .filter(ExcludesFalsy)\n        : []),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck && previousSha && errorRule\n        ? createStatus(\n            context,\n            'lint-pr',\n            previousSha,\n            'success',\n            'New commits have been pushed',\n          )\n        : undefined,\n      !hasLintPrCheck &&\n        createStatus(\n          context,\n          'lint-pr',\n          pr.head.sha,\n          errorRule ? 'failure' : 'success',\n          errorRule ? errorRule.error.title : '✓ Your PR is valid',\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = hasLabelInPR(pr.labels, featureBranchLabel);\n  const prHasSkipCiLabel = hasLabelInPR(pr.labels, skipCiLabel);\n  const prHasAutoMergeLabel = hasLabelInPR(pr.labels, automergeLabel);\n\n  const defaultOptions = {\n    ...repoContext.config.prDefaultOptions,\n    featureBranch: prHasFeatureBranchLabel,\n    autoMergeWithSkipCi: prHasSkipCiLabel,\n    autoMerge: prHasAutoMergeLabel,\n  };\n\n  const { body, options } = updateBody(\n    pr.body,\n    defaultOptions,\n    statuses\n      .filter((status) => status.info && status.info.inBody)\n      .map((status) => status.info) as StatusInfo[],\n  );\n  await updatePrIfNeeded(pr, context, repoContext, { title, body });\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    await Promise.all([\n      featureBranchLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.featureBranch,\n          featureBranchLabel,\n          prHasFeatureBranchLabel,\n        ),\n      skipCiLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMergeWithSkipCi,\n          skipCiLabel,\n          prHasSkipCiLabel,\n        ),\n      automergeLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMerge,\n          automergeLabel,\n          prHasAutoMergeLabel,\n          {\n            onAdd: async (prLabels) => {\n              await autoMergeIfPossible(pr, context, repoContext, prLabels);\n            },\n            onRemove: () => {\n              repoContext.removePrFromAutomergeQueue(context, pr.number);\n            },\n          },\n        ),\n    ]);\n\n    if (!automergeLabel) {\n      return { skipAutoMerge: true };\n    }\n  }\n\n  return { skipAutoMerge: false };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\nimport createStatus from './utils/createStatus';\n\nconst addStatusCheck = async function <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n  previousSha?: string,\n): Promise<void> {\n  const hasPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find((check) => check.name === process.env.REVIEWFLOW_NAME);\n\n  context.log.debug('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else if (previousSha && state === 'failure') {\n    await Promise.all([\n      createStatus(\n        context,\n        '',\n        previousSha,\n        'success',\n        'New commits have been pushed',\n      ),\n      createStatus(context, '', pr.head.sha, state, description),\n    ]);\n  } else {\n    await createStatus(context, '', pr.head.sha, state, description);\n  }\n};\n\nexport const updateStatusCheckFromLabels = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  labels: LabelResponse[] = pr.labels || [],\n  previousSha?: string,\n): Promise<void> => {\n  context.log.debug('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l?.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  const createFailedStatusCheck = (description: string): Promise<void> =>\n    addStatusCheck(\n      pr,\n      context,\n      {\n        state: 'failure',\n        description,\n      },\n      previousSha,\n    );\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(\n    pr,\n    context,\n    {\n      state: 'success',\n      description: '✓ PR ready to merge !',\n    },\n    previousSha,\n  );\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../accountConfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextIssue } from '../../context/utils';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends { repository: Webhooks.PayloadRepository },\n  GroupNames extends string = any\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.debug('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n          toAddNames.add(label.name);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          contextIssue(context, {\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          try {\n            const result = await context.github.issues.removeLabel(\n              contextIssue(context, {\n                name: toDeleteName,\n              }),\n            );\n            prLabels = result.data;\n          } catch (err) {\n            context.log.warn('error removing label', {\n              err: err?.message,\n            });\n          }\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        contextIssue(context, {\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(pr, context, repoContext, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextPr } from '../../context/utils';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nexport const autoApproveAndAutoMerge = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = repoContext.labels['code/approved'];\n  if (hasLabelInPR(pr.labels, codeApprovedLabel)) {\n    await context.github.pulls.createReview(\n      contextPr(context, { event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(pr, context, repoContext);\n    return true;\n  }\n\n  return false;\n};\n","import Webhooks from '@octokit/webhooks';\nimport parse from '@commitlint/parse';\nimport { PRHandler } from '../utils';\nimport { contextPr } from '../../context/utils';\nimport syncLabel from './utils/syncLabel';\nimport { updateBodyCommitsNotes } from './utils/updateBody';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const readCommitsAndUpdateInfos: PRHandler<Webhooks.WebhookPayloadPullRequest> = async (\n  pr,\n  context,\n  repoContext,\n) => {\n  // tmp.data[0].sha\n  // tmp.data[0].commit.message\n\n  const commits = await context.github.paginate(\n    context.github.pulls.listCommits.endpoint.merge(\n      contextPr(context, {\n        // A custom page size up to 100. Default is 30.\n        per_page: 100,\n      }),\n    ),\n    (res) => res.data,\n  );\n\n  const conventionalCommits = await Promise.all(\n    commits.map((c) => parse(c.commit.message)),\n  );\n\n  const breakingChangesCommits: any = conventionalCommits.reduce(\n    (acc, c, index) => {\n      const breakingChangesNotes = c.notes.filter(\n        (note: any) => note.title === 'BREAKING CHANGE',\n      );\n      if (breakingChangesNotes.length !== 0) {\n        acc.push({ commit: commits[index], breakingChangesNotes });\n      }\n\n      return acc;\n    },\n    [],\n  );\n\n  const breakingChangesLabel = repoContext.labels['breaking-changes'];\n  const newBody = updateBodyCommitsNotes(\n    pr.body,\n    breakingChangesCommits.length === 0\n      ? ''\n      : `Breaking Changes:\\n${breakingChangesCommits\n          .map(({ commit, breakingChangesNotes }: any) =>\n            breakingChangesNotes.map(\n              (note: any) =>\n                `- ${note.text.replace('\\n', ' ')} (${commit.sha})`,\n            ),\n          )\n          .join('')}`,\n  );\n\n  await Promise.all([\n    syncLabel(\n      pr,\n      context,\n      breakingChangesCommits.length !== 0,\n      breakingChangesLabel,\n    ),\n    updatePrIfNeeded(pr, context, repoContext, { body: newBody }),\n  ]);\n\n  // TODO auto update ! in front of : to signal a breaking change when https://github.com/conventional-changelog/commitlint/issues/658 is closed\n};\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function opened(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const fromRenovate = pr.head.ref.startsWith('renovate/');\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(pr, context, repoContext),\n          editOpenedPR(pr, context, repoContext).then(() => {\n            return readCommitsAndUpdateInfos(pr, context, repoContext);\n          }),\n          fromRenovate\n            ? autoApproveAndAutoMerge(pr, context, repoContext).then(\n                async (approved: boolean): Promise<void> => {\n                  if (!approved) {\n                    await updateReviewStatus(pr, context, repoContext, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(pr, context, repoContext, 'dev', {\n                add: ['needsReview'],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBodyWithOptions } from './actions/utils/parseBody';\n\nexport default function closed(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id\n              ? parseBodyWithOptions(\n                  pr.body,\n                  repoContext.config.prDefaultOptions,\n                )\n              : null;\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            parsedBody?.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            updateReviewStatus(pr, context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function closed(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.reopened',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        await Promise.all([\n          updateReviewStatus(pr, context, repoContext, 'dev', {\n            add: ['needsReview'],\n            remove: ['approved'],\n          }),\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { MessageCategory } from '../../dm/MessageCategory';\nimport { RepoContext } from '../../context/repoContext';\n\nexport const postSlackMessageWithSecondaryBlock = (\n  repoContext: RepoContext,\n  category: MessageCategory,\n  userId: number,\n  userLogin: string,\n  message: string,\n  secondaryBlockText?: string,\n): ReturnType<RepoContext['slack']['postMessage']> => {\n  return repoContext.slack.postMessage(category, userId, userLogin, {\n    text: message,\n    blocks: [\n      {\n        type: 'section' as const,\n        text: {\n          type: 'mrkdwn' as const,\n          text: message,\n        },\n      },\n    ],\n    secondaryBlocks: !secondaryBlockText\n      ? undefined\n      : [\n          {\n            type: 'section' as const,\n            text: {\n              type: 'mrkdwn' as const,\n              text: secondaryBlockText,\n            },\n          },\n        ],\n  });\n};\n","import { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextPr, getKeys } from '../../context/utils';\n\ntype ReviewState = 'CHANGES_REQUESTED' | 'APPROVED' | 'DISMISSED';\n\ninterface ReviewStates {\n  approved: number;\n  changesRequested: number;\n  dismissed: number;\n}\ninterface Reviewer {\n  id: number;\n  login: string;\n}\n\nexport const getReviewersAndReviewStates = async <\n  GroupNames extends string = any\n>(\n  context: Context,\n  repoContext: RepoContext<GroupNames>,\n): Promise<{\n  reviewers: Reviewer[];\n  reviewStates: Record<GroupNames, ReviewStates>;\n}> => {\n  const userIds = new Set<number>();\n  const reviewers: Reviewer[] = [];\n  const reviewStatesByUser = new Map<number, ReviewState>();\n\n  await context.github.paginate(\n    context.github.pulls.listReviews.endpoint.merge(contextPr(context)),\n    ({ data: reviews }: Octokit.Response<Octokit.PullsListReviewsResponse>) => {\n      reviews.forEach((review) => {\n        if (!userIds.has(review.user.id)) {\n          userIds.add(review.user.id);\n          reviewers.push({ id: review.user.id, login: review.user.login });\n        }\n        const state = review.state.toUpperCase();\n        if (state !== 'COMMENTED') {\n          reviewStatesByUser.set(review.user.id, state as ReviewState);\n        }\n      });\n    },\n  );\n\n  const reviewStates: Record<GroupNames, ReviewStates> = {} as Record<\n    GroupNames,\n    ReviewStates\n  >;\n\n  getKeys(repoContext.config.groups).forEach((groupName) => {\n    reviewStates[groupName] = {\n      approved: 0,\n      changesRequested: 0,\n      dismissed: 0,\n    };\n  });\n\n  reviewers.forEach((reviewer) => {\n    const group = repoContext.getReviewerGroup(reviewer.login);\n    if (group) {\n      const state = reviewStatesByUser.get(reviewer.id);\n      switch (state) {\n        case 'APPROVED':\n          reviewStates[group].approved++;\n          break;\n        case 'CHANGES_REQUESTED':\n          reviewStates[group].changesRequested++;\n          break;\n        case 'DISMISSED':\n          reviewStates[group].dismissed++;\n          break;\n      }\n    }\n  });\n\n  return { reviewers, reviewStates };\n};\n","import issueParser from 'issue-parser';\n\nconst parse = issueParser('github', { actions: {}, issuePrefixes: [] });\n\nexport const parseMentions = (body: string): readonly string[] => {\n  return parse(body).mentions.map((m) => m.user);\n};\n","import { Application, Octokit, Context } from 'probot';\nimport { WebhookPayloadPullRequestReviewComment } from '@octokit/webhooks';\nimport { contextPr } from '../context/utils';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { postSlackMessageWithSecondaryBlock } from './utils/postSlackMessageWithSecondaryBlock';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\nimport { parseMentions } from './utils/parseMentions';\n\nconst getDiscussion = async (\n  context: Context,\n  comment: any,\n): Promise<Octokit.PullsListCommentsResponse> => {\n  if (!comment.in_reply_to_id) return [comment];\n  return context.github.paginate(\n    context.github.pulls.listComments.endpoint.merge(contextPr(context)),\n    ({ data }: Octokit.Response<Octokit.PullsListCommentsResponse>) => {\n      return data.filter(\n        (c) =>\n          c.in_reply_to_id === comment.in_reply_to_id ||\n          c.id === comment.in_reply_to_id,\n      );\n    },\n  );\n};\n\nconst getMentions = (\n  discussion: Octokit.PullsListCommentsResponse,\n): string[] => {\n  const mentions = new Set<string>();\n\n  discussion.forEach((c) => {\n    parseMentions(c.body).forEach((m) => mentions.add(m));\n  });\n\n  return [...mentions];\n};\n\nconst getUsersInThread = (\n  discussion: Octokit.PullsListCommentsResponse,\n): { id: number; login: string }[] => {\n  const userIds = new Set<number>();\n  const users: { id: number; login: string }[] = [];\n\n  discussion.forEach((c) => {\n    if (userIds.has(c.user.id)) return;\n    userIds.add(c.user.id);\n    users.push({ id: c.user.id, login: c.user.login });\n  });\n\n  return users;\n};\n\nexport default function prComment(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    [\n      'pull_request_review_comment.created',\n      // comments without review and without path are sent with issue_comment.created.\n      // createHandlerPullRequestChange checks if pull_request event is present, removing real issues comments.\n      'issue_comment.created',\n    ],\n    createHandlerPullRequestChange<WebhookPayloadPullRequestReviewComment>(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const { comment } = context.payload;\n\n        const body = comment.body;\n        if (!body) return;\n\n        const commentByOwner = pr.user.login === comment.user.login;\n        const [discussion, { reviewers }] = await Promise.all([\n          getDiscussion(context, comment),\n          getReviewersAndReviewStates(context, repoContext),\n        ]);\n\n        const followers = reviewers.filter(\n          (u) => u.id !== pr.user.id && u.id !== comment.user.id,\n        );\n\n        const usersInThread = getUsersInThread(discussion).filter(\n          (u) =>\n            u.id !== pr.user.id &&\n            u.id !== comment.user.id &&\n            !followers.find((f) => f.id === u.id),\n        );\n        const mentions = getMentions(discussion).filter(\n          (m) =>\n            m !== pr.user.login &&\n            m !== comment.user.login &&\n            !followers.find((f) => f.login === m) &&\n            !usersInThread.find((u) => u.login === m),\n        );\n\n        const mention = repoContext.slack.mention(comment.user.login);\n        const prUrl = repoContext.slack.prLink(pr, context);\n        const ownerMention = repoContext.slack.mention(pr.user.login);\n        const commentLink = repoContext.slack.link(\n          comment.html_url,\n          'commented',\n        );\n\n        const createMessage = (toOwner?: boolean): string => {\n          const ownerPart = toOwner ? 'your PR' : `${ownerMention}'s PR `;\n          return `:speech_balloon: ${mention} ${commentLink} on ${ownerPart} ${prUrl}`;\n        };\n\n        if (!commentByOwner) {\n          postSlackMessageWithSecondaryBlock(\n            repoContext,\n            'pr-comment',\n            pr.user.id,\n            pr.user.login,\n            createMessage(true),\n            body,\n          );\n        }\n\n        followers.forEach((follower) => {\n          postSlackMessageWithSecondaryBlock(\n            repoContext,\n            'pr-comment-follow',\n            follower.id,\n            follower.login,\n            createMessage(false),\n            body,\n          );\n        });\n\n        usersInThread.forEach((user) => {\n          postSlackMessageWithSecondaryBlock(\n            repoContext,\n            'pr-comment-thread',\n            user.id,\n            user.login,\n            createMessage(false),\n            body,\n          );\n        });\n\n        if (mentions.length !== 0) {\n          mongoStores.users\n            .findAll({ login: { $in: mentions } })\n            .then((users) => {\n              users.forEach((u) => {\n                postSlackMessageWithSecondaryBlock(\n                  repoContext,\n                  'pr-comment-mention',\n                  u._id as any, // TODO _id is number\n                  u.login,\n                  createMessage(false),\n                  body,\n                );\n              });\n            });\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        // ignore if sender is self (dismissed review rerequest review)\n        if (sender.type === 'Bot') return;\n\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.approveShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: ['needsReview', !shouldWait && 'requested'],\n            remove: ['approved'],\n          });\n\n          repoContext.slack.updateHome(pr.user.login);\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          repoContext.slack.postMessage(\n            'pr-review',\n            reviewer.id,\n            reviewer.login,\n            {\n              text: `:eyes: ${repoContext.slack.mention(\n                sender.login,\n              )} requests your review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )} !\\n> ${pr.title}`,\n            },\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\n\nexport default function reviewRequestRemoved(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { reviewStates } = await getReviewersAndReviewStates(\n            context,\n            repoContext,\n          );\n\n          const hasChangesRequestedInReviews =\n            reviewStates[reviewerGroup].changesRequested !== 0;\n\n          const hasApprovedInReviews =\n            reviewStates[reviewerGroup].approved !== 0;\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed (should still be in changed requested anyway, but we never know)\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup && 'requested',\n            ],\n          });\n\n          repoContext.slack.updateHome(pr.user.login);\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (repoContext.slack) {\n          repoContext.slack.postMessage(\n            'pr-review',\n            reviewer.id,\n            reviewer.login,\n            {\n              text: `:skull_and_crossbones: ${repoContext.slack.mention(\n                sender.login,\n              )} removed the request for your review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            },\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\nimport { postSlackMessageWithSecondaryBlock } from './utils/postSlackMessageWithSecondaryBlock';\n\nexport default function reviewSubmitted(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const {\n          user: reviewer,\n          state,\n          body,\n          html_url: reviewUrl,\n        } = (context.payload as any).review;\n\n        const reviewByOwner = pr.user.login === reviewer.login;\n        const { reviewers, reviewStates } = await getReviewersAndReviewStates(\n          context,\n          repoContext,\n        );\n        const followers = reviewers.filter(\n          (user, index) => user.id !== reviewer.id && user.id !== pr.user.id,\n        );\n\n        if (!reviewByOwner) {\n          const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n          let merged: boolean;\n\n          if (\n            reviewerGroup &&\n            repoContext.config.labels.review[reviewerGroup]\n          ) {\n            const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n              reviewerGroup,\n              pr.requested_reviewers,\n              {\n                includesReviewerGroup: true,\n                // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n                // includesWaitForGroups: true,\n              },\n            );\n\n            const hasChangesRequestedInReviews =\n              reviewStates[reviewerGroup].changesRequested !== 0;\n\n            const approved =\n              !hasRequestedReviewsForGroup &&\n              !hasChangesRequestedInReviews &&\n              state === 'approved';\n\n            const newLabels = await updateReviewStatus(\n              pr,\n              context,\n              repoContext,\n              reviewerGroup,\n              {\n                add: [\n                  approved && 'approved',\n                  state === 'changes_requested' && 'needsReview',\n                  state === 'changes_requested' && 'changesRequested',\n                ],\n                remove: [\n                  approved && 'needsReview',\n                  !hasRequestedReviewsForGroup && 'requested',\n                  state === 'approved' &&\n                    !hasChangesRequestedInReviews &&\n                    'changesRequested',\n                  state === 'changes_requested' && 'approved',\n                ],\n              },\n            );\n\n            if (approved && !hasChangesRequestedInReviews) {\n              merged = await autoMergeIfPossible(\n                pr,\n                context,\n                repoContext,\n                newLabels,\n              );\n            }\n          }\n\n          repoContext.slack.updateHome(pr.user.login);\n          repoContext.slack.updateHome(reviewer.login);\n\n          const mention = repoContext.slack.mention(reviewer.login);\n          const prUrl = repoContext.slack.prLink(pr, context);\n          const ownerMention = repoContext.slack.mention(pr.user.login);\n\n          if (!body && state !== 'changes_requested' && state !== 'approved') {\n            return;\n          }\n\n          const createMessage = (toOwner?: boolean): string => {\n            const ownerPart = toOwner ? 'your PR' : `${ownerMention}'s PR `;\n\n            if (state === 'changes_requested') {\n              return `:x: ${mention} requests changes on ${ownerPart} ${prUrl}`;\n            }\n            if (state === 'approved') {\n              return `${\n                toOwner ? ':clap: ' : ''\n              }:white_check_mark: ${mention} approves ${ownerPart} ${prUrl}${\n                merged ? ' and PR is merged :tada:' : ''\n              }`;\n            }\n\n            const commentLink = repoContext.slack.link(reviewUrl, 'commented');\n            return `:speech_balloon: ${mention} ${commentLink} on ${ownerPart} ${prUrl}`;\n          };\n\n          postSlackMessageWithSecondaryBlock(\n            repoContext,\n            'pr-review',\n            pr.user.id,\n            pr.user.login,\n            createMessage(true),\n            body,\n          );\n\n          followers.forEach((follower) => {\n            postSlackMessageWithSecondaryBlock(\n              repoContext,\n              'pr-review-follow',\n              follower.id,\n              follower.login,\n              createMessage(false),\n              body,\n            );\n          });\n        } else if (body) {\n          const mention = repoContext.slack.mention(reviewer.login);\n          const prUrl = repoContext.slack.prLink(pr, context);\n\n          const commentLink = repoContext.slack.link(reviewUrl, 'commented');\n          const message = `:speech_balloon: ${mention} ${commentLink} on his PR ${prUrl}`;\n\n          followers.forEach((follower) => {\n            postSlackMessageWithSecondaryBlock(\n              repoContext,\n              'pr-review-follow',\n              follower.id,\n              follower.login,\n              message,\n              body,\n            );\n          });\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\n\nexport default function reviewDismissed(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { reviewStates } = await getReviewersAndReviewStates(\n            context,\n            repoContext,\n          );\n          const hasChangesRequestedInReviews =\n            reviewStates[reviewerGroup].changesRequested !== 0;\n          const hasApprovals = reviewStates[reviewerGroup].approved !== 0;\n          const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            { includesReviewerGroup: true },\n          );\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              !hasApprovals && 'needsReview',\n              hasApprovals &&\n                !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'approved',\n            ],\n            remove: [\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n              !hasChangesRequestedInReviews && 'changesRequested',\n              !hasApprovals && 'approved',\n            ],\n          });\n\n          repoContext.slack.updateHome(pr.user.login);\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              'pr-review',\n              pr.user.id,\n              pr.user.login,\n              {\n                text: `:skull: ${repoContext.slack.mention(\n                  reviewer.login,\n                )} dismissed his review on ${repoContext.slack.prLink(\n                  pr,\n                  context,\n                )}`,\n              },\n            );\n          } else {\n            repoContext.slack.postMessage(\n              'pr-review',\n              reviewer.id,\n              reviewer.login,\n              {\n                text: `:skull: ${repoContext.slack.mention(\n                  sender.login,\n                )} dismissed your review on ${repoContext.slack.prLink(\n                  pr,\n                  context,\n                )}`,\n              },\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function synchronize(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n        const previousSha = (context.payload as any).before as string;\n\n        await Promise.all([\n          editOpenedPR(pr, context, repoContext, previousSha),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(\n            pr,\n            context,\n            repoContext,\n            pr.labels,\n            previousSha,\n          ),\n\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n\n        // call autoMergeIfPossible to re-add to the queue when push is fixed\n        await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        if (\n          sender.type === 'Bot' &&\n          sender.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n        ) {\n          return;\n        }\n\n        const { skipAutoMerge } = await editOpenedPR(pr, context, repoContext);\n        if (!skipAutoMerge) await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateBody } from './utils/updateBody';\nimport { Options } from './utils/prOptions';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const updatePrBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  updateOptions: Partial<Record<Options, boolean>>,\n): Promise<void> => {\n  const { body } = updateBody(\n    pr.body,\n    repoContext.config.prDefaultOptions,\n    undefined,\n    updateOptions,\n  );\n\n  await updatePrIfNeeded(pr, context, repoContext, { body });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { contextPr, contextIssue } from '../context/utils';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrBody } from './actions/updatePrBody';\nimport hasLabelInPR from './actions/utils/hasLabelInPR';\n\nexport default function labelsChanged(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context: Context<Webhooks.WebhookPayloadPullRequest>) => {\n      const sender = context.payload.sender;\n      const fromRenovate =\n        sender.type === 'Bot' && sender.login === 'renovate[bot]';\n      context.payload.pull_request.head.ref.startsWith('renovate/');\n\n      if (sender.type === 'Bot' && !fromRenovate) {\n        return;\n      }\n\n      await handlerPullRequestChange(\n        mongoStores,\n        context,\n        async (pr, repoContext) => {\n          const label = (context.payload as any).label;\n          if (fromRenovate) {\n            const codeApprovedLabel = repoContext.labels['code/approved'];\n            const autoMergeLabel = repoContext.labels['merge/automerge'];\n            const autoMergeSkipCiLabel = repoContext.labels['merge/skip-ci'];\n            if (context.payload.action === 'labeled') {\n              if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n                // const { data: reviews } = await context.github.pulls.listReviews(\n                //   contextPr(context, { per_page: 1 }),\n                // );\n                // if (reviews.length !== 0) {\n                await context.github.pulls.createReview(\n                  contextPr(context, { event: 'APPROVE' }),\n                );\n                if (autoMergeSkipCiLabel) {\n                  await context.github.issues.addLabels(\n                    contextIssue(context, {\n                      labels: [autoMergeSkipCiLabel.name],\n                    }),\n                  );\n                }\n                await updateStatusCheckFromLabels(pr, context, repoContext);\n                await updatePrBody(pr, context, repoContext, {\n                  autoMergeWithSkipCi: true,\n                  // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                  autoMerge: hasLabelInPR(pr.labels, autoMergeLabel)\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMerge,\n                });\n                // }\n              } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n                await updatePrBody(pr, context, repoContext, {\n                  autoMerge: true,\n                  // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                  // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                  autoMergeWithSkipCi: hasLabelInPR(\n                    pr.labels,\n                    codeApprovedLabel,\n                  )\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n                });\n              }\n              await autoMergeIfPossible(pr, context, repoContext);\n            }\n            return;\n          }\n\n          if (repoContext.protectedLabelIds.includes(label.id)) {\n            if (context.payload.action === 'labeled') {\n              await context.github.issues.removeLabel(\n                contextIssue(context, { name: label.name }),\n              );\n            } else {\n              await context.github.issues.addLabels(\n                contextIssue(context, { labels: [label.name] }),\n              );\n            }\n            return;\n          }\n\n          await updateStatusCheckFromLabels(pr, context, repoContext);\n\n          const featureBranchLabel = repoContext.labels['feature-branch'];\n          const automergeLabel = repoContext.labels['merge/automerge'];\n          const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n          const option = (() => {\n            if (featureBranchLabel && label.id === featureBranchLabel.id)\n              return 'featureBranch';\n            if (automergeLabel && label.id === automergeLabel.id)\n              return 'autoMerge';\n            if (skipCiLabel && label.id === skipCiLabel.id)\n              return 'autoMergeWithSkipCi';\n            return null;\n          })();\n\n          if (option) {\n            await updatePrBody(pr, context, repoContext, {\n              [option]: context.payload.action === 'labeled',\n            });\n          } else if (context.payload.action === 'labeled') {\n            if (\n              repoContext.labels['merge/automerge'] &&\n              label.id === repoContext.labels['merge/automerge'].id\n            ) {\n              await autoMergeIfPossible(pr, context, repoContext);\n            }\n          }\n        },\n      );\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      mongoStores,\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  pull_number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      mongoStores,\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  pull_number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      mongoStores,\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (\n          context.payload.state !== 'loading' &&\n          isSameBranch(context, lockedPr)\n        ) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","import { Context } from 'probot';\nimport { accountConfigs, defaultConfig } from '../../accountConfigs';\nimport { MongoStores } from '../../mongo';\nimport {\n  AccountContext,\n  obtainAccountContext,\n} from '../../context/accountContext';\n\ntype CallbackContextAndAccountContext<T> = (\n  context: Context<T>,\n  accountContext: AccountContext,\n) => void | Promise<void>;\n\nexport const handlerOrgChange = async <\n  T extends { organization: { id: number; login: string } }\n>(\n  mongoStores: MongoStores,\n  context: Context<T>,\n  callback: CallbackContextAndAccountContext<T>,\n): Promise<void> => {\n  const org = context.payload.organization;\n  const config = accountConfigs[org.login] || defaultConfig;\n  const accountContext = await obtainAccountContext(\n    mongoStores,\n    context,\n    config,\n    { ...org, type: 'Organization' },\n  );\n  if (!accountContext) return;\n\n  return accountContext.lock(async () => {\n    await callback(context, accountContext);\n  });\n};\n\nexport const createHandlerOrgChange = <\n  T extends { organization: { id: number; login: string } }\n>(\n  mongoStores: MongoStores,\n  callback: CallbackContextAndAccountContext<T>,\n) => (context: Context<T>) => {\n  return handlerOrgChange(mongoStores, context, callback);\n};\n","import { Application } from 'probot';\nimport Webhooks from '@octokit/webhooks';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reopenedHandler from './pr-handlers/reopened';\nimport comment from './pr-handlers/comment';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchronizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\nimport { MongoStores } from './mongo';\nimport { createHandlerOrgChange } from './account-handlers/utils/handler';\nimport { syncOrg } from './account-handlers/actions/syncOrg';\nimport { syncTeams } from './account-handlers/actions/syncTeams';\n\nexport default function initApp(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  /* https://developer.github.com/webhooks/event-payloads/#organization */\n  app.on(\n    ['organization.member_added', 'organization.member_removed'],\n    createHandlerOrgChange<Webhooks.WebhookPayloadOrganization>(\n      mongoStores,\n      async (context, accountContext) => {\n        await syncOrg(\n          mongoStores,\n          context.github,\n          accountContext.account.installationId as number,\n          context.payload.organization,\n        );\n      },\n    ),\n  );\n\n  /* https://developer.github.com/webhooks/event-payloads/#team */\n  app.on(\n    ['team.created', 'team.deleted', 'team.edited'],\n    createHandlerOrgChange<Webhooks.WebhookPayloadTeam>(\n      mongoStores,\n      async (context, accountContext) => {\n        await syncTeams(\n          mongoStores,\n          context.github,\n          context.payload.organization,\n        );\n      },\n    ),\n  );\n\n  // /* https://developer.github.com/webhooks/event-payloads/#membership */\n  // app.on(\n  //   ['membership.added', 'membership.removed'],\n  //   createHandlerOrgChange<Webhooks.WebhookPayloadMembership>(\n  //     mongoStores,\n  //     async (context, accountContext) => {\n  //       await syncTeamMembers(\n  //         mongoStores,\n  //         context.github,\n  //         context.payload.organization,\n  //         context.payload.team,\n  //       );\n  //     },\n  //   ),\n  // );\n\n  // PR\n  /* https://developer.github.com/webhooks/event-payloads/#pull_request */\n  openedHandler(app, mongoStores);\n  editedHandler(app, mongoStores);\n  closedHandler(app, mongoStores);\n  reopenedHandler(app, mongoStores);\n\n  reviewRequestedHandler(app, mongoStores);\n  reviewRequestRemovedHandler(app, mongoStores);\n  reviewSubmittedHandler(app, mongoStores);\n  reviewDismissedHandler(app, mongoStores);\n  labelsChanged(app, mongoStores);\n  synchronizeHandler(app, mongoStores);\n\n  /* https://developer.github.com/webhooks/event-payloads/#pull_request_review_comment */\n  comment(app, mongoStores);\n\n  /* https://developer.github.com/webhooks/event-payloads/#check_run */\n  checkrunCompleted(app, mongoStores);\n\n  /* https://developer.github.com/webhooks/event-payloads/#check_suite */\n  checksuiteCompleted(app, mongoStores);\n\n  /* https://developer.github.com/webhooks/event-payloads/#status */\n  status(app, mongoStores);\n}\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\nimport initApp from './initApp';\nimport { updateAllOrgs } from './slack/home';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application): void => {\n  const mongoStores = mongoInit();\n  appRouter(app, mongoStores);\n  initApp(app, mongoStores);\n  updateAllOrgs(mongoStores, (id: number) => app.auth(id));\n});\n"],"names":["process","env","MONGO_DB","Error","init","config","Map","MONGO_HOST","MONGO_PORT","MONGO_USER","set","MONGO_PASSWORD","connection","MongoConnection","userDmSettings","MongoStore","collection","then","coll","createIndex","userId","orgId","unique","users","login","orgs","orgMembers","orgTeams","Layout","lang","title","REVIEWFLOW_NAME","children","padding","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","create","client","id","secret","auth","tokenHost","tokenPath","authorizePath","AUTH_SECRET_KEY","signPromisified","promisify","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","strategy","host","hostname","PORT","readAuthCookie","cookie","cookies","algorithm","audience","headers","getAuthInfoFromCookie","res","authInfo","clearCookie","undefined","getUser","redirect","api","Octokit","accessToken","router","get","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error","send","error_description","code","result","getToken","renderToStaticMarkup","access_token","octokit","user","getAuthenticated","data","time","Date","now","token","expiresIn","httpOnly","repository","repos","list","per_page","map","repo","owner","name","length","params","status","permissions","admin","data2","apps","getRepoInstallation","catch","err","home","listForAuthenticatedUser","display","flexGrow","org","syncTeams","mongoStores","github","orgEmbed","teamIds","Promise","all","paginate","teams","endpoint","merge","team","push","upsertOne","_id","slug","description","deleteMany","$not","$in","syncOrg","installationId","orgInStore","memberIds","listMembers","member","type","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","groups","waitForGroups","labels","color","review","ci","inProgress","succeeded","failed","ignoreRepoPattern","regExp","summary","bot","statusInfoFromMatch","match","issue","inBody","url","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","CamilSadiki","busser","abarreir","arthurflachs","damienorny","darame07","Pixy","Radyum","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","vlbr","mdcarter","ChibiBlasphem","design","jperriere","CoralineColasse","Lenamari","ops","logins","backends","frontends","duplicate","documentation","rfc","bug","enhancement","question","wontfix","needsReview","requested","changesRequested","approved","tilap","chrisconfig","accountConfigs","ornikar","reviewflow","defaultDmSettings","cache","getDefaultDmSettings","accountConfig","defaultConfig","updateCache","newSettings","orgCache","getUserDmSettings","orgDefaultDmSettings","userDmSettingsConfig","findOne","settings","dmMessages","orgSettings","find","o","findByKey","installation","getOrgInstallation","width","Object","entries","key","__html","patch","bodyParser","json","body","updateOne","$set","value","updated","$setOnInsert","created","upsert","syncUser","userInfo","userSettings","u","getUserInstallation","username","appRouter","app","route","use","cookieParser","options","optionsRegexps","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","reduce","acc","exec","parseBody","reviewFlowCol","reviewflowContent","ending","reviewFlowColMatch","reviewflowContentCol","reviewflowContentColPrefix","reviewflowContentColSuffix","parseBodyWithOptions","parsedBody","breakingChanges","replace","trim","hasLabelInPR","prLabels","some","l","hasFailedStatusOrChecks","pr","context","checks","listForRef","ref","head","sha","failedChecks","check_runs","filter","check","conclusion","log","info","combinedStatus","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossible","repoContext","autoMergeLabel","debug","prId","prNumber","number","removePrFromAutomergeQueue","createMergeLockPrFromPr","branch","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","String","pushAutomergeQueue","addMergeLockPr","mergeable","prResult","pulls","pull_number","merged","mergeable_state","reschedule","startsWith","includes","renovateRebaseBody","issues","update","issue_number","base","mergeResult","merge_method","commit_title","commit_message","Boolean","message","ExcludesFalsy","getLabelsForRepo","listLabelsForRepo","initRepoLabels","finalLabels","labelKey","labelConfig","labelColor","slice","existingLabel","createLabel","current_name","updateLabel","createLink","text","updateMember","slackClient","slack","prsWithRequestedReviews","prsToMerge","prsWithRequestedChanges","search","issuesAndPullRequests","q","sort","order","blocks","buildBlocks","results","total_count","items","html_url","views","publish","user_id","view","updateOrg","WebClient","slackToken","cursor","forEach","updateAllOrgs","getKeys","keys","contextIssue","object","payload","pull_request","contextPr","voidTeamSlack","mention","link","postMessage","resolve","prLink","updateHome","initTeamSlack","account","githubLoginToSlackEmail","groupName","assign","slackEmails","values","membersInDb","findAll","members","foundEmailMembers","email","m","im","missingEmails","memberEmailToMemberId","page","profile","has","partialUpdateMany","conversations","open","channel","console","membersMap","getUserFromGithubLogin","githubLogin","category","githubId","DRY_RUN","chat","attachments","secondaryBlocks","thread_ts","ts","ok","slackHome","getOrCreateAccount","accountInfo","initAccountContext","slackPromise","githubLoginToGroup","githubLoginToTeams","teamName","getReviewerGroups","githubLogins","Set","lock","Lock","accountType","callback","reject","logInfos","createReleaseCallback","release","getReviewerGroup","getTeamsForLogin","approveShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","group","accountContextsPromise","accountContexts","obtainAccountContext","existingAccountContext","existingPromise","promise","accountContext","delete","initRepoContext","reviewGroupNames","needsReviewLabelIds","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","prNumberOrPrNumbers","full_name","setTimeout","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","p","repoContextsPromise","repoContexts","shouldIgnoreRepo","repoName","ignoreRepoRegexp","test","obtainRepoContext","existingRepoContext","warn","handlerPullRequestChange","pullRequest","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","addAssignees","cleanTitle","s","arg1","arg2","toUpperCase","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","getReplacement","updateBody","updateOptions","parsed","infosAndCommitNotesParagraph","updatedOptions","updateBodyCommitsNotes","commitNotes","reviewflowContentColReplaced","updatePrIfNeeded","hasDiffInTitle","hasDiffInBody","diff","syncLabel","shouldHaveLabel","prHasLabel","onRemove","onAdd","removeLabel","response","addLabels","createStatus","target_url","editOpenedPR","previousSha","skipAutoMerge","isPrFromBot","errorRule","rule","date","toISOString","hasLintPrCheck","head_sha","started_at","completed_at","output","featureBranchLabel","automergeLabel","skipCiLabel","prHasFeatureBranchLabel","prHasSkipCiLabel","prHasAutoMergeLabel","defaultOptions","addStatusCheck","hasPrCheck","created_at","updateStatusCheckFromLabels","createFailedStatusCheck","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","existing","size","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","readCommitsAndUpdateInfos","commits","listCommits","conventionalCommits","c","parse","commit","breakingChangesCommits","index","breakingChangesNotes","notes","note","breakingChangesLabel","newBody","opened","on","fromRenovate","closed","git","deleteRef","postSlackMessageWithSecondaryBlock","userLogin","secondaryBlockText","getReviewersAndReviewStates","userIds","reviewers","reviewStatesByUser","listReviews","reviews","reviewStates","dismissed","reviewer","issueParser","actions","issuePrefixes","parseMentions","mentions","getDiscussion","comment","in_reply_to_id","listComments","getMentions","discussion","getUsersInThread","prComment","commentByOwner","followers","usersInThread","f","prUrl","ownerMention","commentLink","createMessage","toOwner","ownerPart","follower","reviewRequested","sender","requested_reviewer","reviewRequestRemoved","hasRequestedReviewsForGroup","hasChangesRequestedInReviews","hasApprovedInReviews","reviewSubmitted","reviewUrl","reviewByOwner","newLabels","reviewDismissed","hasApprovals","synchronize","before","edited","updatePrBody","labelsChanged","autoMergeSkipCiLabel","action","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","handlerOrgChange","organization","createHandlerOrgChange","initApp","openedHandler","editedHandler","closedHandler","reopenedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchronizeHandler","Probot","run","mongoInit"],"mappings":"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"}