{"version":3,"file":"index-node10.cjs.js","sources":["../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/app/auth.tsx","../src/app/repository.tsx","../src/app/home.tsx","../src/events/account-handlers/actions/syncTeams.ts","../src/events/account-handlers/actions/syncOrg.ts","../src/accountConfigs/defaultConfig.ts","../src/accountConfigs/ornikar.ts","../src/accountConfigs/christophehurpeau.ts","../src/accountConfigs/reviewflow.ts","../src/accountConfigs/index.ts","../src/dm/defaultDmSettings.ts","../src/dm/getUserDmSettings.ts","../src/app/org-settings.tsx","../src/events/account-handlers/actions/syncUser.ts","../src/app/user-settings.tsx","../src/appRouter.tsx","../src/events/pr-handlers/actions/utils/prOptions.ts","../src/events/pr-handlers/actions/utils/parseBody.ts","../src/events/pr-handlers/actions/utils/hasLabelInPR.ts","../src/events/pr-handlers/actions/autoMergeIfPossible.ts","../src/utils/ExcludesFalsy.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/voidTeamSlack.ts","../src/context/initTeamSlack.ts","../src/context/getOrCreateAccount.ts","../src/context/accountContext.ts","../src/context/repoContext.ts","../src/events/pr-handlers/utils/index.ts","../src/events/pr-handlers/actions/autoAssignPRToCreator.ts","../src/events/pr-handlers/actions/utils/cleanTitle.ts","../src/events/pr-handlers/actions/utils/updateBody.ts","../src/events/pr-handlers/actions/updatePr.ts","../src/events/pr-handlers/actions/utils/syncLabel.ts","../src/events/pr-handlers/actions/utils/createStatus.ts","../src/events/pr-handlers/actions/editOpenedPR.ts","../src/events/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/events/pr-handlers/actions/updateReviewStatus.ts","../src/events/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/events/pr-handlers/actions/readCommitsAndUpdateInfos.ts","../src/events/pr-handlers/opened.ts","../src/events/pr-handlers/closed.ts","../src/events/pr-handlers/reopened.ts","../src/slack/utils.ts","../src/events/pr-handlers/utils/createSlackMessageWithSecondaryBlock.ts","../src/events/pr-handlers/utils/getReviewersAndReviewStates.ts","../src/events/pr-handlers/utils/parseMentions.ts","../src/events/pr-handlers/utils/isBotUser.ts","../src/events/pr-handlers/commentCreated.ts","../src/events/pr-handlers/commentEditedOrDeleted.ts","../src/events/pr-handlers/reviewRequested.ts","../src/events/pr-handlers/reviewRequestRemoved.ts","../src/events/pr-handlers/reviewSubmitted.ts","../src/events/pr-handlers/reviewDismissed.ts","../src/events/pr-handlers/synchronize.ts","../src/events/pr-handlers/edited.ts","../src/events/pr-handlers/actions/updatePrBody.ts","../src/events/pr-handlers/labelsChanged.ts","../src/events/pr-handlers/checkrunCompleted.ts","../src/events/pr-handlers/checksuiteCompleted.ts","../src/events/pr-handlers/status.ts","../src/events/account-handlers/utils/handler.ts","../src/events/repository-handlers/repoEdited.ts","../src/initApp.ts","../src/slack/home.ts","../src/index.ts"],"sourcesContent":["import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { SlackMessage } from './context/SlackMessage';\nimport { MessageCategory } from './dm/MessageCategory';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport type AccountType = 'Organization' | 'User';\n\nexport interface AccountEmbed {\n  id: number;\n  login: string;\n  type: AccountType;\n}\n\ntype AccountEmbedWithoutType = Omit<AccountEmbed, 'type'>;\n\nexport interface UserDmSettings extends MongoModel {\n  userId: number;\n  orgId: number;\n  settings: Record<MessageCategory, boolean>;\n}\n\n// TODO _id is number\ninterface BaseAccount extends MongoModel {\n  login: string;\n  installationId?: number;\n}\n\nexport interface User extends BaseAccount {\n  type: string;\n}\n\nexport interface Org extends BaseAccount {\n  slackToken?: string;\n}\n\nexport interface OrgMember extends MongoModel {\n  org: AccountEmbedWithoutType;\n  user: AccountEmbedWithoutType;\n  slack?: { id: string };\n}\n\nexport interface OrgTeam extends MongoModel {\n  org: AccountEmbedWithoutType;\n  name: string;\n  slug: string;\n  description: string;\n}\n\nexport type SlackMessageType =\n  | 'review-comment'\n  | 'issue-comment'\n  | 'review-submitted'\n  | 'review-requested';\n\nexport interface SlackSentMessage extends MongoModel {\n  type: SlackMessageType;\n  typeId: number;\n  account: AccountEmbed;\n  message: SlackMessage;\n  sentTo: {\n    channel: string;\n    ts: string;\n  }[];\n}\n\nexport interface AutomergeLog extends MongoModel {\n  account: AccountEmbed;\n  repoFullName: string;\n  pr: {\n    id: number;\n    number: number;\n    isRenovate: boolean;\n    mergeableState: string;\n  };\n  type:\n    | 'rebase-renovate'\n    | 'unknown mergeable_state'\n    | 'blocked mergeable_state'\n    | 'behind mergeable_state'\n    | 'not mergeable'\n    | 'failed status or checks'\n    | 'already merged';\n  action: 'remove' | 'reschedule' | 'wait' | 'update branch';\n}\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  userDmSettings: MongoStore<UserDmSettings>;\n  users: MongoStore<User>;\n  orgs: MongoStore<Org>;\n  orgMembers: MongoStore<OrgMember>;\n  orgTeams: MongoStore<OrgTeam>;\n  slackSentMessages: MongoStore<SlackSentMessage>;\n  automergeLogs: MongoStore<AutomergeLog>;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const config = new Map([\n    ['host', process.env.MONGO_HOST || 'localhost'],\n    ['port', process.env.MONGO_PORT || '27017'],\n    ['database', process.env.MONGO_DB as string],\n  ]);\n  if (process.env.MONGO_USER) {\n    config.set('user', process.env.MONGO_USER);\n    config.set('password', process.env.MONGO_PASSWORD as string);\n  }\n  const connection = new MongoConnection(config);\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  const userDmSettings = new MongoStore<UserDmSettings>(\n    connection,\n    'userDmSettings',\n  );\n  userDmSettings.collection.then((coll) => {\n    coll.createIndex({ userId: 1, orgId: 1 }, { unique: true });\n  });\n\n  const users = new MongoStore<User>(connection, 'users');\n  users.collection.then((coll) => {\n    coll.createIndex({ login: 1 }, { unique: true });\n  });\n\n  const orgs = new MongoStore<Org>(connection, 'orgs');\n  orgs.collection.then((coll) => {\n    coll.createIndex({ login: 1 }, { unique: true });\n  });\n\n  const orgMembers = new MongoStore<OrgMember>(connection, 'orgMembers');\n  orgMembers.collection.then((coll) => {\n    coll.createIndex({ 'user.id': 1, 'org.id': 1 }, { unique: true });\n  });\n\n  const orgTeams = new MongoStore<OrgTeam>(connection, 'orgTeams');\n  orgTeams.collection.then((coll) => {\n    coll.createIndex({ 'org.id': 1 });\n  });\n\n  const slackSentMessages = new MongoStore<SlackSentMessage>(\n    connection,\n    'slackSentMessages',\n  );\n  slackSentMessages.collection.then((coll) => {\n    coll.createIndex({\n      'account.id': 1,\n      'account.type': 1,\n      type: 1,\n      typeId: 1,\n    });\n    // remove older than 14 days\n    coll.deleteMany({\n      created: { $lt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000) },\n    });\n  });\n\n  const automergeLogs = new MongoStore<AutomergeLog>(\n    connection,\n    'automergeLogs',\n  );\n  automergeLogs.collection.then((coll) => {\n    coll.createIndex({\n      repoFullName: 1,\n      type: 1,\n    });\n    coll.createIndex({\n      repoFullName: 1,\n      'pr.number': 1,\n    });\n    // remove older than 30 days\n    coll.deleteMany({\n      created: { $lt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) },\n    });\n  });\n\n  // return { connection, prEvents };\n  return {\n    connection,\n    userDmSettings,\n    users,\n    orgs,\n    orgMembers,\n    orgTeams,\n    slackSentMessages,\n    automergeLogs,\n  };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.REVIEWFLOW_NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>\n        <div style={{ padding: '24px 48px' }}>{children}</div>\n      </body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { promisify } from 'util';\nimport { Octokit } from 'probot';\nimport type { Router, Request, Response } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { sign, verify } from 'jsonwebtoken';\nimport * as githubAuth from '../auth/github';\nimport Layout from '../views/Layout';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request): string => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/app/login-response`;\n};\n\ninterface AuthInfo {\n  id: number;\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nconst getAuthInfoFromCookie = async (\n  req: Request,\n  res: Response,\n): Promise<undefined | AuthInfo> => {\n  const strategy = 'gh'; // req.params.strategy\n  const authInfo = await readAuthCookie(req, strategy);\n\n  if (authInfo?.id) {\n    return authInfo;\n  }\n\n  res.clearCookie(`auth_${strategy}`);\n  return undefined;\n};\n\nexport const getUser = async (\n  req: Request,\n  res: Response,\n): Promise<{ authInfo: AuthInfo; api: Octokit } | null> => {\n  const authInfo = await getAuthInfoFromCookie(req, res);\n  if (!authInfo) {\n    res.redirect('/app/login');\n    return null;\n  }\n\n  return {\n    authInfo,\n    api: new Octokit({ auth: `token ${authInfo.accessToken}` }),\n  };\n};\n\nexport default function auth(router: Router): void {\n  router.get('/login', async (req: Request, res: Response) => {\n    if (await getAuthInfoFromCookie(req, res)) {\n      return res.redirect('/app');\n    }\n\n    // const state = await randomHex(8);\n    // res.cookie(`auth_${strategy}_${state}`, strategy, {\n    //   maxAge: 10 * 60 * 1000,\n    //   httpOnly: true,\n    //   secure,\n    // });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req),\n      scope: 'read:user,repo',\n      // state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code: string = req.query.code as string;\n    // const state = req.query.state;\n    // const cookieName = `auth_${strategy}_${state}`;\n    // const cookie = req.cookies && req.cookies[cookieName];\n    // if (!cookie) {\n    //   // res.redirect(`/${strategy}/login`);\n    //   res.send(\n    //     '<html><body>No cookie for this state. <a href=\"/app/login\">Retry ?</a></body></html>',\n    //   );\n    //   return;\n    // }\n    // res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req),\n    });\n\n    if (!result) {\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/app/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const id = user.data.id;\n    const login = user.data.login;\n\n    const authInfo: AuthInfo = { id, login, accessToken, time: Date.now() };\n    const token = await signPromisified(authInfo, AUTH_SECRET_KEY, {\n      algorithm: 'HS512',\n      audience: req.headers['user-agent'],\n      expiresIn: '10 days',\n    });\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/app');\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function repository(router: Router, api: GitHubAPI): void {\n  router.get('/repositories', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n    const { data } = await user.api.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a href={`/app/repository/${repo.owner.login}/${repo.name}`}>\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n\n            {data.length === 100 && (\n              <div>We currently have a limit to 100 repositories</div>\n            )}\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/repository/:owner/:repository', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n    const { data } = await user.api.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    if (!data.permissions.admin) {\n      res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed on this repo. Go to \"}\n              <a\n                href={`https://github.com/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function home(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h1>{process.env.REVIEWFLOW_NAME}</h1>\n            <div style={{ display: 'flex' }}>\n              <div style={{ flexGrow: 1 }}>\n                <h4>Choose your account</h4>\n                <ul>\n                  <li>\n                    <a href=\"/app/user\">{user.authInfo.login}</a>\n                  </li>\n                  {orgs.data.map((org) => (\n                    <li key={org.id}>\n                      <a href={`/app/org/${org.login}`}>{org.login}</a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import { Octokit } from 'probot';\nimport { MongoStores } from '../../../mongo';\n\nexport const syncTeams = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  org: { login: string; id: number },\n): Promise<void> => {\n  const orgEmbed = { id: org.id, login: org.login };\n\n  const teamIds: number[] = [];\n\n  await Promise.all(\n    await github.paginate(\n      github.teams.list.endpoint.merge({\n        org: org.login,\n      }),\n      ({ data }: Octokit.Response<Octokit.TeamsListResponse>) => {\n        return Promise.all(\n          data.map((team) => {\n            teamIds.push(team.id);\n            return mongoStores.orgTeams.upsertOne({\n              _id: team.id as any, // TODO _id number\n              org: orgEmbed,\n              name: team.name,\n              slug: team.slug,\n              description: team.description,\n            });\n          }),\n        );\n      },\n    ),\n  );\n\n  await mongoStores.orgTeams.deleteMany({\n    'org.id': org.id,\n    _id: { $not: { $in: teamIds } },\n  });\n};\n","import { Octokit } from 'probot';\nimport { MongoStores, Org } from '../../../mongo';\n\ninterface OrgInfo {\n  login: string;\n  id: number;\n}\n\nexport const syncOrg = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  installationId: number,\n  org: OrgInfo,\n): Promise<Org> => {\n  const orgInStore = await mongoStores.orgs.upsertOne({\n    _id: org.id as any, // TODO _id is number\n    login: org.login,\n    installationId,\n  });\n\n  const orgEmbed = { id: org.id, login: org.login };\n\n  const memberIds: number[] = [];\n\n  await Promise.all(\n    await github.paginate(\n      github.orgs.listMembers.endpoint.merge({\n        org: org.login,\n      }),\n      ({ data }: Octokit.Response<Octokit.OrgsListMembersResponse>) => {\n        return Promise.all(\n          data.map(async (member) => {\n            memberIds.push(member.id);\n            return Promise.all([\n              mongoStores.orgMembers.upsertOne({\n                _id: `${org.id}_${member.id}`,\n                org: orgEmbed,\n                user: {\n                  id: member.id,\n                  login: member.login,\n                },\n              }),\n              mongoStores.users.upsertOne({\n                _id: member.id as any,\n                login: member.login,\n                type: member.type,\n              }),\n            ]);\n          }),\n        );\n      },\n    ),\n  );\n\n  await mongoStores.orgMembers.deleteMany({\n    'org.id': org.id,\n    'user.id': { $not: { $in: memberIds } },\n  });\n\n  return orgInStore;\n};\n","import { Config } from './types';\n\nconst config: Config<never, never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [],\n  },\n  groups: {},\n  waitForGroups: {},\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'ops' | 'frontends' | 'backends'> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  ignoreRepoPattern: '(infra-.*|devenv)',\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z][\\dA-Z]+-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  botUsers: ['michael-robot'],\n\n  groups: {\n    dev: {\n      /* ops */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Alan-pad': null,\n      CamilSadiki: null,\n      busser: null,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Radyum: `romain.reynaud${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'budet-b': `benjamin.budet${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      mdcarter: `maxime.dehaye${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      ChibiBlasphem: `christopher${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Lenamari: `lena${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'AlexisRiols-Ornikar': `alexis.riols${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    ops: {\n      logins: ['JulienBreux', 'Alan-pad', 'CamilSadiki', 'busser'],\n      labels: ['teams/ops'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n        'Radyum',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'vlbr',\n        'budet-b',\n        'mdcarter',\n        'ChibiBlasphem',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/ops': {\n        name: 'ops',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        description: 'This issue or pull request will need a new major version',\n        color: '#FF6F00',\n      },\n      duplicate: {\n        name: 'duplicate',\n        description: 'This issue or pull request already exists',\n        color: '#ECEFF1',\n      },\n      documentation: {\n        name: 'documentation',\n        description: 'Improvements or additions to documentation',\n        color: '#7FCEFF',\n      },\n      rfc: {\n        name: 'RFC',\n        description: 'Request For Comments',\n        color: '#FFD3B2',\n      },\n      bug: {\n        name: 'bug',\n        description: \"Something isn't working\",\n        color: '#FF3D00',\n      },\n      enhancement: {\n        name: 'enhancement',\n        description: 'New feature or request',\n        color: '#7FCEFF',\n      },\n      'help-wanted': {\n        name: 'help wanted',\n        description: 'Extra attention is needed',\n        color: '#B1EE8B',\n      },\n      question: {\n        name: 'question',\n        description: 'Further information is requested',\n        color: '#F860A4',\n      },\n      wontfix: {\n        name: 'wontfix',\n        description: 'This will not be worked on',\n        color: '#ECEFF1',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?(!)?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\nimport chrisconfig from './christophehurpeau';\n\nconst config: Config<'dev', never> = {\n  ...chrisconfig,\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n    },\n  },\n};\nexport default config;\n","import { Config as ConfigType } from './types';\nimport defaultConfig from './defaultConfig';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\nimport reviewflow from './reviewflow';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const accountConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n  reviewflow,\n};\n\nexport { defaultConfig };\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","import { MessageCategory } from './MessageCategory';\n\nexport const defaultDmSettings: Record<MessageCategory, boolean> = {\n  'pr-review': true,\n  'pr-review-follow': true,\n  'pr-comment': true,\n  'pr-comment-bots': true,\n  'pr-comment-follow': true,\n  'pr-comment-follow-bots': false,\n  'pr-comment-mention': true,\n  'pr-comment-thread': true,\n  'pr-merge-conflicts': true,\n  'issue-comment-mention': true,\n};\n","import { MongoStores } from '../mongo';\nimport { accountConfigs, defaultConfig } from '../accountConfigs';\nimport { MessageCategory } from './MessageCategory';\nimport { defaultDmSettings } from './defaultDmSettings';\n\nexport type UserDmSettings = Record<MessageCategory, boolean>;\nconst cache = new Map<string, Map<number, UserDmSettings>>();\n\nconst getDefaultDmSettings = (org: string): UserDmSettings => {\n  const accountConfig = accountConfigs[org] || defaultConfig;\n  return accountConfig.defaultDmSettings\n    ? { ...defaultDmSettings, ...accountConfig.defaultDmSettings }\n    : defaultDmSettings;\n};\n\nexport const updateCache = (\n  org: string,\n  userId: number,\n  newSettings: Partial<UserDmSettings>,\n): void => {\n  let orgCache = cache.get(org);\n  if (!orgCache) {\n    orgCache = new Map();\n    cache.set(org, orgCache);\n  }\n  orgCache.set(userId, { ...getDefaultDmSettings(org), ...newSettings });\n};\n\nexport const getUserDmSettings = async (\n  mongoStores: MongoStores,\n  org: string,\n  orgId: number,\n  userId: number,\n): Promise<UserDmSettings> => {\n  const orgDefaultDmSettings = getDefaultDmSettings(org);\n\n  const userDmSettingsConfig = await mongoStores.userDmSettings.findOne({\n    orgId,\n    userId,\n  });\n\n  const config = userDmSettingsConfig\n    ? {\n        ...orgDefaultDmSettings,\n        ...userDmSettingsConfig.settings,\n      }\n    : orgDefaultDmSettings;\n\n  updateCache(org, userId, config);\n  return config;\n};\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport bodyParser from 'body-parser';\nimport { syncTeams } from '../events/account-handlers/actions/syncTeams';\nimport { syncOrg } from '../events/account-handlers/actions/syncOrg';\nimport { MessageCategory } from '../dm/MessageCategory';\nimport { getUserDmSettings, updateCache } from '../dm/getUserDmSettings';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { accountConfigs } from '../accountConfigs';\nimport { getUser } from './auth';\n\nconst dmMessages: Record<MessageCategory, string> = {\n  'pr-review': 'You are assigned to a review, someone reviewed your PR',\n  'pr-review-follow': \"Someone reviewed a PR you're also reviewing\",\n  'pr-comment': 'Someone commented on your PR',\n  'pr-comment-bots': 'A bot commented on your PR',\n  'pr-comment-follow': \"Someone commented on a PR you're reviewing\",\n  'pr-comment-follow-bots': \"A bot commented on a PR you're reviewing\",\n  'pr-comment-mention': 'Someone mentioned you in a PR',\n  'pr-comment-thread': \"Someone replied to a discussion you're in\",\n  'pr-merge-conflicts': 'Your PR has a merge conflict (not implemented)',\n  'issue-comment-mention':\n    'Someone mentioned you in an issue (not implemented)',\n};\n\nexport default function orgSettings(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/org/:org/force-sync', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    const o = await mongoStores.orgs.findByKey(org.id);\n    if (!o) return res.redirect('/app');\n\n    await syncOrg(mongoStores, user.api, o.installationId as number, org);\n    await syncTeams(mongoStores, user.api, org);\n\n    res.redirect(`/app/org/${req.params.org}`);\n  });\n\n  router.get('/org/:org', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    const installation = await api.apps\n      .getOrgInstallation({ org: org.login })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!installation) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed for this user. Go to \"}\n              <a\n                href={`https://github.com/settings/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to install it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const accountConfig = accountConfigs[org.login];\n    const userDmSettings = await getUserDmSettings(\n      mongoStores,\n      org.login,\n      org.id,\n      user.authInfo.id,\n    );\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h1>{process.env.REVIEWFLOW_NAME}</h1>\n            <div style={{ display: 'flex' }}>\n              <h2 style={{ flexGrow: 1 }}>{org.login}</h2>\n              <a href=\"/app\">Switch account</a>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n              <div style={{ flexGrow: 1 }}>\n                <h4>Information</h4>\n                {!accountConfig\n                  ? 'Default config is used: https://github.com/christophehurpeau/reviewflow/blob/master/src/accountConfigs/defaultConfig.ts'\n                  : `Custom config: https://github.com/christophehurpeau/reviewflow/blob/master/src/accountConfigs/${org.login}.ts`}\n              </div>\n              <div style={{ width: '380px' }}>\n                <h4>My DM Settings</h4>\n                {Object.entries(dmMessages).map(([key, name]) => (\n                  <div key={key}>\n                    <label htmlFor={key}>\n                      <span\n                        // eslint-disable-next-line react/no-danger\n                        dangerouslySetInnerHTML={{\n                          __html: `<input id=\"${key}\" type=\"checkbox\" autocomplete=\"off\" ${\n                            userDmSettings[key as MessageCategory]\n                              ? 'checked=\"checked\" '\n                              : ''\n                          }onclick=\"fetch(location.pathname, { method: 'PATCH', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ key: '${key}', value: event.currentTarget.checked }) })\" />`,\n                        }}\n                      />\n                      {name}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n\n  router.patch('/org/:org', bodyParser.json(), async (req, res) => {\n    if (!req.body) {\n      res.status(400).send('not ok');\n      return;\n    }\n\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    (await mongoStores.userDmSettings.collection).updateOne(\n      {\n        _id: `${org.id}_${user.authInfo.id}`,\n      },\n      {\n        $set: {\n          [`settings.${req.body.key}`]: req.body.value,\n          updated: new Date(),\n        },\n        $setOnInsert: {\n          orgId: org.id,\n          userId: user.authInfo.id,\n          created: new Date(),\n        },\n      },\n      { upsert: true },\n    );\n\n    const userDmSettingsConfig = await mongoStores.userDmSettings.findOne({\n      orgId: org.id,\n      userId: user.authInfo.id,\n    });\n\n    if (userDmSettingsConfig) {\n      updateCache(org.login, user.authInfo.id, userDmSettingsConfig.settings);\n    }\n\n    res.send('ok');\n  });\n}\n","import { Octokit } from 'probot';\nimport { MongoStores, User } from '../../../mongo';\n\ninterface UserInfo {\n  login: string;\n  id: number;\n}\n\nexport const syncUser = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  installationId: number,\n  userInfo: UserInfo,\n): Promise<User> => {\n  const user = await mongoStores.users.upsertOne({\n    _id: userInfo.id as any, // TODO _id is number\n    login: userInfo.login,\n    installationId,\n  });\n\n  return user;\n};\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport { syncUser } from '../events/account-handlers/actions/syncUser';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function userSettings(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/user/force-sync', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    // const { data: installation } = await api.apps\n    //   .getUserInstallation({\n    //     username: user.authInfo.login,\n    //   })\n    //   .catch((err) => {\n    //     return { status: err.status, data: undefined };\n    //   });\n\n    // console.log(installation);\n\n    const u = await mongoStores.users.findByKey(user.authInfo.id);\n    if (!u || !u.installationId) return res.redirect('/app');\n\n    await syncUser(\n      mongoStores,\n      user.api,\n      u.installationId as number,\n      user.authInfo,\n    );\n\n    res.redirect(`/app/user`);\n  });\n\n  router.get('/user', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const { data: installation } = await api.apps\n      .getUserInstallation({\n        username: user.authInfo.login,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!installation) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed for this user. Go to \"}\n              <a\n                href={`https://github.com/settings/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to install it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    return res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>{process.env.REVIEWFLOW_NAME} is installed for this user</div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import { Application } from 'probot';\nimport cookieParser from 'cookie-parser';\nimport { AppContext } from './context/AppContext';\nimport repository from './app/repository';\nimport auth from './app/auth';\nimport home from './app/home';\nimport orgSettings from './app/org-settings';\nimport userSettings from './app/user-settings';\n\nexport default async function appRouter(\n  app: Application,\n  { mongoStores }: AppContext,\n): Promise<void> {\n  const router = app.route('/app');\n  const api = await app.auth();\n\n  router.use(cookieParser());\n\n  auth(router);\n  repository(router, api);\n  home(router, api, mongoStores);\n  orgSettings(router, api, mongoStores);\n  userSettings(router, api, mongoStores);\n}\n","export type Options =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: Options[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'autoMergeWithSkipCi',\n    label: 'Add `[skip ci]` on merge commit',\n  },\n  {\n    name: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->)(.*)$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\ntype Config = Record<Options, boolean>;\n\nconst parseOptions = (content: string, defaultConfig: Config): Config => {\n  return optionsRegexps.reduce((acc, { name, regexp }) => {\n    const match = regexp.exec(content);\n    acc[name] = !match\n      ? defaultConfig[name] || false\n      : match[1] === 'x' || match[1] === 'X';\n    return acc;\n  }, {} as any) as Config;\n};\n\ninterface ParseBodyResultWithoutOptions {\n  content: string;\n  ending: string;\n  reviewflowContentCol: string;\n  reviewflowContentColPrefix: string;\n  reviewflowContentColSuffix: string;\n}\n\ninterface ParseBodyResultWithOptions extends ParseBodyResultWithoutOptions {\n  options: Config;\n  breakingChanges: string;\n}\n\nexport const parseBody = (\n  description: string,\n): ParseBodyResultWithoutOptions | null => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol, reviewflowContent, ending] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      ending,\n      reviewflowContentCol: reviewflowContent,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  };\n};\n\nexport const parseBodyWithOptions = (\n  description: string,\n  defaultConfig: Config,\n): ParseBodyResultWithOptions | null => {\n  const parsedBody = parseBody(description);\n  if (parsedBody === null) return null;\n\n  // console.log(parsedBody.reviewflowContentCol);\n  let breakingChanges = parsedBody.reviewflowContentCol.replace(\n    /^.*#### Commits Notes:(.*)#### Options:.*$/s,\n    '$1',\n  );\n\n  if (breakingChanges === parsedBody.reviewflowContentCol) {\n    breakingChanges = '';\n  } else {\n    breakingChanges = breakingChanges.trim();\n  }\n\n  return {\n    ...parsedBody,\n    options: parseOptions(parsedBody.reviewflowContentCol, defaultConfig),\n    breakingChanges,\n  };\n};\n","import { Octokit } from 'probot';\nimport { LabelResponse } from '../../../../context/initRepoLabels';\n\nexport default function hasLabelInPR(\n  prLabels: Octokit.PullsGetResponse['labels'],\n  label: LabelResponse,\n): boolean {\n  if (!label) return false;\n  return prLabels.some((l): boolean => l.id === label.id);\n}\n","import { Context, Octokit } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { AutomergeLog } from '../../../mongo';\nimport { AppContext } from '../../../context/AppContext';\nimport { RepoContext } from '../../../context/repoContext';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport { parseBodyWithOptions } from './utils/parseBody';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nconst hasFailedStatusOrChecks = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n): Promise<boolean> => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  appContext: AppContext,\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n\n  if (!hasLabelInPR(prLabels, autoMergeLabel)) {\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'no automerge label',\n    );\n    return false;\n  }\n\n  const isRenovatePr = pr.head.ref.startsWith('renovate/');\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (pr.state !== 'open') {\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'pr is not opened',\n    );\n  }\n\n  const addLog = (\n    type: AutomergeLog['type'],\n    action: AutomergeLog['action'],\n  ): void => {\n    const repoFullName = pr.head.repo.full_name;\n    context.log.info(`automerge: ${repoFullName}#${pr.id} ${type}`);\n    appContext.mongoStores.automergeLogs.insertOne({\n      account: repoContext.accountEmbed,\n      repoFullName,\n      pr: {\n        id: pr.id,\n        number: pr.number,\n        isRenovate: isRenovatePr,\n        mergeableState: pr.mergeable_state,\n      },\n      type,\n    });\n  };\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'blocking labels',\n    );\n    return false;\n  }\n\n  if (pr.requested_reviewers.length !== 0) {\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'still has requested reviewers',\n    );\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && String(lockedPr.number) !== String(pr.number)) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    addLog('already merged', 'remove');\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'pr already merged',\n    );\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${pr.mergeable_state}`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      addLog('unknown mergeable_state', 'reschedule');\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (isRenovatePr) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        addLog('rebase-renovate', 'wait');\n\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n        if (pr.body.includes('<!-- rebase-check -->')) {\n          if (pr.body.includes('[x] <!-- rebase-check -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- rebase-check -->',\n            '[x] <!-- rebase-check -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        addLog('failed status or checks', 'remove');\n        repoContext.removePrFromAutomergeQueue(\n          context,\n          pr.number,\n          'failed status or checks',\n        );\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        addLog('blocked mergeable_state', 'wait');\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${pr.mergeable_state}`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        addLog('failed status or checks', 'remove');\n        repoContext.removePrFromAutomergeQueue(\n          context,\n          pr.number,\n          'failed status or checks',\n        );\n        return false;\n      } else {\n        addLog('blocked mergeable_state', 'wait');\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      addLog('behind mergeable_state', 'update branch');\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    addLog('not mergeable', 'remove');\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      `mergeable_state=${pr.mergeable_state}`,\n    );\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${pr.mergeable_state}`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n\n    const parsedBody = parseBodyWithOptions(\n      pr.body,\n      repoContext.config.prDefaultOptions,\n    );\n    const options = parsedBody?.options || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: options.featureBranch\n        ? undefined\n        : `${pr.title}${options.autoMergeWithSkipCi ? ' [skip ci]' : ''} (#${\n            pr.number\n          })`,\n      commit_message: options.featureBranch ? undefined : '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number, 'merged');\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","export const ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n","import { Context, Octokit } from 'probot';\nimport { Config } from '../accountConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const getLabelsForRepo = async (\n  context: Context<any>,\n): Promise<Octokit.IssuesListLabelsForRepoResponse> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  return labels;\n};\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const labels = await getLabelsForRepo(context);\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = labelConfig.description\n      ? `${labelConfig.description} - Synced by reviewflow`\n      : `Synced by reviewflow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n      if (labelKey === 'teams/ops') {\n        existingLabel = labels.find((label) => label.name === 'archi');\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor ||\n      existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","import { Context } from 'probot';\nimport createEmojiRegex from 'emoji-regex';\n\nexport const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n\nexport const contextIssue = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  issue_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    issue_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    issue_number: number;\n  } & T;\n};\n\nexport const contextPr = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  pull_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    pull_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    pull_number: number;\n  } & T;\n};\n\nconst emojiRegex = createEmojiRegex();\n\nexport const getEmojiFromRepoDescription = (\n  description: string | null,\n): string => {\n  if (!description) return '';\n  if (description.startsWith(':')) {\n    const [, emoji] = /^(:\\w+:)/.exec(description) || [];\n    return emoji || '';\n  }\n  const match = emojiRegex.exec(description);\n  if (match && description.startsWith(match[0])) return match[0];\n  return '';\n};\n","import { TeamSlack } from './TeamSlack';\n\nexport const voidTeamSlack = (): TeamSlack => ({\n  mention: (): string => '',\n  postMessage: (): Promise<null> => Promise.resolve(null),\n  updateMessage: (): Promise<null> => Promise.resolve(null),\n  deleteMessage: (): Promise<undefined> => Promise.resolve(undefined),\n  addReaction: (): Promise<undefined> => Promise.resolve(undefined),\n  updateHome: (): void => undefined,\n});\n","import { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Org, User } from '../mongo';\nimport { getUserDmSettings } from '../dm/getUserDmSettings';\nimport { MessageCategory } from '../dm/MessageCategory';\nimport { Config } from '../accountConfigs';\nimport { getKeys } from './utils';\nimport { AppContext } from './AppContext';\nimport { SlackMessage } from './SlackMessage';\nimport { TeamSlack, PostSlackMessageResult } from './TeamSlack';\nimport { voidTeamSlack } from './voidTeamSlack';\n\nexport type { TeamSlack };\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  { mongoStores, slackHome }: AppContext,\n  context: Context<any>,\n  config: Config<GroupNames>,\n  account: Org | User,\n): Promise<TeamSlack> => {\n  const owner = context.payload.repository.owner;\n\n  if (!(account as Org).slackToken) {\n    return voidTeamSlack();\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackEmails = Object.values(githubLoginToSlackEmail);\n  const slackClient = new WebClient(account.slackToken);\n\n  const membersInDb = await mongoStores.orgMembers.findAll({\n    'org.id': account._id,\n  });\n\n  const members: [string, { member: any; im: any }][] = [];\n  const foundEmailMembers: string[] = [];\n\n  Object.entries(githubLoginToSlackEmail).forEach(([login, email]) => {\n    const member = membersInDb.find((m) => m.user.login === login);\n    if (member?.slack?.id) {\n      foundEmailMembers.push(email);\n      members.push([email, { member: { id: member.slack.id }, im: undefined }]);\n    }\n  });\n\n  if (foundEmailMembers.length !== slackEmails.length) {\n    const missingEmails = slackEmails.filter(\n      (email) => !foundEmailMembers.includes(email),\n    );\n\n    const memberEmailToMemberId = new Map<string, number>(\n      Object.entries(githubLoginToSlackEmail).map(([login, email]) => [\n        email,\n        membersInDb.find((m) => m.user.login === login)?._id as any,\n      ]),\n    );\n\n    await slackClient.paginate('users.list', {}, (page: any) => {\n      page.members.forEach((member: any) => {\n        const email = member.profile && member.profile.email;\n        if (email && missingEmails.includes(email)) {\n          members.push([email, { member, im: undefined }]);\n          if (memberEmailToMemberId.has(email)) {\n            mongoStores.orgMembers.partialUpdateMany(\n              {\n                _id: memberEmailToMemberId.get(email),\n              },\n              { $set: { slack: { id: member.id } } },\n            );\n          }\n        }\n      });\n      return false;\n    });\n  }\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.conversations.open({\n        users: user.member.id,\n      });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string): string => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (\n      category: MessageCategory,\n      githubId: number,\n      githubLogin: string,\n      message: SlackMessage,\n    ): Promise<PostSlackMessageResult> => {\n      context.log.debug('slack: post message', {\n        category,\n        githubLogin,\n        message,\n      });\n      if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return null;\n\n      const userDmSettings = await getUserDmSettings(\n        mongoStores,\n        owner.login,\n        owner.id,\n        githubId,\n      );\n\n      if (!userDmSettings[category]) return null;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return null;\n      const result = await slackClient.chat.postMessage({\n        username: process.env.REVIEWFLOW_NAME,\n        channel: user.im.id,\n        text: message.text,\n        blocks: message.blocks,\n        attachments: message.secondaryBlocks\n          ? [{ blocks: message.secondaryBlocks }]\n          : undefined,\n        thread_ts: message.ts,\n      });\n      if (!result.ok) return null;\n      return { ts: result.ts as string, channel: result.channel as string };\n    },\n    updateMessage: async (\n      ts: string,\n      channel: string,\n      message: SlackMessage,\n    ): Promise<PostSlackMessageResult> => {\n      context.log.debug('slack: update message', { ts, channel, message });\n      if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return null;\n\n      const result = await slackClient.chat.update({\n        ts,\n        channel,\n        text: message.text,\n        blocks: message.blocks,\n        attachments: message.secondaryBlocks\n          ? [{ blocks: message.secondaryBlocks }]\n          : undefined,\n      });\n      if (!result.ok) return null;\n      return { ts: result.ts as string, channel: result.channel as string };\n    },\n    deleteMessage: async (ts: string, channel: string): Promise<void> => {\n      context.log.debug('slack: delete message', { ts, channel });\n      await slackClient.chat.delete({\n        ts,\n        channel,\n      });\n    },\n    addReaction: async (\n      ts: string,\n      channel: string,\n      name: string,\n    ): Promise<void> => {\n      context.log.debug('slack: add reaction', { ts, channel, name });\n      await slackClient.reactions.add({\n        timestamp: ts,\n        channel,\n        name,\n      });\n    },\n\n    updateHome: (githubLogin: string): void => {\n      context.log.debug('update slack home', { githubLogin });\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.member) return;\n\n      slackHome.scheduleUpdateMember(context.github, slackClient, {\n        user: { id: null, login: githubLogin },\n        org: { id: account._id, login: account.login },\n        slack: { id: user.member.id },\n      } as any);\n    },\n  };\n};\n","import { Octokit } from 'probot';\nimport { syncOrg } from '../events/account-handlers/actions/syncOrg';\nimport { syncTeams } from '../events/account-handlers/actions/syncTeams';\nimport { syncUser } from '../events/account-handlers/actions/syncUser';\nimport { Org, User } from '../mongo';\nimport { AppContext } from './AppContext';\n\nexport interface AccountInfo {\n  id: number;\n  login: string;\n  type: string;\n}\n\nexport const getOrCreateAccount = async (\n  { mongoStores }: AppContext,\n  github: Octokit,\n  installationId: number,\n  accountInfo: AccountInfo,\n): Promise<Org | User> => {\n  switch (accountInfo.type) {\n    case 'Organization': {\n      let org = await mongoStores.orgs.findByKey(accountInfo.id);\n      if (org?.installationId) return org;\n\n      // TODO diff org vs user...\n      org = await syncOrg(mongoStores, github, installationId, accountInfo);\n      await syncTeams(mongoStores, github, accountInfo);\n      return org;\n    }\n\n    case 'User': {\n      let user = await mongoStores.users.findByKey(accountInfo.id);\n      if (user?.installationId) return user;\n\n      user = await syncUser(mongoStores, github, installationId, accountInfo);\n      return user;\n    }\n\n    default:\n      throw new Error(`Account type not supported ${accountInfo.type}`);\n  }\n};\n","import { Context } from 'probot';\nimport { Lock } from 'lock';\nimport { Org, User, AccountEmbed, AccountType } from '../mongo';\nimport { Config } from '../accountConfigs';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\nimport { getOrCreateAccount, AccountInfo } from './getOrCreateAccount';\nimport { AppContext } from './AppContext';\n\nexport interface AccountContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  accountType: AccountType;\n  account: Org | User;\n  accountEmbed: AccountEmbed;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => GroupNames | undefined;\n  getReviewerGroups: (githubLogins: string[]) => GroupNames[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  approveShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n\n  lock(callback: () => Promise<void> | void): Promise<void>;\n}\n\nconst initAccountContext = async (\n  appContext: AppContext,\n  context: Context<any>,\n  config: Config,\n  accountInfo: AccountInfo,\n): Promise<AccountContext> => {\n  const account = await getOrCreateAccount(\n    appContext,\n    context.github,\n    context.payload.installation.id,\n    accountInfo,\n  );\n  const slackPromise = initTeamSlack(appContext, context, config, account);\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]): string[] => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(ExcludesFalsy),\n    ),\n  ];\n\n  const lock = Lock();\n\n  return {\n    config,\n    account,\n    accountEmbed: {\n      id: accountInfo.id,\n      login: accountInfo.login,\n      type: accountInfo.type as AccountType,\n    },\n    accountType: accountInfo.type as AccountType,\n    lock: (callback: () => Promise<void> | void): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const logInfos = { account: accountInfo.login };\n        context.log.info('lock: try to lock account', logInfos);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        lock('_', async (createReleaseCallback) => {\n          const release = createReleaseCallback(() => {});\n          context.log.info('lock: lock account acquired', logInfos);\n          try {\n            await callback();\n          } catch (err) {\n            context.log.info('lock: release account (with error)', logInfos);\n            release();\n            reject(err);\n            return;\n          }\n          context.log.info('lock: release account', logInfos);\n          release();\n          resolve();\n        });\n      });\n    },\n    getReviewerGroup: (githubLogin): string | undefined =>\n      githubLoginToGroup.get(githubLogin),\n    getReviewerGroups,\n\n    getTeamsForLogin: (githubLogin): string[] =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    approveShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ): boolean => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst accountContextsPromise = new Map();\nconst accountContexts = new Map();\n\nexport const obtainAccountContext = (\n  appContext: AppContext,\n  context: Context<any>,\n  config: Config,\n  accountInfo: AccountInfo,\n): Promise<AccountContext> => {\n  const existingAccountContext = accountContexts.get(accountInfo.login);\n  if (existingAccountContext) return existingAccountContext;\n\n  const existingPromise = accountContextsPromise.get(accountInfo.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initAccountContext(appContext, context, config, accountInfo);\n  accountContextsPromise.set(accountInfo.login, promise);\n\n  return promise.then((accountContext) => {\n    accountContextsPromise.delete(accountInfo.login);\n    accountContexts.set(accountInfo.login, accountContext);\n    return accountContext;\n  });\n};\n","import { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { accountConfigs, Config, defaultConfig } from '../accountConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../events/pr-handlers/actions/autoMergeIfPossible';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { AppContext } from './AppContext';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainAccountContext, AccountContext } from './accountContext';\nimport { getEmojiFromRepoDescription } from './utils';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  repoFullName: string;\n  repoEmoji: string | undefined;\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    prNumberOrPrNumbers: number | number[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(\n    context: Context<any>,\n    prNumber: number,\n    reason: string,\n  ): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nexport type RepoContext<GroupNames extends string = any> = AccountContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  appContext: AppContext,\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const {\n    full_name: fullName,\n    owner: org,\n    description,\n  } = context.payload.repository;\n  const repoEmoji = getEmojiFromRepoDescription(description);\n\n  const accountContext = await obtainAccountContext(\n    appContext,\n    context,\n    config,\n    org,\n  );\n  const repoContext = Object.create(accountContext);\n\n  const labels = await initRepoLabels(context, config);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    prNumberOrPrNumbers: number | number[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      const logInfos = {\n        repo: fullName,\n        prIdOrIds,\n        prNumberOrPrNumbers,\n      };\n      context.log.info('lock: try to lock pr', logInfos);\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        context.log.info('lock: lock pr acquired', logInfos);\n        try {\n          await callback();\n        } catch (err) {\n          context.log.info('lock: release pr (with error)', logInfos);\n          release();\n          reject(err);\n          return;\n        }\n        context.log.info('lock: release pr', logInfos);\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', pr.number, () => {\n        return lockPROrPRS(String(pr.id), pr.number, async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(\n            appContext,\n            prResult.data,\n            context,\n            repoContext,\n          );\n        });\n      });\n    }, 10000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    repoFullName: fullName,\n    repoEmoji,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', {\n        repo: fullName,\n        pr,\n      });\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (\n      context,\n      prNumber: number | string,\n      reason: string,\n    ): void => {\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log(`merge lock: remove ${fullName}#${prNumber}: ${reason}`);\n        context.log(`merge lock: next ${fullName}`, lockMergePr);\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        const previousLength = automergeQueue.length;\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n        if (automergeQueue.length !== previousLength) {\n          context.log(`merge lock: remove ${fullName}#${prNumber}: ${reason}`);\n        }\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      context.log('merge lock: push queue', {\n        repo: fullName,\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const shouldIgnoreRepo = (\n  repoName: string,\n  accountConfig: Config<any, any>,\n): boolean => {\n  const ignoreRepoRegexp =\n    accountConfig.ignoreRepoPattern &&\n    new RegExp(`^${accountConfig.ignoreRepoPattern}$`);\n\n  if (repoName === 'reviewflow-test') {\n    return process.env.REVIEWFLOW_NAME !== 'reviewflow-test';\n  }\n\n  if (ignoreRepoRegexp) {\n    return ignoreRepoRegexp.test(repoName);\n  }\n\n  return false;\n};\n\nexport const obtainRepoContext = (\n  appContext: AppContext,\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  const owner = repo.owner;\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  let accountConfig = accountConfigs[owner.login];\n\n  if (!accountConfig) {\n    console.warn(`using default config for ${owner.login}`);\n    accountConfig = defaultConfig as Config<any, any>;\n  }\n\n  if (shouldIgnoreRepo(repo.name, accountConfig)) {\n    console.warn('repo ignored', { owner: repo.owner.login, name: repo.name });\n    return null;\n  }\n\n  const promise = initRepoContext(appContext, context, accountConfig);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import { Context, Octokit } from 'probot';\nimport { AppContext } from '../../../context/AppContext';\nimport { obtainRepoContext, RepoContext } from '../../../context/repoContext';\n\nexport type PRHandler<T = any, Result = void, FourthArgument = never> = (\n  appContext: AppContext,\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n  fourthArgument?: FourthArgument,\n) => Promise<Result>;\n\nexport type CallbackWithPRAndRepoContext = (\n  pr: Octokit.PullsGetResponse,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\ninterface Options {\n  refetchPr: boolean;\n}\n\nexport const handlerPullRequestChange = async <\n  T extends { pull_request: { id: number; number: number } }\n>(\n  appContext: AppContext,\n  context: Context<T>,\n  options: Options,\n  callback: CallbackWithPRAndRepoContext,\n): Promise<void> => {\n  let pullRequest = context.payload.pull_request;\n  if (!pullRequest) {\n    const issue = (context.payload as any).issue;\n    if (!issue) return;\n    pullRequest = {\n      ...issue,\n      ...issue.pull_request,\n    };\n  }\n  if (!pullRequest) return;\n\n  const repoContext = await obtainRepoContext(appContext, context);\n  if (!repoContext) return;\n\n  return repoContext.lockPROrPRS(\n    String(pullRequest.id),\n    pullRequest.number,\n    async () => {\n      if (!options.refetchPr) {\n        return callback(pullRequest as any, repoContext);\n      }\n\n      const prResult = await context.github.pulls.get(\n        context.repo({\n          pull_number: pullRequest.number,\n        }),\n      );\n\n      await callback(prResult.data, repoContext);\n    },\n  );\n};\n\ntype CallbackPRAndContextAndRepoContext<T> = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends { pull_request: { id: number; number: number } }\n>(\n  appContext: AppContext,\n  options: Options,\n  callback: CallbackPRAndContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(\n    appContext,\n    context,\n    options,\n    (pr, repoContext) => callback(pr, context, repoContext),\n  );\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestsChange = <T>(\n  appContext: AppContext,\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number; number: number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(appContext, context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(\n    prs.map((pr) => String(pr.id)),\n    prs.map((pr) => pr.number),\n    () => callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PRHandler } from '../utils';\nimport { contextIssue } from '../../../context/utils';\n\nexport const autoAssignPRToCreator: PRHandler<Webhooks.WebhookPayloadPullRequest> = async (\n  appContext,\n  pr,\n  context,\n  repoContext,\n) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    contextIssue(context, {\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z][\\dA-Za-z]+)[ -](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/i, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../../accountConfigs/types';\nimport { parseBodyWithOptions, parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  body: string;\n  options?: Record<Options, boolean>;\n}\n\nconst getReplacement = (infos?: StatusInfo[]): string => {\n  if (!infos) return '$1$2';\n  return infos.length !== 0\n    ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n$2`\n    : '$2';\n};\n\nexport const updateBody = (\n  body: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n  updateOptions?: Partial<Record<Options, boolean>>,\n): UpdatedBodyWithOptions => {\n  const parsed = parseBodyWithOptions(body, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return { body };\n  }\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  const infosAndCommitNotesParagraph = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^\\s*(?:(#### Infos:.*)?(#### Commits Notes:.*)?#### Options:)?.*$/s,\n    getReplacement(infos),\n  );\n\n  const updatedOptions = !updateOptions\n    ? options\n    : { ...options, ...updateOptions };\n\n  return {\n    options: updatedOptions,\n    body: `${content}${reviewflowContentColPrefix}\n${infosAndCommitNotesParagraph}#### Options:\n${toMarkdownOptions(updatedOptions)}\n${reviewflowContentColSuffix}${ending || ''}`,\n  };\n};\n\nexport const updateBodyCommitsNotes = (\n  body: string,\n  commitNotes?: string,\n): string => {\n  const parsed = parseBody(body);\n  if (!parsed) {\n    console.info('could not parse body');\n    return body;\n  }\n\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  } = parsed;\n\n  const reviewflowContentColReplaced = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /(?:#### Commits Notes:.*)?(#### Options:)/s,\n    // eslint-disable-next-line no-nested-ternary\n    !commitNotes ? '$1' : `#### Commits Notes:\\n\\n${commitNotes}\\n\\n$1`,\n  );\n\n  return `${content}${reviewflowContentColPrefix}${reviewflowContentColReplaced}${reviewflowContentColSuffix}${\n    ending || ''\n  }`;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../../context/repoContext';\nimport { contextIssue } from '../../../context/utils';\n\ninterface UpdatePr {\n  title?: string;\n  body?: string;\n}\n\nconst cleanNewLines = (text: string): string => text.replace(/\\r\\n/g, '\\n');\n\nexport const updatePrIfNeeded = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  update: UpdatePr,\n): Promise<void> => {\n  const hasDiffInTitle = update.title && pr.title !== update.title;\n  const hasDiffInBody =\n    update.body && cleanNewLines(pr.body) !== cleanNewLines(update.body);\n\n  if (hasDiffInTitle || hasDiffInBody) {\n    const diff: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      diff.title = update.title;\n      pr.title = update.title as string;\n    }\n    if (hasDiffInBody) {\n      diff.body = update.body;\n      pr.body = update.body as string;\n    }\n\n    await context.github.issues.update(contextIssue(context, diff));\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../../../context/initRepoLabels';\nimport { contextIssue } from '../../../../context/utils';\nimport hasLabelInPR from './hasLabelInPR';\n\ninterface SyncLabelOptions {\n  onRemove?: () => void | Promise<void>;\n  onAdd?: (prLabels: LabelResponse[]) => void | Promise<void>;\n}\n\nexport default async function syncLabel<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  shouldHaveLabel: boolean,\n  label: LabelResponse,\n  prHasLabel = hasLabelInPR(pr.labels, label),\n  { onRemove, onAdd }: SyncLabelOptions = {},\n): Promise<void> {\n  if (prHasLabel && !shouldHaveLabel) {\n    await context.github.issues.removeLabel(\n      contextIssue(context, { name: label.name }),\n    );\n    if (onRemove) await onRemove();\n  }\n  if (shouldHaveLabel && !prHasLabel) {\n    const response = await context.github.issues.addLabels(\n      contextIssue(context, { labels: [label.name] }),\n    );\n    if (onAdd) await onAdd(response.data);\n  }\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\n\nexport default async function createStatus<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  name: string,\n  sha: string,\n  type: 'failure' | 'success',\n  description: string,\n  url?: string,\n): Promise<void> {\n  await context.github.repos.createStatus(\n    context.repo({\n      context:\n        name === ''\n          ? process.env.REVIEWFLOW_NAME\n          : `${process.env.REVIEWFLOW_NAME}/${name}`,\n      sha,\n      state: type,\n      description,\n      target_url: url,\n    }),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { StatusError, StatusInfo } from '../../../accountConfigs/types';\nimport { PRHandler } from '../utils';\nimport { ExcludesFalsy } from '../../../utils/ExcludesFalsy';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport { updatePrIfNeeded } from './updatePr';\nimport hasLabelInPR from './utils/hasLabelInPR';\nimport syncLabel from './utils/syncLabel';\nimport createStatus from './utils/createStatus';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nexport const editOpenedPR: PRHandler<\n  Webhooks.WebhookPayloadPullRequest,\n  { skipAutoMerge: boolean },\n  string\n> = async (appContext, pr, context, repoContext, previousSha) => {\n  const repo = context.payload.repository;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return { skipAutoMerge: true };\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find(\n    (check): boolean => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(\n        ({ name, error, info }): Promise<void> =>\n          createStatus(\n            context,\n            name,\n            pr.head.sha,\n            error ? 'failure' : 'success',\n            error ? error.title : (info as StatusInfo).title,\n            error ? undefined : (info as StatusInfo).url,\n          ),\n      ),\n      ...(previousSha\n        ? statuses\n            .map(({ name, error, info }): Promise<void> | undefined =>\n              error\n                ? createStatus(\n                    context,\n                    name,\n                    previousSha,\n                    'success',\n                    'New commits have been pushed',\n                  )\n                : undefined,\n            )\n            .filter(ExcludesFalsy)\n        : []),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck && previousSha && errorRule\n        ? createStatus(\n            context,\n            'lint-pr',\n            previousSha,\n            'success',\n            'New commits have been pushed',\n          )\n        : undefined,\n      !hasLintPrCheck &&\n        createStatus(\n          context,\n          'lint-pr',\n          pr.head.sha,\n          errorRule ? 'failure' : 'success',\n          errorRule ? errorRule.error.title : '✓ Your PR is valid',\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = hasLabelInPR(pr.labels, featureBranchLabel);\n  const prHasSkipCiLabel = hasLabelInPR(pr.labels, skipCiLabel);\n  const prHasAutoMergeLabel = hasLabelInPR(pr.labels, automergeLabel);\n\n  const defaultOptions = {\n    ...repoContext.config.prDefaultOptions,\n    featureBranch: prHasFeatureBranchLabel,\n    autoMergeWithSkipCi: prHasSkipCiLabel,\n    autoMerge: prHasAutoMergeLabel,\n  };\n\n  const { body, options } = updateBody(\n    pr.body,\n    defaultOptions,\n    statuses\n      .filter((status) => status.info && status.info.inBody)\n      .map((status) => status.info) as StatusInfo[],\n  );\n  await updatePrIfNeeded(pr, context, repoContext, { title, body });\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    await Promise.all([\n      featureBranchLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.featureBranch,\n          featureBranchLabel,\n          prHasFeatureBranchLabel,\n        ),\n      skipCiLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMergeWithSkipCi,\n          skipCiLabel,\n          prHasSkipCiLabel,\n        ),\n      automergeLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMerge,\n          automergeLabel,\n          prHasAutoMergeLabel,\n          {\n            onAdd: async (prLabels) => {\n              await autoMergeIfPossible(\n                appContext,\n                pr,\n                context,\n                repoContext,\n                prLabels,\n              );\n            },\n            onRemove: () => {\n              repoContext.removePrFromAutomergeQueue(\n                context,\n                pr.number,\n                'label removed',\n              );\n            },\n          },\n        ),\n    ]);\n\n    if (!automergeLabel) {\n      return { skipAutoMerge: true };\n    }\n  }\n\n  return { skipAutoMerge: false };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport { RepoContext } from '../../../context/repoContext';\nimport createStatus from './utils/createStatus';\n\nconst addStatusCheck = async function <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n  previousSha?: string,\n): Promise<void> {\n  const hasPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find((check) => check.name === process.env.REVIEWFLOW_NAME);\n\n  context.log.debug('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else if (previousSha && state === 'failure') {\n    await Promise.all([\n      createStatus(\n        context,\n        '',\n        previousSha,\n        'success',\n        'New commits have been pushed',\n      ),\n      createStatus(context, '', pr.head.sha, state, description),\n    ]);\n  } else {\n    await createStatus(context, '', pr.head.sha, state, description);\n  }\n};\n\nexport const updateStatusCheckFromLabels = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  labels: LabelResponse[] = pr.labels || [],\n  previousSha?: string,\n): Promise<void> => {\n  context.log.debug('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l?.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  const createFailedStatusCheck = (description: string): Promise<void> =>\n    addStatusCheck(\n      pr,\n      context,\n      {\n        state: 'failure',\n        description,\n      },\n      previousSha,\n    );\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(\n    pr,\n    context,\n    {\n      state: 'success',\n      description: '✓ PR ready to merge !',\n    },\n    previousSha,\n  );\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport { GroupLabels } from '../../../accountConfigs/types';\nimport { RepoContext } from '../../../context/repoContext';\nimport { contextIssue } from '../../../context/utils';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends { repository: Webhooks.PayloadRepository },\n  GroupNames extends string = any\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.debug('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n          toAddNames.add(label.name);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          contextIssue(context, {\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          try {\n            const result = await context.github.issues.removeLabel(\n              contextIssue(context, {\n                name: toDeleteName,\n              }),\n            );\n            prLabels = result.data;\n          } catch (err) {\n            context.log.warn('error removing label', {\n              err: err?.message,\n            });\n          }\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        contextIssue(context, {\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(pr, context, repoContext, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { AppContext } from '../../../context/AppContext';\nimport { RepoContext } from '../../../context/repoContext';\nimport { contextPr } from '../../../context/utils';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nexport const autoApproveAndAutoMerge = async (\n  appContext: AppContext,\n  pr: Octokit.PullsGetResponse,\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = repoContext.labels['code/approved'];\n  if (hasLabelInPR(pr.labels, codeApprovedLabel)) {\n    await context.github.pulls.createReview(\n      contextPr(context, { event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(appContext, pr, context, repoContext);\n    return true;\n  }\n\n  return false;\n};\n","import Webhooks from '@octokit/webhooks';\nimport parse from '@commitlint/parse';\nimport { PRHandler } from '../utils';\nimport { contextPr } from '../../../context/utils';\nimport syncLabel from './utils/syncLabel';\nimport { updateBodyCommitsNotes } from './utils/updateBody';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const readCommitsAndUpdateInfos: PRHandler<Webhooks.WebhookPayloadPullRequest> = async (\n  appContext,\n  pr,\n  context,\n  repoContext,\n) => {\n  // tmp.data[0].sha\n  // tmp.data[0].commit.message\n\n  const commits = await context.github.paginate(\n    context.github.pulls.listCommits.endpoint.merge(\n      contextPr(context, {\n        // A custom page size up to 100. Default is 30.\n        per_page: 100,\n      }),\n    ),\n    (res) => res.data,\n  );\n\n  const conventionalCommits = await Promise.all(\n    commits.map((c) => parse(c.commit.message)),\n  );\n\n  const breakingChangesCommits: any = conventionalCommits.reduce(\n    (acc, c, index) => {\n      const breakingChangesNotes = c.notes.filter(\n        (note: any) => note.title === 'BREAKING CHANGE',\n      );\n      if (breakingChangesNotes.length !== 0) {\n        acc.push({ commit: commits[index], breakingChangesNotes });\n      }\n\n      return acc;\n    },\n    [],\n  );\n\n  const breakingChangesLabel = repoContext.labels['breaking-changes'];\n  const newBody = updateBodyCommitsNotes(\n    pr.body,\n    breakingChangesCommits.length === 0\n      ? ''\n      : `Breaking Changes:\\n${breakingChangesCommits\n          .map(({ commit, breakingChangesNotes }: any) =>\n            breakingChangesNotes.map(\n              (note: any) =>\n                `- ${note.text.replace('\\n', ' ')} (${commit.sha})`,\n            ),\n          )\n          .join('')}`,\n  );\n\n  await Promise.all([\n    syncLabel(\n      pr,\n      context,\n      breakingChangesCommits.length !== 0,\n      breakingChangesLabel,\n    ),\n    updatePrIfNeeded(pr, context, repoContext, { body: newBody }),\n  ]);\n\n  // TODO auto update ! in front of : to signal a breaking change when https://github.com/conventional-changelog/commitlint/issues/658 is closed\n};\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function opened(app: Application, appContext: AppContext): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        const fromRenovate = pr.head.ref.startsWith('renovate/');\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(appContext, pr, context, repoContext),\n          editOpenedPR(appContext, pr, context, repoContext).then(() => {\n            return readCommitsAndUpdateInfos(\n              appContext,\n              pr,\n              context,\n              repoContext,\n            );\n          }),\n          fromRenovate\n            ? autoApproveAndAutoMerge(\n                appContext,\n                pr,\n                context,\n                repoContext,\n              ).then(\n                async (approved: boolean): Promise<void> => {\n                  if (!approved) {\n                    await updateReviewStatus(pr, context, repoContext, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(pr, context, repoContext, 'dev', {\n                add: ['needsReview'],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBodyWithOptions } from './actions/utils/parseBody';\n\nexport default function closed(app: Application, appContext: AppContext): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id\n              ? parseBodyWithOptions(\n                  pr.body,\n                  repoContext.config.prDefaultOptions,\n                )\n              : null;\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(\n              context,\n              pr.number,\n              'pr closed',\n            ),\n            parsedBody?.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(\n              context,\n              pr.number,\n              'pr closed',\n            ),\n            updateReviewStatus(pr, context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n\n        repoContext.slack.updateHome(pr.user.login);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function closed(app: Application, appContext: AppContext): void {\n  app.on(\n    'pull_request.reopened',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        await Promise.all([\n          updateReviewStatus(pr, context, repoContext, 'dev', {\n            add: ['needsReview'],\n            remove: ['approved'],\n          }),\n          readCommitsAndUpdateInfos(appContext, pr, context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { RepoContext } from '../context/repoContext';\n\nexport const createLink = (url: string, text: string): string => {\n  return `<${url}|${text}>`;\n};\n\nexport const createPrLink = (\n  pr: { html_url: string; number: number },\n  repoContext: RepoContext,\n): string => {\n  return createLink(\n    pr.html_url,\n    `${repoContext.repoEmoji ? `${repoContext.repoEmoji} ` : ''}${\n      repoContext.repoFullName\n    }#${pr.number}`,\n  );\n};\n","import { KnownBlock } from '@slack/web-api';\nimport { SlackMessage } from '../../../context/SlackMessage';\n\nexport const createMrkdwnSectionBlock = (text: string): KnownBlock => ({\n  type: 'section' as const,\n  text: {\n    type: 'mrkdwn' as const,\n    text,\n  },\n});\n\nexport const createSlackMessageWithSecondaryBlock = (\n  message: string,\n  secondaryBlockText?: string,\n): SlackMessage => {\n  return {\n    text: message,\n    blocks: [\n      {\n        type: 'section' as const,\n        text: {\n          type: 'mrkdwn' as const,\n          text: message,\n        },\n      },\n    ],\n    secondaryBlocks: !secondaryBlockText\n      ? undefined\n      : [createMrkdwnSectionBlock(secondaryBlockText)],\n  };\n};\n","import { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../../context/repoContext';\nimport { contextPr, getKeys } from '../../../context/utils';\n\ntype ReviewState = 'CHANGES_REQUESTED' | 'APPROVED' | 'DISMISSED';\n\ninterface ReviewStates {\n  approved: number;\n  changesRequested: number;\n  dismissed: number;\n}\ninterface Reviewer {\n  id: number;\n  login: string;\n}\n\nexport const getReviewersAndReviewStates = async <\n  GroupNames extends string = any\n>(\n  context: Context,\n  repoContext: RepoContext<GroupNames>,\n): Promise<{\n  reviewers: Reviewer[];\n  reviewStates: Record<GroupNames, ReviewStates>;\n}> => {\n  const userIds = new Set<number>();\n  const reviewers: Reviewer[] = [];\n  const reviewStatesByUser = new Map<number, ReviewState>();\n\n  await context.github.paginate(\n    context.github.pulls.listReviews.endpoint.merge(contextPr(context)),\n    ({ data: reviews }: Octokit.Response<Octokit.PullsListReviewsResponse>) => {\n      reviews.forEach((review) => {\n        if (!userIds.has(review.user.id)) {\n          userIds.add(review.user.id);\n          reviewers.push({ id: review.user.id, login: review.user.login });\n        }\n        const state = review.state.toUpperCase();\n        if (state !== 'COMMENTED') {\n          reviewStatesByUser.set(review.user.id, state as ReviewState);\n        }\n      });\n    },\n  );\n\n  const reviewStates: Record<GroupNames, ReviewStates> = {} as Record<\n    GroupNames,\n    ReviewStates\n  >;\n\n  getKeys(repoContext.config.groups).forEach((groupName) => {\n    reviewStates[groupName] = {\n      approved: 0,\n      changesRequested: 0,\n      dismissed: 0,\n    };\n  });\n\n  reviewers.forEach((reviewer) => {\n    const group = repoContext.getReviewerGroup(reviewer.login);\n    if (group) {\n      const state = reviewStatesByUser.get(reviewer.id);\n      switch (state) {\n        case 'APPROVED':\n          reviewStates[group].approved++;\n          break;\n        case 'CHANGES_REQUESTED':\n          reviewStates[group].changesRequested++;\n          break;\n        case 'DISMISSED':\n          reviewStates[group].dismissed++;\n          break;\n      }\n    }\n  });\n\n  return { reviewers, reviewStates };\n};\n","import issueParser from 'issue-parser';\n\nconst parse = issueParser('github', { actions: {}, issuePrefixes: [] });\n\nexport const parseMentions = (body: string): readonly string[] => {\n  return parse(body).mentions.map((m) => m.user);\n};\n","import { RepoContext } from '../../../context/repoContext';\n\nexport const checkIfUserIsBot = (\n  repoContext: RepoContext,\n  user: { login: string; type: string },\n): boolean => {\n  if (user.type === 'Bot') return true;\n  if (repoContext.config.botUsers) {\n    return repoContext.config.botUsers.includes(user.login);\n  }\n  return false;\n};\n","import { Application, Octokit, Context } from 'probot';\nimport { WebhookPayloadPullRequestReviewComment } from '@octokit/webhooks';\nimport slackifyMarkdown from 'slackify-markdown';\nimport * as slackUtils from '../../slack/utils';\nimport { AccountEmbed } from '../../mongo';\nimport { SlackMessage } from '../../context/SlackMessage';\nimport { PostSlackMessageResult } from '../../context/TeamSlack';\nimport { contextPr } from '../../context/utils';\nimport { AppContext } from '../../context/AppContext';\nimport { createHandlerPullRequestChange } from './utils';\nimport { createSlackMessageWithSecondaryBlock } from './utils/createSlackMessageWithSecondaryBlock';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\nimport { parseMentions } from './utils/parseMentions';\nimport { checkIfUserIsBot } from './utils/isBotUser';\n\nconst getDiscussion = async (\n  context: Context,\n  comment: any,\n): Promise<Octokit.PullsListCommentsResponse> => {\n  if (!comment.in_reply_to_id) return [comment];\n  return context.github.paginate(\n    context.github.pulls.listComments.endpoint.merge(contextPr(context)),\n    ({ data }: Octokit.Response<Octokit.PullsListCommentsResponse>) => {\n      return data.filter(\n        (c) =>\n          c.in_reply_to_id === comment.in_reply_to_id ||\n          c.id === comment.in_reply_to_id,\n      );\n    },\n  );\n};\n\nconst getMentions = (\n  discussion: Octokit.PullsListCommentsResponse,\n): string[] => {\n  const mentions = new Set<string>();\n\n  discussion.forEach((c) => {\n    parseMentions(c.body).forEach((m) => mentions.add(m));\n  });\n\n  return [...mentions];\n};\n\nconst getUsersInThread = (\n  discussion: Octokit.PullsListCommentsResponse,\n): { id: number; login: string }[] => {\n  const userIds = new Set<number>();\n  const users: { id: number; login: string }[] = [];\n\n  discussion.forEach((c) => {\n    if (userIds.has(c.user.id)) return;\n    userIds.add(c.user.id);\n    users.push({ id: c.user.id, login: c.user.login });\n  });\n\n  return users;\n};\n\nexport default function prCommentCreated(\n  app: Application,\n  appContext: AppContext,\n): void {\n  const saveInDb = async (\n    type: 'review-comment' | 'issue-comment',\n    commentId: number,\n    accountEmbed: AccountEmbed,\n    results: PostSlackMessageResult[],\n    message: SlackMessage,\n  ): Promise<void> => {\n    const filtered = results.filter((res) => res !== null);\n    if (filtered.length === 0) return;\n\n    await appContext.mongoStores.slackSentMessages.insertOne({\n      type,\n      typeId: commentId,\n      message,\n      account: accountEmbed,\n      sentTo: filtered,\n    });\n  };\n\n  app.on(\n    [\n      'pull_request_review_comment.created',\n      // comments without review and without path are sent with issue_comment.created.\n      // createHandlerPullRequestChange checks if pull_request event is present, removing real issues comments.\n      'issue_comment.created',\n    ],\n    createHandlerPullRequestChange<WebhookPayloadPullRequestReviewComment>(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        const { comment } = context.payload;\n        const type = comment.pull_request_review_id\n          ? 'review-comment'\n          : 'issue-comment';\n\n        const body = comment.body;\n        if (!body) return;\n\n        const commentByOwner = pr.user.login === comment.user.login;\n        const [discussion, { reviewers }] = await Promise.all([\n          getDiscussion(context, comment),\n          getReviewersAndReviewStates(context, repoContext),\n        ]);\n\n        const followers = reviewers.filter(\n          (u) => u.id !== pr.user.id && u.id !== comment.user.id,\n        );\n\n        if (pr.requested_reviewers) {\n          followers.push(\n            ...pr.requested_reviewers.filter((rr) => {\n              return (\n                !followers.find((f) => f.id === rr.id) &&\n                rr.id !== comment.user.id &&\n                rr.id !== pr.user.id\n              );\n            }),\n          );\n        }\n\n        const usersInThread = getUsersInThread(discussion).filter(\n          (u) =>\n            u.id !== pr.user.id &&\n            u.id !== comment.user.id &&\n            !followers.find((f) => f.id === u.id),\n        );\n        const mentions = getMentions(discussion).filter(\n          (m) =>\n            m !== pr.user.login &&\n            m !== comment.user.login &&\n            !followers.find((f) => f.login === m) &&\n            !usersInThread.find((u) => u.login === m),\n        );\n\n        const mention = repoContext.slack.mention(comment.user.login);\n        const prUrl = slackUtils.createPrLink(pr, repoContext);\n        const ownerMention = repoContext.slack.mention(pr.user.login);\n        const commentLink = slackUtils.createLink(\n          comment.html_url,\n          (comment as any).in_reply_to_id ? 'replied' : 'commented',\n        );\n\n        const createMessage = (toOwner?: boolean): string => {\n          const ownerPart = toOwner\n            ? 'your PR'\n            : `${\n                pr.user.id === comment.user.id ? 'his' : `${ownerMention}'s`\n              } PR`;\n          return `:speech_balloon: ${mention} ${commentLink} on ${ownerPart} ${prUrl}`;\n        };\n\n        const promisesOwner = [];\n        const promisesNotOwner = [];\n        const slackifiedBody = slackifyMarkdown(body);\n        const isBotUser = checkIfUserIsBot(repoContext, comment.user);\n\n        if (!commentByOwner) {\n          const slackMessage = createSlackMessageWithSecondaryBlock(\n            createMessage(true),\n            slackifiedBody,\n          );\n\n          promisesOwner.push(\n            repoContext.slack\n              .postMessage(\n                isBotUser ? 'pr-comment-bots' : 'pr-comment',\n                pr.user.id,\n                pr.user.login,\n                slackMessage,\n              )\n              .then((res) =>\n                saveInDb(\n                  type,\n                  comment.id,\n                  repoContext.accountEmbed,\n                  [res],\n                  slackMessage,\n                ),\n              ),\n          );\n        }\n\n        const message = createSlackMessageWithSecondaryBlock(\n          createMessage(false),\n          slackifiedBody,\n        );\n\n        promisesNotOwner.push(\n          ...followers.map((follower) =>\n            repoContext.slack.postMessage(\n              isBotUser ? 'pr-comment-follow-bots' : 'pr-comment-follow',\n              follower.id,\n              follower.login,\n              message,\n            ),\n          ),\n        );\n\n        promisesNotOwner.push(\n          ...usersInThread.map((user) =>\n            repoContext.slack.postMessage(\n              'pr-comment-thread',\n              user.id,\n              user.login,\n              message,\n            ),\n          ),\n        );\n\n        if (mentions.length !== 0) {\n          await appContext.mongoStores.users\n            .findAll({ login: { $in: mentions } })\n            .then((users) => {\n              promisesNotOwner.push(\n                ...users.map((u) =>\n                  repoContext.slack.postMessage(\n                    'pr-comment-mention',\n                    u._id as any, // TODO _id is number\n                    u.login,\n                    message,\n                  ),\n                ),\n              );\n            });\n        }\n\n        await Promise.all([\n          Promise.all(promisesOwner),\n          Promise.all(promisesNotOwner).then((results) =>\n            saveInDb(\n              type,\n              comment.id,\n              repoContext.accountEmbed,\n              results,\n              message,\n            ),\n          ),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { WebhookPayloadPullRequestReviewComment } from '@octokit/webhooks';\nimport slackifyMarkdown from 'slackify-markdown';\nimport { AppContext } from '../../context/AppContext';\nimport { createHandlerPullRequestChange } from './utils';\nimport { createMrkdwnSectionBlock } from './utils/createSlackMessageWithSecondaryBlock';\n\nexport default function prCommentEditedOrDeleted(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    [\n      'pull_request_review_comment.edited',\n      'pull_request_review_comment.deleted',\n      // comments without review and without path are sent with issue_comment.created.\n      // createHandlerPullRequestChange checks if pull_request event is present, removing real issues comments.\n      'issue_comment.edited',\n      'issue_comment.deleted',\n    ],\n    createHandlerPullRequestChange<WebhookPayloadPullRequestReviewComment>(\n      appContext,\n      { refetchPr: false },\n      async (pr, context, repoContext): Promise<void> => {\n        const { comment } = context.payload;\n        const type = comment.pull_request_review_id\n          ? 'review-comment'\n          : 'issue-comment';\n\n        const criteria = {\n          'account.id': repoContext.account._id,\n          'account.type': repoContext.accountType,\n          type,\n          typeId: comment.id,\n        };\n\n        const sentMessages = await appContext.mongoStores.slackSentMessages.findAll(\n          criteria,\n        );\n\n        if (sentMessages.length === 0) return;\n\n        if (context.payload.action === 'deleted') {\n          await Promise.all([\n            Promise.all(\n              sentMessages.map((sentMessage) =>\n                Promise.all(\n                  sentMessage.sentTo.map((sentTo) =>\n                    repoContext.slack.deleteMessage(sentTo.ts, sentTo.channel),\n                  ),\n                ),\n              ),\n            ),\n            appContext.mongoStores.slackSentMessages.deleteMany(criteria),\n          ]);\n        } else {\n          const secondaryBlocks = [\n            createMrkdwnSectionBlock(slackifyMarkdown(comment.body)),\n          ];\n\n          await Promise.all([\n            Promise.all(\n              sentMessages.map((sentMessage) =>\n                Promise.all(\n                  sentMessage.sentTo.map((sentTo) =>\n                    repoContext.slack.updateMessage(sentTo.ts, sentTo.channel, {\n                      ...sentMessage.message,\n                      secondaryBlocks,\n                    }),\n                  ),\n                ),\n              ),\n            ),\n            appContext.mongoStores.slackSentMessages.partialUpdateMany(\n              criteria,\n              { $set: { 'message.secondaryBlocks': secondaryBlocks } },\n            ),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport * as slackUtils from '../../slack/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.approveShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: ['needsReview', !shouldWait && 'requested'],\n            remove: ['approved'],\n          });\n\n          repoContext.slack.updateHome(pr.user.login);\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          const text = `:eyes: ${repoContext.slack.mention(\n            sender.login,\n          )} requests your review on ${slackUtils.createPrLink(\n            pr,\n            repoContext,\n          )} !\\n> ${pr.title}`;\n          const message = { text };\n          const result = await repoContext.slack.postMessage(\n            'pr-review',\n            reviewer.id,\n            reviewer.login,\n            message,\n          );\n          if (result) {\n            await appContext.mongoStores.slackSentMessages.insertOne({\n              type: 'review-requested',\n              typeId: `${pr.id}_${reviewer.id}`,\n              message,\n              account: repoContext.accountEmbed,\n              sentTo: [result],\n            });\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport * as slackUtils from '../../slack/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\n\nexport default function reviewRequestRemoved(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { reviewStates } = await getReviewersAndReviewStates(\n            context,\n            repoContext,\n          );\n\n          const hasChangesRequestedInReviews =\n            reviewStates[reviewerGroup].changesRequested !== 0;\n\n          const hasApprovedInReviews =\n            reviewStates[reviewerGroup].approved !== 0;\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed (should still be in changed requested anyway, but we never know)\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup && 'requested',\n            ],\n          });\n\n          repoContext.slack.updateHome(pr.user.login);\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        repoContext.slack.postMessage(\n          'pr-review',\n          reviewer.id,\n          reviewer.login,\n          {\n            text: `:skull_and_crossbones: ${repoContext.slack.mention(\n              sender.login,\n            )} removed the request for your review on ${slackUtils.createPrLink(\n              pr,\n              repoContext,\n            )}`,\n          },\n        );\n\n        const sentMessageRequestedReview = await appContext.mongoStores.slackSentMessages.findOne(\n          {\n            'account.id': repoContext.account._id,\n            'account.type': repoContext.accountType,\n            type: 'review-requested',\n            typeId: `${pr.id}_${reviewer.id}`,\n          },\n        );\n\n        if (sentMessageRequestedReview) {\n          const sentTo = sentMessageRequestedReview.sentTo[0];\n          const message = sentMessageRequestedReview.message;\n          await Promise.all([\n            repoContext.slack.updateMessage(sentTo.ts, sentTo.channel, {\n              ...message,\n              text: message.text\n                .split('\\n')\n                .map((l) => `~${l}~`)\n                .join('\\n'),\n            }),\n            repoContext.slack.addReaction(\n              sentTo.ts,\n              sentTo.channel,\n              'skull_and_crossbones',\n            ),\n            appContext.mongoStores.slackSentMessages.deleteOne(\n              sentMessageRequestedReview,\n            ),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport slackifyMarkdown from 'slackify-markdown';\nimport { AppContext } from '../../context/AppContext';\nimport * as slackUtils from '../../slack/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\nimport { createSlackMessageWithSecondaryBlock } from './utils/createSlackMessageWithSecondaryBlock';\n\nconst getEmojiFromState = (state: string): string => {\n  switch (state) {\n    case 'changes_requested':\n      return 'x';\n    case 'approved':\n      return 'white_check_mark';\n    default:\n      return 'speech_balloon';\n  }\n};\n\nexport default function reviewSubmitted(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        const {\n          user: reviewer,\n          state,\n          body,\n          html_url: reviewUrl,\n        } = (context.payload as any).review;\n\n        const reviewByOwner = pr.user.login === reviewer.login;\n        const { reviewers, reviewStates } = await getReviewersAndReviewStates(\n          context,\n          repoContext,\n        );\n        const followers = reviewers.filter(\n          (user) => user.id !== reviewer.id && user.id !== pr.user.id,\n        );\n\n        if (pr.requested_reviewers) {\n          followers.push(\n            ...pr.requested_reviewers.filter((rr) => {\n              return (\n                !followers.find((f) => f.id === rr.id) &&\n                rr.id !== reviewer.id &&\n                rr.id !== pr.user.id\n              );\n            }),\n          );\n        }\n\n        if (!reviewByOwner) {\n          const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n          let merged: boolean;\n\n          if (\n            reviewerGroup &&\n            repoContext.config.labels.review[reviewerGroup]\n          ) {\n            const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n              reviewerGroup,\n              pr.requested_reviewers,\n              {\n                includesReviewerGroup: true,\n                // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n                // includesWaitForGroups: true,\n              },\n            );\n\n            const hasChangesRequestedInReviews =\n              reviewStates[reviewerGroup].changesRequested !== 0;\n\n            const approved =\n              !hasRequestedReviewsForGroup &&\n              !hasChangesRequestedInReviews &&\n              state === 'approved';\n\n            const newLabels = await updateReviewStatus(\n              pr,\n              context,\n              repoContext,\n              reviewerGroup,\n              {\n                add: [\n                  approved && 'approved',\n                  state === 'changes_requested' && 'needsReview',\n                  state === 'changes_requested' && 'changesRequested',\n                ],\n                remove: [\n                  approved && 'needsReview',\n                  !hasRequestedReviewsForGroup && 'requested',\n                  state === 'approved' &&\n                    !hasChangesRequestedInReviews &&\n                    'changesRequested',\n                  state === 'changes_requested' && 'approved',\n                ],\n              },\n            );\n\n            if (approved && !hasChangesRequestedInReviews) {\n              merged = await autoMergeIfPossible(\n                appContext,\n                pr,\n                context,\n                repoContext,\n                newLabels,\n              );\n            }\n          }\n\n          repoContext.slack.updateHome(pr.user.login);\n          repoContext.slack.updateHome(reviewer.login);\n\n          const sentMessageRequestedReview = await appContext.mongoStores.slackSentMessages.findOne(\n            {\n              'account.id': repoContext.account._id,\n              'account.type': repoContext.accountType,\n              type: 'review-requested',\n              typeId: `${pr.id}_${reviewer.id}`,\n            },\n          );\n\n          const emoji = getEmojiFromState(state);\n\n          if (sentMessageRequestedReview) {\n            const sentTo = sentMessageRequestedReview.sentTo[0];\n            const message = sentMessageRequestedReview.message;\n            await Promise.all([\n              repoContext.slack.updateMessage(sentTo.ts, sentTo.channel, {\n                ...message,\n                text: message.text\n                  .split('\\n')\n                  .map((l) => `~${l}~`)\n                  .join('\\n'),\n              }),\n              repoContext.slack.addReaction(sentTo.ts, sentTo.channel, emoji),\n              appContext.mongoStores.slackSentMessages.deleteOne(\n                sentMessageRequestedReview,\n              ),\n            ]);\n          }\n\n          if (!body && state !== 'changes_requested' && state !== 'approved') {\n            return;\n          }\n\n          const mention = repoContext.slack.mention(reviewer.login);\n          const prUrl = slackUtils.createPrLink(pr, repoContext);\n          const ownerMention = repoContext.slack.mention(pr.user.login);\n\n          const createMessage = (toOwner?: boolean): string => {\n            const ownerPart = toOwner ? 'your PR' : `${ownerMention}'s PR`;\n\n            if (state === 'changes_requested') {\n              return `:${emoji}: ${mention} requests changes on ${ownerPart} ${prUrl}`;\n            }\n            if (state === 'approved') {\n              return `${\n                toOwner ? ':clap: ' : ''\n              }:${emoji}: ${mention} approves ${ownerPart} ${prUrl}${\n                merged ? ' and PR is merged :tada:' : ''\n              }`;\n            }\n\n            const commentLink = slackUtils.createLink(reviewUrl, 'commented');\n            return `:${emoji}: ${mention} ${commentLink} on ${ownerPart} ${prUrl}`;\n          };\n\n          const slackifiedBody = slackifyMarkdown(body);\n\n          repoContext.slack.postMessage(\n            'pr-review',\n            pr.user.id,\n            pr.user.login,\n            createSlackMessageWithSecondaryBlock(\n              createMessage(true),\n              slackifiedBody,\n            ),\n          );\n\n          const message = createSlackMessageWithSecondaryBlock(\n            createMessage(false),\n            slackifiedBody,\n          );\n\n          followers.forEach((follower) => {\n            repoContext.slack.postMessage(\n              'pr-review-follow',\n              follower.id,\n              follower.login,\n              message,\n            );\n          });\n        } else if (body) {\n          const mention = repoContext.slack.mention(reviewer.login);\n          const prUrl = slackUtils.createPrLink(pr, repoContext);\n          const commentLink = slackUtils.createLink(reviewUrl, 'commented');\n\n          const message = createSlackMessageWithSecondaryBlock(\n            `:speech_balloon: ${mention} ${commentLink} on his PR ${prUrl}`,\n            body,\n          );\n\n          followers.forEach((follower) => {\n            repoContext.slack.postMessage(\n              'pr-review-follow',\n              follower.id,\n              follower.login,\n              message,\n            );\n          });\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport * as slackUtils from '../../slack/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\n\nexport default function reviewDismissed(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { reviewStates } = await getReviewersAndReviewStates(\n            context,\n            repoContext,\n          );\n          const hasChangesRequestedInReviews =\n            reviewStates[reviewerGroup].changesRequested !== 0;\n          const hasApprovals = reviewStates[reviewerGroup].approved !== 0;\n          const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            { includesReviewerGroup: true },\n          );\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              !hasApprovals && 'needsReview',\n              hasApprovals &&\n                !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'approved',\n            ],\n            remove: [\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n              !hasChangesRequestedInReviews && 'changesRequested',\n              !hasApprovals && 'approved',\n            ],\n          });\n\n          repoContext.slack.updateHome(pr.user.login);\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              'pr-review',\n              pr.user.id,\n              pr.user.login,\n              {\n                text: `:skull: ${repoContext.slack.mention(\n                  reviewer.login,\n                )} dismissed his review on ${slackUtils.createPrLink(\n                  pr,\n                  repoContext,\n                )}`,\n              },\n            );\n          } else {\n            repoContext.slack.postMessage(\n              'pr-review',\n              reviewer.id,\n              reviewer.login,\n              {\n                text: `:skull: ${repoContext.slack.mention(\n                  sender.login,\n                )} dismissed your review on ${slackUtils.createPrLink(\n                  pr,\n                  repoContext,\n                )}`,\n              },\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function synchronize(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n        const previousSha = (context.payload as any).before as string;\n\n        await Promise.all([\n          editOpenedPR(appContext, pr, context, repoContext, previousSha),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(\n            pr,\n            context,\n            repoContext,\n            pr.labels,\n            previousSha,\n          ),\n\n          readCommitsAndUpdateInfos(appContext, pr, context, repoContext),\n        ]);\n\n        // call autoMergeIfPossible to re-add to the queue when push is fixed\n        await autoMergeIfPossible(appContext, pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(app: Application, appContext: AppContext): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      appContext,\n      { refetchPr: true },\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        if (\n          sender.type === 'Bot' &&\n          sender.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n        ) {\n          return;\n        }\n\n        const { skipAutoMerge } = await editOpenedPR(\n          appContext,\n          pr,\n          context,\n          repoContext,\n        );\n        if (!skipAutoMerge)\n          await autoMergeIfPossible(appContext, pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../../context/repoContext';\nimport { updateBody } from './utils/updateBody';\nimport { Options } from './utils/prOptions';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const updatePrBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  updateOptions: Partial<Record<Options, boolean>>,\n): Promise<void> => {\n  const { body } = updateBody(\n    pr.body,\n    repoContext.config.prDefaultOptions,\n    undefined,\n    updateOptions,\n  );\n\n  await updatePrIfNeeded(pr, context, repoContext, { body });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { contextPr, contextIssue } from '../../context/utils';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrBody } from './actions/updatePrBody';\nimport hasLabelInPR from './actions/utils/hasLabelInPR';\n\nexport default function labelsChanged(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context: Context<Webhooks.WebhookPayloadPullRequest>) => {\n      const sender = context.payload.sender;\n      const fromRenovate =\n        sender.type === 'Bot' && sender.login === 'renovate[bot]';\n      context.payload.pull_request.head.ref.startsWith('renovate/');\n\n      if (sender.type === 'Bot' && !fromRenovate) {\n        return;\n      }\n\n      await handlerPullRequestChange(\n        appContext,\n        context,\n        { refetchPr: true },\n        async (pr, repoContext) => {\n          const label = (context.payload as any).label;\n          if (fromRenovate) {\n            const codeApprovedLabel = repoContext.labels['code/approved'];\n            const autoMergeLabel = repoContext.labels['merge/automerge'];\n            const autoMergeSkipCiLabel = repoContext.labels['merge/skip-ci'];\n            if (context.payload.action === 'labeled') {\n              if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n                // const { data: reviews } = await context.github.pulls.listReviews(\n                //   contextPr(context, { per_page: 1 }),\n                // );\n                // if (reviews.length !== 0) {\n                await context.github.pulls.createReview(\n                  contextPr(context, { event: 'APPROVE' }),\n                );\n                if (autoMergeSkipCiLabel) {\n                  await context.github.issues.addLabels(\n                    contextIssue(context, {\n                      labels: [autoMergeSkipCiLabel.name],\n                    }),\n                  );\n                }\n                await updateStatusCheckFromLabels(pr, context, repoContext);\n                await updatePrBody(pr, context, repoContext, {\n                  autoMergeWithSkipCi: true,\n                  // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                  autoMerge: hasLabelInPR(pr.labels, autoMergeLabel)\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMerge,\n                });\n                // }\n              } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n                await updatePrBody(pr, context, repoContext, {\n                  autoMerge: true,\n                  // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                  // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                  autoMergeWithSkipCi: hasLabelInPR(\n                    pr.labels,\n                    codeApprovedLabel,\n                  )\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n                });\n              }\n              await autoMergeIfPossible(appContext, pr, context, repoContext);\n            }\n            return;\n          }\n\n          if (repoContext.protectedLabelIds.includes(label.id)) {\n            if (context.payload.action === 'labeled') {\n              await context.github.issues.removeLabel(\n                contextIssue(context, { name: label.name }),\n              );\n            } else {\n              await context.github.issues.addLabels(\n                contextIssue(context, { labels: [label.name] }),\n              );\n            }\n            return;\n          }\n\n          await updateStatusCheckFromLabels(pr, context, repoContext);\n\n          const featureBranchLabel = repoContext.labels['feature-branch'];\n          const automergeLabel = repoContext.labels['merge/automerge'];\n          const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n          const option = (() => {\n            if (featureBranchLabel && label.id === featureBranchLabel.id)\n              return 'featureBranch';\n            if (automergeLabel && label.id === automergeLabel.id)\n              return 'autoMerge';\n            if (skipCiLabel && label.id === skipCiLabel.id)\n              return 'autoMergeWithSkipCi';\n            return null;\n          })();\n\n          if (option) {\n            await updatePrBody(pr, context, repoContext, {\n              [option]: context.payload.action === 'labeled',\n            });\n          } // not an else if\n          if (automergeLabel && label.id === automergeLabel.id) {\n            if (context.payload.action === 'labeled') {\n              await autoMergeIfPossible(appContext, pr, context, repoContext);\n            } else {\n              repoContext.removePrFromAutomergeQueue(\n                context,\n                pr.number,\n                'automerge label removed',\n              );\n            }\n          }\n        },\n      );\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      appContext,\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  pull_number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(\n                  appContext,\n                  prResult.data,\n                  context,\n                  repoContext,\n                );\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      appContext,\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  pull_number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(\n                  appContext,\n                  prResult.data,\n                  context,\n                  repoContext,\n                );\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { LockedMergePr } from '../../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(app: Application, appContext: AppContext): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      appContext,\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (\n          context.payload.state !== 'loading' &&\n          isSameBranch(context, lockedPr)\n        ) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","import { Context } from 'probot';\nimport { accountConfigs, defaultConfig } from '../../../accountConfigs';\nimport {\n  AccountContext,\n  obtainAccountContext,\n} from '../../../context/accountContext';\nimport { AppContext } from '../../../context/AppContext';\n\ntype CallbackContextAndAccountContext<T> = (\n  context: Context<T>,\n  accountContext: AccountContext,\n) => void | Promise<void>;\n\nexport const handlerOrgChange = async <\n  T extends { organization: { id: number; login: string } }\n>(\n  appContext: AppContext,\n  context: Context<T>,\n  callback: CallbackContextAndAccountContext<T>,\n): Promise<void> => {\n  const org = context.payload.organization;\n  const config = accountConfigs[org.login] || defaultConfig;\n  const accountContext = await obtainAccountContext(\n    appContext,\n    context,\n    config,\n    { ...org, type: 'Organization' },\n  );\n  if (!accountContext) return;\n\n  return accountContext.lock(async () => {\n    await callback(context, accountContext);\n  });\n};\n\nexport const createHandlerOrgChange = <\n  T extends { organization: { id: number; login: string } }\n>(\n  appContext: AppContext,\n  callback: CallbackContextAndAccountContext<T>,\n) => (context: Context<T>) => {\n  return handlerOrgChange(appContext, context, callback);\n};\n","import { Application } from 'probot';\nimport { createHandlerOrgChange } from '../account-handlers/utils/handler';\nimport { getEmojiFromRepoDescription } from '../../context/utils';\nimport { AppContext } from '../../context/AppContext';\nimport { obtainRepoContext } from '../../context/repoContext';\n\nexport default function repoEdited(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'repository.edited',\n    createHandlerOrgChange(\n      appContext,\n      async (context, orgContext): Promise<void> => {\n        const repoContext = await obtainRepoContext(appContext, context);\n        if (!repoContext) return;\n        const repo = context.payload.repository;\n        repoContext.repoFullName = repo.full_name;\n        repoContext.repoEmoji = getEmojiFromRepoDescription(repo.description);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport Webhooks from '@octokit/webhooks';\nimport openedHandler from './events/pr-handlers/opened';\nimport closedHandler from './events/pr-handlers/closed';\nimport reopenedHandler from './events/pr-handlers/reopened';\nimport commentCreated from './events/pr-handlers/commentCreated';\nimport commentEditedOrDeleted from './events/pr-handlers/commentEditedOrDeleted';\nimport reviewRequestedHandler from './events/pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './events/pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './events/pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './events/pr-handlers/reviewDismissed';\nimport synchronizeHandler from './events/pr-handlers/synchronize';\nimport editedHandler from './events/pr-handlers/edited';\nimport labelsChanged from './events/pr-handlers/labelsChanged';\nimport checkrunCompleted from './events/pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './events/pr-handlers/checksuiteCompleted';\nimport status from './events/pr-handlers/status';\nimport { createHandlerOrgChange } from './events/account-handlers/utils/handler';\nimport repoEdited from './events/repository-handlers/repoEdited';\nimport { syncOrg } from './events/account-handlers/actions/syncOrg';\nimport { syncTeams } from './events/account-handlers/actions/syncTeams';\nimport { AppContext } from './context/AppContext';\n\nexport default function initApp(\n  app: Application,\n  appContext: AppContext,\n): void {\n  /* https://developer.github.com/webhooks/event-payloads/#organization */\n  app.on(\n    ['organization.member_added', 'organization.member_removed'],\n    createHandlerOrgChange<Webhooks.WebhookPayloadOrganization>(\n      appContext,\n      async (context, accountContext) => {\n        await syncOrg(\n          appContext.mongoStores,\n          context.github,\n          accountContext.account.installationId as number,\n          context.payload.organization,\n        );\n      },\n    ),\n  );\n\n  /* https://developer.github.com/webhooks/event-payloads/#team */\n  app.on(\n    ['team.created', 'team.deleted', 'team.edited'],\n    createHandlerOrgChange<Webhooks.WebhookPayloadTeam>(\n      appContext,\n      async (context, accountContext) => {\n        await syncTeams(\n          appContext.mongoStores,\n          context.github,\n          context.payload.organization,\n        );\n      },\n    ),\n  );\n\n  // /* https://developer.github.com/webhooks/event-payloads/#membership */\n  // app.on(\n  //   ['membership.added', 'membership.removed'],\n  //   createHandlerOrgChange<Webhooks.WebhookPayloadMembership>(\n  //     mongoStores,\n  //     async (context, accountContext) => {\n  //       await syncTeamMembers(\n  //         mongoStores,\n  //         context.github,\n  //         context.payload.organization,\n  //         context.payload.team,\n  //       );\n  //     },\n  //   ),\n  // );\n\n  // Repo\n  /* https://developer.github.com/webhooks/event-payloads/#repository */\n  repoEdited(app, appContext);\n\n  // PR\n  /* https://developer.github.com/webhooks/event-payloads/#pull_request */\n  openedHandler(app, appContext);\n  editedHandler(app, appContext);\n  closedHandler(app, appContext);\n  reopenedHandler(app, appContext);\n\n  reviewRequestedHandler(app, appContext);\n  reviewRequestRemovedHandler(app, appContext);\n  reviewSubmittedHandler(app, appContext);\n  reviewDismissedHandler(app, appContext);\n  labelsChanged(app, appContext);\n  synchronizeHandler(app, appContext);\n\n  /* https://developer.github.com/webhooks/event-payloads/#pull_request_review_comment */\n  /* https://developer.github.com/webhooks/event-payloads/#issue_comment */\n  commentCreated(app, appContext);\n  commentEditedOrDeleted(app, appContext);\n\n  /* https://developer.github.com/webhooks/event-payloads/#check_run */\n  checkrunCompleted(app, appContext);\n\n  /* https://developer.github.com/webhooks/event-payloads/#check_suite */\n  checksuiteCompleted(app, appContext);\n\n  /* https://developer.github.com/webhooks/event-payloads/#status */\n  status(app, appContext);\n}\n","import { WebClient } from '@slack/web-api';\nimport { Octokit } from 'probot';\nimport { MongoStores, Org, OrgMember } from '../mongo';\nimport { createLink } from './utils';\n\ninterface QueueItem {\n  github: Octokit;\n  slackClient: WebClient;\n  member: OrgMember;\n}\n\nexport const createSlackHomeWorker = (mongoStores: MongoStores) => {\n  const updateMember = async (\n    github: Octokit,\n    slackClient: WebClient,\n    member: OrgMember,\n  ): Promise<void> => {\n    if (!member.slack?.id) return;\n    // console.log('update member', member.org.login, member.user.login);\n\n    /* search limit: 30 requests per minute = 10 update/min max */\n    const [\n      prsWithRequestedReviews,\n      prsToMerge,\n      prsWithRequestedChanges,\n    ] = await Promise.all([\n      github.search.issuesAndPullRequests({\n        q: `is:pr user:${member.org.login} is:open review-requested:${member.user.login} `,\n        sort: 'created',\n        order: 'desc',\n      }),\n      github.search.issuesAndPullRequests({\n        q: `is:pr user:${member.org.login} is:open author:${member.user.login} label:\":ok_hand: code/approved\"`,\n        sort: 'created',\n        order: 'desc',\n      }),\n      github.search.issuesAndPullRequests({\n        q: `is:pr user:${member.org.login} is:open author:${member.user.login} label:\":ok_hand: code/changes-requested\"`,\n        sort: 'created',\n        order: 'desc',\n      }),\n    ]);\n\n    const blocks: any[] = [];\n\n    const buildBlocks = (title: string, results: any) => {\n      if (!results.total_count) return;\n\n      blocks.push(\n        {\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text: `*${title}*`,\n          },\n        },\n        {\n          type: 'divider',\n        },\n        ...results.items\n          .map((pr: any) => {\n            const repoName = pr.repository_url.slice(\n              'https://api.github.com/repos/'.length,\n            );\n            const prFullName = `${repoName}#${pr.number}`;\n\n            return [\n              {\n                type: 'section',\n                text: {\n                  type: 'mrkdwn',\n                  text: `*${createLink(pr.html_url, pr.title)}*`,\n                  //  ${pr.labels.map((l) => `{${l.name}}`).join(' · ')}\n                },\n              },\n              {\n                type: 'context',\n                elements: [\n                  {\n                    type: 'mrkdwn',\n                    text: `${createLink(pr.html_url, prFullName)} ${\n                      pr.draft ? '· _Draft_' : ''\n                    }`,\n                  },\n                  {\n                    type: 'image',\n                    image_url: pr.user.avatar_url,\n                    alt_text: pr.user.login,\n                  },\n                  {\n                    type: 'mrkdwn',\n                    text: `${pr.user.login}`,\n                  },\n                ],\n              },\n            ];\n          })\n          .flat(),\n        {\n          type: 'context',\n          elements: [\n            {\n              type: 'image',\n              image_url:\n                'https://api.slack.com/img/blocks/bkb_template_images/placeholder.png',\n              alt_text: 'placeholder',\n            },\n          ],\n        },\n      );\n    };\n\n    buildBlocks(':eyes: Requested Reviews', prsWithRequestedReviews.data);\n    buildBlocks(':white_check_mark: Ready to Merge', prsToMerge.data);\n    buildBlocks(':x: Changes Requested', prsWithRequestedChanges.data);\n\n    if (blocks.length === 0) {\n      blocks.push({\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: \":tada: It looks like you don't have any PR to review!\",\n        },\n      });\n    }\n\n    slackClient.views.publish({\n      user_id: member.slack.id,\n      view: {\n        type: 'home',\n        blocks,\n      },\n    });\n  };\n\n  let workerInterval: ReturnType<typeof setInterval> | undefined;\n  const queueKeys = new Set<string>();\n  const queue: QueueItem[] = [];\n\n  const stop = (): void => {\n    if (workerInterval !== undefined) {\n      clearInterval(workerInterval);\n      workerInterval = undefined;\n    }\n  };\n\n  const start = (): void => {\n    if (workerInterval !== undefined) return;\n    workerInterval = setInterval(() => {\n      const item = queue.shift();\n      if (!item) {\n        stop();\n        return;\n      }\n\n      const { github, slackClient, member } = item;\n      const memberId = member.slack?.id;\n\n      const key = `${member.org.id}_${memberId}`;\n      queueKeys.delete(key);\n\n      updateMember(github, slackClient, member);\n    }, 8000); // 10/min 60s 1min = 1 ttes les 6s max\n  };\n\n  const scheduleUpdateMember = (\n    github: Octokit,\n    slackClient: WebClient,\n    member: OrgMember,\n  ): void => {\n    const memberId = member.slack?.id;\n    if (!memberId) return;\n\n    const key = `${member.org.id}_${memberId}`;\n\n    if (!queueKeys.has(key)) {\n      queueKeys.add(key);\n      queue.push({\n        github,\n        slackClient,\n        member,\n      });\n      start();\n    }\n  };\n\n  const scheduleUpdateOrg = async (\n    github: Octokit,\n    org: Org,\n    slackClient = new WebClient(org.slackToken),\n  ): Promise<void> => {\n    const cursor = await mongoStores.orgMembers.cursor();\n    cursor.forEach((member) => {\n      scheduleUpdateMember(github, slackClient, member);\n    });\n  };\n\n  const scheduleUpdateAllOrgs = async (\n    auth: (installationId: number) => Promise<Octokit>,\n  ): Promise<void> => {\n    const cursor = await mongoStores.orgs.cursor();\n    cursor.forEach(async (org) => {\n      if (!org.slackToken || !org.installationId) return;\n      const github = await auth(org.installationId);\n      await scheduleUpdateOrg(github, org);\n    });\n  };\n\n  return {\n    scheduleUpdateMember,\n    scheduleUpdateOrg,\n    scheduleUpdateAllOrgs,\n  };\n};\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport { AppContext } from './context/AppContext';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\nimport initApp from './initApp';\nimport { createSlackHomeWorker } from './slack/home';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application): void => {\n  const mongoStores = mongoInit();\n  const slackHome = createSlackHomeWorker(mongoStores);\n  const appContext: AppContext = { mongoStores, slackHome };\n  appRouter(app, appContext);\n  initApp(app, appContext);\n  slackHome.scheduleUpdateAllOrgs((id: number) => app.auth(id));\n});\n"],"names":["process","env","MONGO_DB","Error","init","config","Map","MONGO_HOST","MONGO_PORT","MONGO_USER","set","MONGO_PASSWORD","connection","MongoConnection","userDmSettings","MongoStore","collection","then","coll","createIndex","userId","orgId","unique","users","login","orgs","orgMembers","orgTeams","slackSentMessages","type","typeId","deleteMany","created","$lt","Date","now","automergeLogs","repoFullName","Layout","lang","title","REVIEWFLOW_NAME","children","padding","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","create","client","id","secret","auth","tokenHost","tokenPath","authorizePath","AUTH_SECRET_KEY","signPromisified","promisify","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","host","hostname","PORT","readAuthCookie","strategy","cookie","cookies","algorithm","audience","headers","getAuthInfoFromCookie","res","authInfo","clearCookie","undefined","getUser","redirect","api","Octokit","accessToken","router","get","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error","send","error_description","code","result","getToken","renderToStaticMarkup","access_token","octokit","user","getAuthenticated","data","time","token","expiresIn","httpOnly","repository","repos","list","per_page","map","repo","owner","name","length","params","status","permissions","admin","data2","apps","getRepoInstallation","catch","err","home","listForAuthenticatedUser","display","flexGrow","org","syncTeams","mongoStores","github","orgEmbed","teamIds","Promise","all","paginate","teams","endpoint","merge","team","push","upsertOne","_id","slug","description","$not","$in","syncOrg","installationId","orgInStore","memberIds","listMembers","member","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","groups","waitForGroups","labels","color","review","ci","inProgress","succeeded","failed","ignoreRepoPattern","regExp","summary","bot","statusInfoFromMatch","match","issue","inBody","url","botUsers","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","CamilSadiki","busser","abarreir","arthurflachs","damienorny","darame07","Pixy","Radyum","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","vlbr","mdcarter","ChibiBlasphem","design","jperriere","CoralineColasse","Lenamari","ops","logins","backends","frontends","duplicate","documentation","rfc","bug","enhancement","question","wontfix","needsReview","requested","changesRequested","approved","tilap","chrisconfig","accountConfigs","ornikar","reviewflow","defaultDmSettings","cache","getDefaultDmSettings","accountConfig","defaultConfig","updateCache","newSettings","orgCache","getUserDmSettings","orgDefaultDmSettings","userDmSettingsConfig","findOne","settings","dmMessages","orgSettings","find","o","findByKey","installation","getOrgInstallation","width","Object","entries","key","__html","patch","bodyParser","json","body","updateOne","$set","value","updated","$setOnInsert","upsert","syncUser","userInfo","userSettings","u","getUserInstallation","username","appRouter","app","route","use","cookieParser","options","optionsRegexps","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","reduce","acc","exec","parseBody","reviewFlowCol","reviewflowContent","ending","reviewFlowColMatch","reviewflowContentCol","reviewflowContentColPrefix","reviewflowContentColSuffix","parseBodyWithOptions","parsedBody","breakingChanges","replace","trim","hasLabelInPR","prLabels","some","l","hasFailedStatusOrChecks","pr","context","checks","listForRef","ref","head","sha","failedChecks","check_runs","filter","check","conclusion","log","info","combinedStatus","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossible","appContext","repoContext","autoMergeLabel","removePrFromAutomergeQueue","number","isRenovatePr","startsWith","createMergeLockPrFromPr","branch","addLog","full_name","insertOne","account","accountEmbed","isRenovate","mergeableState","mergeable_state","hasNeedsReview","hasRequestedReview","requested_reviewers","lockedPr","getMergeLockedPr","String","prId","prNumber","pushAutomergeQueue","addMergeLockPr","mergeable","prResult","pulls","pull_number","merged","reschedule","includes","renovateRebaseBody","issues","update","issue_number","base","mergeResult","merge_method","commit_title","commit_message","debug","Boolean","message","ExcludesFalsy","getLabelsForRepo","listLabelsForRepo","initRepoLabels","finalLabels","labelKey","labelConfig","labelColor","slice","existingLabel","createLabel","current_name","updateLabel","getKeys","keys","contextIssue","object","payload","pull_request","contextPr","emojiRegex","createEmojiRegex","getEmojiFromRepoDescription","emoji","voidTeamSlack","mention","postMessage","resolve","updateMessage","deleteMessage","addReaction","updateHome","initTeamSlack","slackHome","slackToken","githubLoginToSlackEmail","groupName","assign","slackEmails","values","slackClient","WebClient","membersInDb","findAll","members","foundEmailMembers","forEach","email","m","slack","im","missingEmails","memberEmailToMemberId","page","profile","has","partialUpdateMany","conversations","open","channel","console","membersMap","getUserFromGithubLogin","githubLogin","category","githubId","DRY_RUN","chat","text","blocks","attachments","secondaryBlocks","thread_ts","ts","ok","delete","reactions","add","timestamp","scheduleUpdateMember","getOrCreateAccount","accountInfo","initAccountContext","slackPromise","githubLoginToGroup","githubLoginToTeams","teamName","getReviewerGroups","githubLogins","Set","lock","Lock","accountType","callback","reject","logInfos","createReleaseCallback","release","getReviewerGroup","getTeamsForLogin","approveShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","group","accountContextsPromise","accountContexts","obtainAccountContext","existingAccountContext","existingPromise","promise","accountContext","initRepoContext","fullName","repoEmoji","reviewGroupNames","needsReviewLabelIds","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","prNumberOrPrNumbers","setTimeout","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","reason","shift","previousLength","p","repoContextsPromise","repoContexts","shouldIgnoreRepo","repoName","ignoreRepoRegexp","test","obtainRepoContext","existingRepoContext","warn","handlerPullRequestChange","pullRequest","refetchPr","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","addAssignees","cleanTitle","s","arg1","arg2","toUpperCase","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","getReplacement","updateBody","updateOptions","parsed","infosAndCommitNotesParagraph","updatedOptions","updateBodyCommitsNotes","commitNotes","reviewflowContentColReplaced","cleanNewLines","updatePrIfNeeded","hasDiffInTitle","hasDiffInBody","diff","syncLabel","shouldHaveLabel","prHasLabel","onRemove","onAdd","removeLabel","response","addLabels","createStatus","target_url","editOpenedPR","previousSha","skipAutoMerge","isPrFromBot","errorRule","rule","date","toISOString","hasLintPrCheck","head_sha","started_at","completed_at","output","featureBranchLabel","automergeLabel","skipCiLabel","prHasFeatureBranchLabel","prHasSkipCiLabel","prHasAutoMergeLabel","defaultOptions","addStatusCheck","hasPrCheck","created_at","updateStatusCheckFromLabels","createFailedStatusCheck","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","existing","size","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","readCommitsAndUpdateInfos","commits","listCommits","conventionalCommits","c","parse","commit","breakingChangesCommits","index","breakingChangesNotes","notes","note","breakingChangesLabel","newBody","opened","on","fromRenovate","closed","git","deleteRef","createLink","createPrLink","html_url","createMrkdwnSectionBlock","createSlackMessageWithSecondaryBlock","secondaryBlockText","getReviewersAndReviewStates","userIds","reviewers","reviewStatesByUser","listReviews","reviews","reviewStates","dismissed","reviewer","issueParser","actions","issuePrefixes","parseMentions","mentions","checkIfUserIsBot","getDiscussion","comment","in_reply_to_id","listComments","getMentions","discussion","getUsersInThread","prCommentCreated","saveInDb","commentId","results","filtered","sentTo","pull_request_review_id","commentByOwner","followers","f","usersInThread","prUrl","slackUtils","ownerMention","commentLink","createMessage","toOwner","ownerPart","promisesOwner","promisesNotOwner","slackifiedBody","slackifyMarkdown","isBotUser","slackMessage","follower","prCommentEditedOrDeleted","criteria","sentMessages","action","sentMessage","reviewRequested","sender","requested_reviewer","reviewRequestRemoved","hasRequestedReviewsForGroup","hasChangesRequestedInReviews","hasApprovedInReviews","sentMessageRequestedReview","split","deleteOne","getEmojiFromState","reviewSubmitted","reviewUrl","reviewByOwner","newLabels","reviewDismissed","hasApprovals","synchronize","before","edited","updatePrBody","labelsChanged","autoMergeSkipCiLabel","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","handlerOrgChange","organization","createHandlerOrgChange","repoEdited","initApp","openedHandler","editedHandler","closedHandler","reopenedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchronizeHandler","commentCreated","commentEditedOrDeleted","createSlackHomeWorker","updateMember","prsWithRequestedReviews","prsToMerge","prsWithRequestedChanges","search","issuesAndPullRequests","q","sort","order","buildBlocks","total_count","items","repository_url","prFullName","elements","draft","image_url","avatar_url","alt_text","flat","views","publish","user_id","view","workerInterval","queueKeys","queue","stop","clearInterval","start","setInterval","item","memberId","scheduleUpdateOrg","cursor","scheduleUpdateAllOrgs","Probot","run","mongoInit"],"mappings":"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"}