{"version":3,"file":"index-node10.cjs.js","sources":["../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/app/auth.tsx","../src/app/repository.tsx","../src/app/home.tsx","../src/org-handlers/actions/syncTeams.ts","../src/org-handlers/actions/syncOrg.ts","../src/orgsConfigs/defaultConfig.ts","../src/orgsConfigs/ornikar.ts","../src/orgsConfigs/christophehurpeau.ts","../src/orgsConfigs/index.ts","../src/dm/defaultDmSettings.ts","../src/dm/getUserDmSettings.ts","../src/app/org-settings.tsx","../src/app/user-settings.tsx","../src/appRouter.tsx","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/utils/hasLabelInPR.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/utils/ExcludesFalsy.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/orgContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils/index.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/updatePr.ts","../src/pr-handlers/actions/utils/syncLabel.ts","../src/pr-handlers/actions/utils/createStatus.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/pr-handlers/actions/readCommitsAndUpdateInfos.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reopened.ts","../src/pr-handlers/utils/postSlackMessageWithSecondaryBlock.ts","../src/pr-handlers/utils/listReviews.ts","../src/pr-handlers/utils/parseMentions.ts","../src/pr-handlers/comment.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/actions/updatePrBody.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/org-handlers/utils/handler.ts","../src/initApp.ts","../src/index.ts"],"sourcesContent":["import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { MessageCategory } from './dm/MessageCategory';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport interface UserDmSettings extends MongoModel {\n  userId: number;\n  orgId: number;\n  settings: Record<MessageCategory, boolean>;\n}\n\n// TODO _id is number\nexport interface User extends MongoModel {\n  login: string;\n  type: string;\n}\n\n// TODO _id is number\nexport interface Org extends MongoModel {\n  login: string;\n  slackToken?: string;\n}\n\nexport interface OrgMembers extends MongoModel {\n  org: { id: number; login: string };\n  user: { id: number; login: string };\n}\n\nexport interface OrgTeam extends MongoModel {\n  org: { id: number; login: string };\n  name: string;\n  slug: string;\n  description: string;\n}\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  userDmSettings: MongoStore<UserDmSettings>;\n  users: MongoStore<User>;\n  orgs: MongoStore<Org>;\n  orgMembers: MongoStore<OrgMembers>;\n  orgTeams: MongoStore<OrgTeam>;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const config = new Map([\n    ['host', process.env.MONGO_HOST || 'localhost'],\n    ['port', process.env.MONGO_PORT || '27017'],\n    ['database', process.env.MONGO_DB as string],\n  ]);\n  if (process.env.MONGO_USER) {\n    config.set('user', process.env.MONGO_USER);\n    config.set('password', process.env.MONGO_PASSWORD as string);\n  }\n  const connection = new MongoConnection(config);\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  const userDmSettings = new MongoStore<UserDmSettings>(\n    connection,\n    'userDmSettings',\n  );\n  userDmSettings.collection.then((coll) => {\n    coll.createIndex({ userId: 1, orgId: 1 }, { unique: true });\n  });\n\n  const users = new MongoStore<User>(connection, 'users');\n  users.collection.then((coll) => {\n    coll.createIndex({ login: 1 }, { unique: true });\n  });\n\n  const orgs = new MongoStore<Org>(connection, 'orgs');\n  orgs.collection.then((coll) => {\n    coll.createIndex({ login: 1 }, { unique: true });\n  });\n\n  const orgMembers = new MongoStore<OrgMembers>(connection, 'orgMembers');\n  orgMembers.collection.then((coll) => {\n    coll.createIndex({ 'user.id': 1, 'org.id': 1 }, { unique: true });\n  });\n\n  const orgTeams = new MongoStore<OrgTeam>(connection, 'orgTeams');\n  orgTeams.collection.then((coll) => {\n    coll.createIndex({ 'org.id': 1 });\n  });\n\n  // return { connection, prEvents };\n  return { connection, userDmSettings, users, orgs, orgMembers, orgTeams };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.REVIEWFLOW_NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>\n        <div style={{ padding: '24px 48px' }}>{children}</div>\n      </body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { promisify } from 'util';\nimport { Octokit } from 'probot';\nimport type { Router, Request, Response } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { sign, verify } from 'jsonwebtoken';\nimport * as githubAuth from '../auth/github';\nimport Layout from '../views/Layout';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request, strategy: string): string => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/app/${strategy}/login-response`;\n};\n\ninterface AuthInfo {\n  id: number;\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nconst getAuthInfoFromCookie = async (\n  req: Request,\n  res: Response,\n): Promise<undefined | AuthInfo> => {\n  const strategy = 'gh'; // req.params.strategy\n  const authInfo = await readAuthCookie(req, strategy);\n\n  if (authInfo?.id) {\n    return authInfo;\n  }\n\n  res.clearCookie(`auth_${strategy}`);\n  return undefined;\n};\n\nexport const getUser = async (\n  req: Request,\n  res: Response,\n): Promise<{ authInfo: AuthInfo; api: Octokit } | null> => {\n  const authInfo = await getAuthInfoFromCookie(req, res);\n  if (!authInfo) {\n    res.redirect('/app/gh/login');\n    return null;\n  }\n\n  return {\n    authInfo,\n    api: new Octokit({ auth: `token ${authInfo.accessToken}` }),\n  };\n};\n\nexport default function auth(router: Router): void {\n  router.get('/gh/login', async (req: Request, res: Response) => {\n    if (await getAuthInfoFromCookie(req, res)) {\n      return res.redirect('/app/gh');\n    }\n\n    // const state = await randomHex(8);\n    // res.cookie(`auth_${strategy}_${state}`, strategy, {\n    //   maxAge: 10 * 60 * 1000,\n    //   httpOnly: true,\n    //   secure,\n    // });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req, 'gh'),\n      scope: 'read:user,repo',\n      // state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/gh/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code: string = req.query.code as string;\n    // const state = req.query.state;\n    // const cookieName = `auth_${strategy}_${state}`;\n    // const cookie = req.cookies && req.cookies[cookieName];\n    // if (!cookie) {\n    //   // res.redirect(`/${strategy}/login`);\n    //   res.send(\n    //     '<html><body>No cookie for this state. <a href=\"/app/gh/login\">Retry ?</a></body></html>',\n    //   );\n    //   return;\n    // }\n    // res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req, strategy),\n    });\n\n    if (!result) {\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/app/gh/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const id = user.data.id;\n    const login = user.data.login;\n\n    const authInfo: AuthInfo = { id, login, accessToken, time: Date.now() };\n    console.log({ authInfo });\n    const token = await signPromisified(authInfo, AUTH_SECRET_KEY, {\n      algorithm: 'HS512',\n      audience: req.headers['user-agent'],\n      expiresIn: '10 days',\n    });\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/app/gh');\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function repository(router: Router, api: GitHubAPI): void {\n  router.get('/gh/repositories', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n    const { data } = await user.api.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a\n                    href={`/app/gh/repository/${repo.owner.login}/${repo.name}`}\n                  >\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n\n            {data.length === 100 && (\n              <div>We currently have a limit to 100 repositories</div>\n            )}\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/gh/repository/:owner/:repository', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n    const { data } = await user.api.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    if (!data.permissions.admin) {\n      res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed on this repo. Go to \"}\n              <a\n                href={`https://github.com/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function home(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/gh', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h1>{process.env.REVIEWFLOW_NAME}</h1>\n            <div style={{ display: 'flex' }}>\n              <div style={{ flexGrow: 1 }}>\n                <h4>Choose your account</h4>\n                <ul>\n                  <li>\n                    <a href=\"/app/gh/user\">{user.authInfo.login}</a>\n                  </li>\n                  {orgs.data.map((org) => (\n                    <li key={org.id}>\n                      <a href={`/app/gh/org/${org.login}`}>{org.login}</a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import { Octokit } from 'probot';\nimport { MongoStores } from '../../mongo';\n\nexport const syncTeams = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  org: { login: string; id: number },\n): Promise<void> => {\n  const orgEmbed = { id: org.id, login: org.login };\n\n  const teamIds: number[] = [];\n\n  await github.paginate(\n    github.teams.list.endpoint.merge({\n      org: org.login,\n    }),\n    async ({ data }: Octokit.Response<Octokit.TeamsListResponse>, done) => {\n      await Promise.all(\n        data.map((team) => {\n          teamIds.push(team.id);\n          return mongoStores.orgTeams.upsertOne({\n            _id: team.id as any, // TODO _id number\n            org: orgEmbed,\n            name: team.name,\n            slug: team.slug,\n            description: team.description,\n          });\n        }),\n      );\n      done();\n    },\n  );\n\n  await mongoStores.orgMembers.deleteMany({\n    'org.id': org.id,\n    'user.id': { $not: { $in: teamIds } },\n  });\n};\n","import { Octokit } from 'probot';\nimport { MongoStores, Org } from '../../mongo';\n\nexport const syncOrg = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  org: { login: string; id: number },\n): Promise<Org> => {\n  const orgInStore = await mongoStores.orgs.upsertOne({\n    _id: org.id as any, // TODO _id is number\n    login: org.login,\n  });\n\n  const orgEmbed = { id: org.id, login: org.login };\n\n  const memberIds: number[] = [];\n\n  await github.paginate(\n    github.orgs.listMembers.endpoint.merge({\n      org: org.login,\n    }),\n    async (\n      { data }: Octokit.Response<Octokit.OrgsListMembersResponse>,\n      done,\n    ) => {\n      await Promise.all(\n        data.map((member) => {\n          memberIds.push(member.id);\n          return Promise.all([\n            mongoStores.orgMembers.upsertOne({\n              _id: `${org.id}_${member.id}`,\n              org: orgEmbed,\n              user: {\n                id: member.id,\n                login: member.login,\n              },\n            }),\n            mongoStores.users.upsertOne({\n              _id: member.id as any,\n              login: member.login,\n              type: member.type,\n            }),\n          ]);\n        }),\n      );\n      done();\n    },\n  );\n\n  await mongoStores.orgMembers.deleteMany({\n    'org.id': org.id,\n    'user.id': { $not: { $in: memberIds } },\n  });\n\n  return orgInStore;\n};\n","import { Config } from './types';\n\nconst config: Config<never, never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [],\n  },\n  groups: {},\n  waitForGroups: {},\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n    },\n  },\n};\n\nexport default config;\n","/* eslint-disable max-lines */\n\nimport { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'ops' | 'frontends' | 'backends'> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  ignoreRepoPattern: '(infra-.*|devenv)',\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z][\\dA-Z]+-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      /* ops */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Alan-pad': null,\n      CamilSadiki: null,\n      busser: null,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Radyum: `romain.reynaud${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'budet-b': `benjamin.budet${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      mdcarter: `maxime.dehaye${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      ChibiBlasphem: `christopher${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Lenamari: `lena${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'AlexisRiols-Ornikar': `alexis.riols${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    ops: {\n      logins: ['JulienBreux', 'Alan-pad', 'CamilSadiki', 'busser'],\n      labels: ['teams/ops'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n        'Radyum',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'vlbr',\n        'budet-b',\n        'mdcarter',\n        'ChibiBlasphem',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/ops': {\n        name: 'ops',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        description: 'This issue or pull request will need a new major version',\n        color: '#FF6F00',\n      },\n      duplicate: {\n        name: 'duplicate',\n        description: 'This issue or pull request already exists',\n        color: '#ECEFF1',\n      },\n      documentation: {\n        name: 'documentation',\n        description: 'Improvements or additions to documentation',\n        color: '#7FCEFF',\n      },\n      rfc: {\n        name: 'RFC',\n        description: 'Request For Comments',\n        color: '#FFD3B2',\n      },\n      bug: {\n        name: 'bug',\n        description: \"Something isn't working\",\n        color: '#FF3D00',\n      },\n      enhancement: {\n        name: 'enhancement',\n        description: 'New feature or request',\n        color: '#7FCEFF',\n      },\n      'help-wanted': {\n        name: 'help wanted',\n        description: 'Extra attention is needed',\n        color: '#B1EE8B',\n      },\n      question: {\n        name: 'question',\n        description: 'Further information is requested',\n        color: '#F860A4',\n      },\n      wontfix: {\n        name: 'wontfix',\n        description: 'This will not be worked on',\n        color: '#ECEFF1',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?(!)?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport defaultConfig from './defaultConfig';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const orgsConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n  reviewflow: christophehurpeau,\n};\n\nexport { defaultConfig };\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","import { MessageCategory } from './MessageCategory';\n\nexport const defaultDmSettings: Record<MessageCategory, boolean> = {\n  'pr-review': true,\n  'pr-review-follow': true,\n  'pr-comment': true,\n  'pr-comment-follow': true,\n  'pr-comment-mention': true,\n  'pr-comment-thread': true,\n  'pr-merge-conflicts': true,\n  'issue-comment-mention': true,\n};\n","import { MongoStores } from '../mongo';\nimport { orgsConfigs, defaultConfig } from '../orgsConfigs';\nimport { MessageCategory } from './MessageCategory';\nimport { defaultDmSettings } from './defaultDmSettings';\n\nexport type UserDmSettings = Record<MessageCategory, boolean>;\nconst cache = new Map<string, Map<number, UserDmSettings>>();\n\nconst getDefaultDmSettings = (org: string): UserDmSettings => {\n  const orgConfig = orgsConfigs[org] || defaultConfig;\n  return orgConfig.defaultDmSettings\n    ? { ...defaultDmSettings, ...orgConfig.defaultDmSettings }\n    : defaultDmSettings;\n};\n\nexport const updateCache = (\n  org: string,\n  userId: number,\n  newSettings: Partial<UserDmSettings>,\n): void => {\n  let orgCache = cache.get(org);\n  if (!orgCache) {\n    orgCache = new Map();\n    cache.set(org, orgCache);\n  }\n  orgCache.set(userId, { ...getDefaultDmSettings(org), ...newSettings });\n};\n\nexport const getUserDmSettings = async (\n  mongoStores: MongoStores,\n  org: string,\n  orgId: number,\n  userId: number,\n): Promise<UserDmSettings> => {\n  const orgDefaultDmSettings = getDefaultDmSettings(org);\n\n  const userDmSettingsConfig = await mongoStores.userDmSettings.findOne({\n    orgId,\n    userId,\n  });\n\n  const config = userDmSettingsConfig\n    ? {\n        ...orgDefaultDmSettings,\n        ...userDmSettingsConfig.settings,\n      }\n    : orgDefaultDmSettings;\n\n  updateCache(org, userId, config);\n  return config;\n};\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport bodyParser from 'body-parser';\nimport { syncTeams } from '../org-handlers/actions/syncTeams';\nimport { syncOrg } from '../org-handlers/actions/syncOrg';\nimport { MessageCategory } from '../dm/MessageCategory';\nimport { getUserDmSettings, updateCache } from '../dm/getUserDmSettings';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { orgsConfigs } from '../orgsConfigs';\nimport { getUser } from './auth';\n\nconst dmMessages: Record<MessageCategory, string> = {\n  'pr-review': 'You are assigned to a review, someone reviewed your PR',\n  'pr-review-follow': \"Someone reviewed a PR you're also reviewing (NEW!)\",\n  'pr-comment': 'Someone commented on your PR (NEW!)',\n  'pr-comment-follow': \"Someone commented on a PR you're reviewing (NEW!)\",\n  'pr-comment-mention': 'Someone mentioned you in a PR (NEW!)',\n  'pr-comment-thread': \"Someone replied to a discussion you're in (NEW!)\",\n  'pr-merge-conflicts': 'Your PR has a merge conflict (not implemented)',\n  'issue-comment-mention':\n    'Someone mentioned you in an issue (not implemented)',\n};\n\nexport default function orgSettings(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/gh/org/:org/force-sync', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app/gh');\n\n    await syncOrg(mongoStores, user.api, org);\n    await syncTeams(mongoStores, user.api, org);\n\n    res.redirect(`/app/gh/org/${req.params.org}`);\n  });\n\n  router.get('/gh/org/:org', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app/gh');\n\n    const installation = await api.apps\n      .getOrgInstallation({ org: org.login })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!installation) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed for this user. Go to \"}\n              <a\n                href={`https://github.com/settings/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to install it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const orgConfig = orgsConfigs[org.login];\n    const userDmSettings = await getUserDmSettings(\n      mongoStores,\n      org.login,\n      org.id,\n      user.authInfo.id,\n    );\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h1>{process.env.REVIEWFLOW_NAME}</h1>\n            <div style={{ display: 'flex' }}>\n              <h2 style={{ flexGrow: 1 }}>{org.login}</h2>\n              <a href=\"/app/gh/\">Switch account</a>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n              <div style={{ flexGrow: 1 }}>\n                <h4>Information</h4>\n                {!orgConfig\n                  ? 'Default config is used: https://github.com/christophehurpeau/reviewflow/blob/master/src/orgsConfigs/defaultConfig.ts'\n                  : `Custom config: https://github.com/christophehurpeau/reviewflow/blob/master/src/orgsConfigs/${org.login}.ts`}\n              </div>\n              <div style={{ width: '380px' }}>\n                <h4>My DM Settings</h4>\n                {Object.entries(dmMessages).map(([key, name]) => (\n                  <div key={key}>\n                    <label htmlFor={key}>\n                      <span\n                        // eslint-disable-next-line react/no-danger\n                        dangerouslySetInnerHTML={{\n                          __html: `<input id=\"${key}\" type=\"checkbox\" autocomplete=\"off\" ${\n                            userDmSettings[key as MessageCategory]\n                              ? 'checked=\"checked\" '\n                              : ''\n                          }onclick=\"fetch(location.pathname, { method: 'PATCH', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ key: '${key}', value: event.currentTarget.checked }) })\" />`,\n                        }}\n                      />\n                      {name}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n\n  router.patch('/gh/org/:org', bodyParser.json(), async (req, res) => {\n    if (!req.body) {\n      res.status(400).send('not ok');\n      return;\n    }\n\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app/gh');\n\n    (await mongoStores.userDmSettings.collection).updateOne(\n      {\n        _id: `${org.id}_${user.authInfo.id}`,\n      },\n      {\n        $set: {\n          [`settings.${req.body.key}`]: req.body.value,\n          updated: new Date(),\n        },\n        $setOnInsert: {\n          orgId: org.id,\n          userId: user.authInfo.id,\n          created: new Date(),\n        },\n      },\n      { upsert: true },\n    );\n\n    const userDmSettingsConfig = await mongoStores.userDmSettings.findOne({\n      orgId: org.id,\n      userId: user.authInfo.id,\n    });\n\n    if (userDmSettingsConfig) {\n      updateCache(org.login, user.authInfo.id, userDmSettingsConfig.settings);\n    }\n\n    res.send('ok');\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function userSettings(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/gh/user', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const { data: installation } = await api.apps\n      .getUserInstallation({\n        username: user.authInfo.login,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!installation) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed for this user. Go to \"}\n              <a\n                href={`https://github.com/settings/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to install it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    return res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>{process.env.REVIEWFLOW_NAME} is installed for this user</div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","/* eslint-disable max-lines */\n\nimport { Application } from 'probot';\nimport cookieParser from 'cookie-parser';\nimport { MongoStores } from './mongo';\nimport repository from './app/repository';\nimport auth from './app/auth';\nimport home from './app/home';\nimport orgSettings from './app/org-settings';\nimport userSettings from './app/user-settings';\n\nexport default async function appRouter(\n  app: Application,\n  mongoStores: MongoStores,\n): Promise<void> {\n  const router = app.route('/app');\n  const api = await app.auth();\n\n  router.use(cookieParser());\n\n  router.get('/', (req, res) => {\n    res.redirect('/app/gh');\n  });\n\n  auth(router);\n  repository(router, api);\n  home(router, api, mongoStores);\n  orgSettings(router, api, mongoStores);\n  userSettings(router, api, mongoStores);\n}\n","export type Options =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: Options[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'autoMergeWithSkipCi',\n    label: 'Auto merge with `[skip ci]`',\n  },\n  {\n    name: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->)(.*)$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\ntype Config = Record<Options, boolean>;\n\nconst parseOptions = (content: string, defaultConfig: Config): Config => {\n  return optionsRegexps.reduce((acc, { name, regexp }) => {\n    const match = regexp.exec(content);\n    acc[name] = !match\n      ? defaultConfig[name] || false\n      : match[1] === 'x' || match[1] === 'X';\n    return acc;\n  }, {} as any) as Config;\n};\n\ninterface ParseBodyResultWithoutOptions {\n  content: string;\n  ending: string;\n  reviewflowContentCol: string;\n  reviewflowContentColPrefix: string;\n  reviewflowContentColSuffix: string;\n}\n\ninterface ParseBodyResultWithOptions extends ParseBodyResultWithoutOptions {\n  options: Config;\n  breakingChanges: string;\n}\n\nexport const parseBody = (\n  description: string,\n): ParseBodyResultWithoutOptions | null => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol, reviewflowContent, ending] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      ending,\n      reviewflowContentCol: reviewflowContent,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  };\n};\n\nexport const parseBodyWithOptions = (\n  description: string,\n  defaultConfig: Config,\n): ParseBodyResultWithOptions | null => {\n  const parsedBody = parseBody(description);\n  if (parsedBody === null) return null;\n\n  // console.log(parsedBody.reviewflowContentCol);\n  let breakingChanges = parsedBody.reviewflowContentCol.replace(\n    /^.*#### Commits Notes:(.*)#### Options:.*$/s,\n    '$1',\n  );\n\n  if (breakingChanges === parsedBody.reviewflowContentCol) {\n    breakingChanges = '';\n  } else {\n    breakingChanges = breakingChanges.trim();\n  }\n\n  return {\n    ...parsedBody,\n    options: parseOptions(parsedBody.reviewflowContentCol, defaultConfig),\n    breakingChanges,\n  };\n};\n","import { Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\n\nexport default function hasLabelInPR(\n  prLabels: Octokit.PullsGetResponse['labels'],\n  label: LabelResponse,\n): boolean {\n  if (!label) return false;\n  return prLabels.some((l): boolean => l.id === label.id);\n}\n","/* eslint-disable max-lines */\nimport { Context, Octokit } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBodyWithOptions } from './utils/parseBody';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nconst hasFailedStatusOrChecks = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n\n  if (!hasLabelInPR(prLabels, autoMergeLabel)) {\n    context.log.debug('automerge not possible: no label', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (pr.state !== 'open') {\n    context.log.debug('automerge not possible: pr is not opened', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && lockedPr.number !== pr.number) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info('automerge not possible: already merged pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${pr.mergeable_state}`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        if (pr.body.includes('<!-- renovate-rebase -->')) {\n          if (pr.body.includes('[x] <!-- renovate-rebase -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- renovate-rebase -->',\n            '[x] <!-- renovate-rebase -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${pr.mergeable_state}`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${pr.mergeable_state}`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n\n    const parsedBody = parseBodyWithOptions(\n      pr.body,\n      repoContext.config.prDefaultOptions,\n    );\n    const options = parsedBody?.options || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: `${pr.title}${\n        options.autoMergeWithSkipCi ? ' [skip ci]' : ''\n      } (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","export const ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n","import { Context, Octokit } from 'probot';\nimport { Config } from '../orgsConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const getLabelsForRepo = async (\n  context: Context<any>,\n): Promise<Octokit.IssuesListLabelsForRepoResponse> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  return labels;\n};\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const labels = await getLabelsForRepo(context);\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = labelConfig.description\n      ? `${labelConfig.description} - Synced by reviewflow`\n      : `Synced by reviewflow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n      if (labelKey === 'teams/ops') {\n        existingLabel = labels.find((label) => label.name === 'archi');\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor ||\n      existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","import { Context } from 'probot';\n\nexport const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n\nexport const contextIssue = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  issue_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    issue_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    issue_number: number;\n  } & T;\n};\n\nexport const contextPr = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  pull_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    pull_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    pull_number: number;\n  } & T;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { WebClient, KnownBlock } from '@slack/web-api';\nimport { Context, Octokit } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { getUserDmSettings } from '../dm/getUserDmSettings';\nimport { MessageCategory } from '../dm/MessageCategory';\nimport { Config } from '../orgsConfigs';\nimport { getKeys } from './utils';\n\ninterface SlackMessage {\n  text: string;\n  blocks?: KnownBlock[];\n  secondaryBlocks?: KnownBlock[];\n  ts?: string;\n}\n\ninterface SlackMessageResult {\n  ts: string;\n}\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  link: (url: string, text: string) => string;\n  postMessage: (\n    category: MessageCategory,\n    githubId: number,\n    githubLogin: string,\n    message: SlackMessage,\n  ) => Promise<SlackMessageResult | null>;\n  prLink: <T extends { repository: Webhooks.PayloadRepository }>(\n    pr: Octokit.PullsGetResponse,\n    context: Context<T>,\n  ) => string;\n}\n\nexport const voidTeamSlack = (): TeamSlack => ({\n  mention: (): string => '',\n  link: (): string => '',\n  postMessage: (): Promise<null> => Promise.resolve(null),\n  prLink: (): string => '',\n});\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  mongoStores: MongoStores,\n  context: Context<any>,\n  config: Config<GroupNames>,\n  slackToken?: string,\n): Promise<TeamSlack> => {\n  const owner = context.payload.repository.owner;\n  if (!slackToken) {\n    return voidTeamSlack();\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackEmails = Object.values(githubLoginToSlackEmail);\n  const slackClient = new WebClient(slackToken);\n  const members: [string, { member: any; im: any }][] = [];\n\n  await slackClient.paginate('users.list', {}, (page: any) => {\n    page.members.forEach((member: any) => {\n      const email = member.profile && member.profile.email;\n      if (email && slackEmails.includes(email)) {\n        members.push([email, { member, im: undefined }]);\n      }\n    });\n    return false;\n  });\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string): string => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (\n      category: MessageCategory,\n      githubId: number,\n      githubLogin: string,\n      message: SlackMessage,\n    ): Promise<null | SlackMessageResult> => {\n      context.log.info('send slack', { githubLogin, message });\n      if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return null;\n\n      const userDmSettings = await getUserDmSettings(\n        mongoStores,\n        owner.login,\n        owner.id,\n        githubId,\n      );\n\n      if (!userDmSettings[category]) return null;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return null;\n      const result = await slackClient.chat.postMessage({\n        username: process.env.REVIEWFLOW_NAME,\n        channel: user.im.id,\n        text: message.text,\n        blocks: message.blocks,\n        attachments: message.secondaryBlocks\n          ? [{ blocks: message.secondaryBlocks }]\n          : undefined,\n        thread_ts: message.ts,\n      });\n      if (!result.ok) return null;\n      return { ts: result.ts as string };\n    },\n    link: (url: string, text: string): string => {\n      return `<${url}|${text}>`;\n    },\n    prLink: <T extends { repository: Webhooks.PayloadRepository }>(\n      pr: Octokit.PullsGetResponse,\n      context: Context<T>,\n    ): string => {\n      return `<${pr.html_url}|${context.payload.repository.name}#${pr.number}>`;\n    },\n  };\n};\n","import { Context, Octokit } from 'probot';\nimport { Lock } from 'lock';\nimport { MongoStores, Org } from '../mongo';\nimport { Config } from '../orgsConfigs';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { syncOrg } from '../org-handlers/actions/syncOrg';\nimport { syncTeams } from '../org-handlers/actions/syncTeams';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface OrgContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  org: Org;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n\n  lock(callback: () => Promise<void> | void): Promise<void>;\n}\n\nconst getOrCreateOrg = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  orgInfo: { id: number; login: string },\n): Promise<Org> => {\n  let org = await mongoStores.orgs.findByKey(orgInfo.id);\n  if (org) return org;\n  org = await syncOrg(mongoStores, github, orgInfo);\n  await syncTeams(mongoStores, github, orgInfo);\n  return org;\n};\n\nconst initTeamContext = async (\n  mongoStores: MongoStores,\n  context: Context<any>,\n  config: Config,\n  orgInfo: { id: number; login: string },\n): Promise<OrgContext> => {\n  const org = await getOrCreateOrg(mongoStores, context.github, orgInfo);\n  const slackPromise = initTeamSlack(\n    mongoStores,\n    context,\n    config,\n    org.slackToken,\n  );\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  const lock = Lock();\n\n  return {\n    config,\n    lock: (callback: () => Promise<void> | void): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const logInfos = { org: orgInfo.login };\n        context.log.info('lock: try to lock org', logInfos);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        lock('_', async (createReleaseCallback) => {\n          const release = createReleaseCallback(() => {});\n          context.log.info('lock: lock org acquired', logInfos);\n          try {\n            await callback();\n          } catch (err) {\n            context.log.info('lock: release org (with error)', logInfos);\n            release();\n            reject(err);\n            return;\n          }\n          context.log.info('lock: release org', logInfos);\n          release();\n          resolve();\n        });\n      });\n    },\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    getTeamsForLogin: (githubLogin) =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n    org,\n  };\n};\n\nconst orgContextsPromise = new Map();\nconst orgContexts = new Map();\n\nexport const obtainOrgContext = (\n  mongoStores: MongoStores,\n  context: Context<any>,\n  config: Config,\n  org: { id: number; login: string },\n): Promise<OrgContext> => {\n  const existingTeamContext = orgContexts.get(org.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = orgContextsPromise.get(org.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(mongoStores, context, config, org);\n  orgContextsPromise.set(org.login, promise);\n\n  return promise.then((orgContext) => {\n    orgContextsPromise.delete(org.login);\n    orgContexts.set(org.login, orgContext);\n    return orgContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { orgsConfigs, Config, defaultConfig } from '../orgsConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainOrgContext, OrgContext } from './orgContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    prNumberOrPrNumbers: number | number[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(context: Context<any>, prNumber: number): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nexport type RepoContext<GroupNames extends string = any> = OrgContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  mongoStores: MongoStores,\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const repo = context.payload.repository;\n  const org = repo.owner;\n  const orgContext = await obtainOrgContext(mongoStores, context, config, org);\n  const repoContext = Object.create(orgContext);\n\n  const labels = await initRepoLabels(context, config);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    prNumberOrPrNumbers: number | number[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      const logInfos = {\n        repo: `${repo.owner.login}/${repo.name}`,\n        prIdOrIds,\n        prNumberOrPrNumbers,\n      };\n      context.log.info('lock: try to lock pr', logInfos);\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        context.log.info('lock: lock acquired', logInfos);\n        try {\n          await callback();\n        } catch (err) {\n          context.log.info('lock: release pr (with error)', logInfos);\n          release();\n          reject(err);\n          return;\n        }\n        context.log.info('lock: release pr', logInfos);\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', pr.number, () => {\n        return lockPROrPRS(String(pr.id), pr.number, async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(prResult.data, context, repoContext);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', {\n        repo: `${repo.owner.login}/${repo.name}`,\n        pr,\n      });\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (context, prNumber: number | string): void => {\n      context.log('merge lock: remove', {\n        repo: `${repo.owner.login}/${repo.name}`,\n        prNumber,\n      });\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log('merge lock: next', {\n          repo: `${repo.owner.login}/${repo.name}`,\n          lockMergePr,\n        });\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        repo: `${repo.owner.login}/${repo.name}`,\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const shouldIgnoreRepo = (\n  repoName: string,\n  orgConfig: Config<any, any>,\n): boolean => {\n  const ignoreRepoRegexp =\n    orgConfig.ignoreRepoPattern &&\n    new RegExp(`^${orgConfig.ignoreRepoPattern}$`);\n\n  if (repoName === 'reviewflow-test') {\n    return process.env.REVIEWFLOW_NAME !== 'reviewflow-test';\n  }\n\n  if (ignoreRepoRegexp) {\n    return ignoreRepoRegexp.test(repoName);\n  }\n\n  return false;\n};\n\nexport const obtainRepoContext = (\n  mongoStores: MongoStores,\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  const owner = repo.owner;\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  let orgConfig = orgsConfigs[owner.login];\n\n  if (!orgConfig) {\n    console.warn(`using default config for ${owner.login}`);\n    orgConfig = defaultConfig as Config<any, any>;\n  }\n\n  if (shouldIgnoreRepo(repo.name, orgConfig)) {\n    console.warn('repo ignored', { owner: repo.owner.login, name: repo.name });\n    return null;\n  }\n\n  const promise = initRepoContext(mongoStores, context, orgConfig);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import { Context, Octokit } from 'probot';\nimport { MongoStores } from '../../mongo';\nimport { obtainRepoContext, RepoContext } from '../../context/repoContext';\n\nexport type PRHandler<T = any, Result = void, FourthArgument = never> = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n  fourthArgument?: FourthArgument,\n) => Promise<Result>;\n\nexport type CallbackWithPRAndRepoContext = (\n  pr: Octokit.PullsGetResponse,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends { pull_request: { id: number; number: number } }\n>(\n  mongoStores: MongoStores,\n  context: Context<T>,\n  callback: CallbackWithPRAndRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(mongoStores, context);\n  if (!repoContext) return;\n\n  return repoContext.lockPROrPRS(\n    String(context.payload.pull_request.id),\n    context.payload.pull_request.number,\n    async () => {\n      const prResult = await context.github.pulls.get(\n        context.repo({\n          pull_number: context.payload.pull_request.number,\n        }),\n      );\n\n      await callback(prResult.data, repoContext);\n    },\n  );\n};\n\ntype CallbackPRAndContextAndRepoContext<T> = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends { pull_request: { id: number; number: number } }\n>(\n  mongoStores: MongoStores,\n  callback: CallbackPRAndContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(mongoStores, context, (pr, repoContext) =>\n    callback(pr, context, repoContext),\n  );\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestsChange = <T>(\n  mongoStores: MongoStores,\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number; number: number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(mongoStores, context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(\n    prs.map((pr) => String(pr.id)),\n    prs.map((pr) => pr.number),\n    () => callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PRHandler } from '../utils';\nimport { contextIssue } from '../../context/utils';\n\nexport const autoAssignPRToCreator: PRHandler<Webhooks.WebhookPayloadPullRequest> = async (\n  pr,\n  context,\n  repoContext,\n) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    contextIssue(context, {\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z][\\dA-Za-z]+)[ -](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/i, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../orgsConfigs/types';\nimport { parseBodyWithOptions, parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  body: string;\n  options?: Record<Options, boolean>;\n}\n\nconst getReplacement = (infos?: StatusInfo[]): string => {\n  if (!infos) return '$1$2';\n  return infos.length !== 0\n    ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n$2`\n    : '$2';\n};\n\nexport const updateBody = (\n  body: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n  updateOptions?: Partial<Record<Options, boolean>>,\n): UpdatedBodyWithOptions => {\n  const parsed = parseBodyWithOptions(body, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return { body };\n  }\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  const infosAndCommitNotesParagraph = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^\\s*(?:(#### Infos:.*)?(#### Commits Notes:.*)?#### Options:)?.*$/s,\n    getReplacement(infos),\n  );\n\n  const updatedOptions = !updateOptions\n    ? options\n    : { ...options, ...updateOptions };\n\n  return {\n    options: updatedOptions,\n    body: `${content}${reviewflowContentColPrefix}\n${infosAndCommitNotesParagraph}#### Options:\n${toMarkdownOptions(updatedOptions)}\n${reviewflowContentColSuffix}${ending || ''}`,\n  };\n};\n\nexport const updateBodyCommitsNotes = (\n  body: string,\n  commitNotes?: string,\n): string => {\n  const parsed = parseBody(body);\n  if (!parsed) {\n    console.info('could not parse body');\n    return body;\n  }\n\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n  } = parsed;\n\n  const reviewflowContentColReplaced = reviewflowContentCol.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /(?:#### Commits Notes:.*)?(#### Options:)/s,\n    // eslint-disable-next-line no-nested-ternary\n    !commitNotes ? '$1' : `#### Commits Notes:\\n\\n${commitNotes}\\n\\n$1`,\n  );\n\n  return `${content}${reviewflowContentColPrefix}${reviewflowContentColReplaced}${reviewflowContentColSuffix}${\n    ending || ''\n  }`;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextIssue } from '../../context/utils';\n\ninterface UpdatePr {\n  title?: string;\n  body?: string;\n}\n\nexport const updatePrIfNeeded = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  update: UpdatePr,\n): Promise<void> => {\n  const hasDiffInTitle = update.title && pr.title !== update.title;\n  const hasDiffInBody = update.body && pr.body !== update.body;\n\n  if (hasDiffInTitle || hasDiffInBody) {\n    const diff: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      diff.title = update.title;\n      pr.title = update.title as string;\n    }\n    if (hasDiffInBody) {\n      diff.body = update.body;\n      pr.body = update.body as string;\n    }\n\n    await context.github.issues.update(contextIssue(context, diff));\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport { contextIssue } from '../../../context/utils';\nimport hasLabelInPR from './hasLabelInPR';\n\ninterface SyncLabelOptions {\n  onRemove?: () => void | Promise<void>;\n  onAdd?: (prLabels: LabelResponse[]) => void | Promise<void>;\n}\n\nexport default async function syncLabel<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<T>,\n  shouldHaveLabel: boolean,\n  label: LabelResponse,\n  prHasLabel = hasLabelInPR(pr.labels, label),\n  { onRemove, onAdd }: SyncLabelOptions = {},\n): Promise<void> {\n  if (prHasLabel && !shouldHaveLabel) {\n    await context.github.issues.removeLabel(\n      contextIssue(context, { name: label.name }),\n    );\n    if (onRemove) await onRemove();\n  }\n  if (shouldHaveLabel && !prHasLabel) {\n    const response = await context.github.issues.addLabels(\n      contextIssue(context, { labels: [label.name] }),\n    );\n    if (onAdd) await onAdd(response.data);\n  }\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\n\nexport default async function createStatus<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  name: string,\n  sha: string,\n  type: 'failure' | 'success',\n  description: string,\n  url?: string,\n): Promise<void> {\n  await context.github.repos.createStatus(\n    context.repo({\n      context:\n        name === ''\n          ? process.env.REVIEWFLOW_NAME\n          : `${process.env.REVIEWFLOW_NAME}/${name}`,\n      sha,\n      state: type,\n      description,\n      target_url: url,\n    }),\n  );\n}\n","/* eslint-disable max-lines */\nimport Webhooks from '@octokit/webhooks';\nimport { StatusError, StatusInfo } from '../../orgsConfigs/types';\nimport { PRHandler } from '../utils';\nimport { ExcludesFalsy } from '../../utils/ExcludesFalsy';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport { updatePrIfNeeded } from './updatePr';\nimport hasLabelInPR from './utils/hasLabelInPR';\nimport syncLabel from './utils/syncLabel';\nimport createStatus from './utils/createStatus';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nexport const editOpenedPR: PRHandler<\n  Webhooks.WebhookPayloadPullRequest,\n  { skipAutoMerge: boolean },\n  string\n> = async (pr, context, repoContext, previousSha) => {\n  const repo = context.payload.repository;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return { skipAutoMerge: true };\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find(\n    (check): boolean => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(\n        ({ name, error, info }): Promise<void> =>\n          createStatus(\n            context,\n            name,\n            pr.head.sha,\n            error ? 'failure' : 'success',\n            error ? error.title : (info as StatusInfo).title,\n            error ? undefined : (info as StatusInfo).url,\n          ),\n      ),\n      ...(previousSha\n        ? statuses\n            .map(({ name, error, info }): Promise<void> | undefined =>\n              error\n                ? createStatus(\n                    context,\n                    name,\n                    previousSha,\n                    'success',\n                    'New commits have been pushed',\n                  )\n                : undefined,\n            )\n            .filter(ExcludesFalsy)\n        : []),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck && previousSha && errorRule\n        ? createStatus(\n            context,\n            'lint-pr',\n            previousSha,\n            'success',\n            'New commits have been pushed',\n          )\n        : undefined,\n      !hasLintPrCheck &&\n        createStatus(\n          context,\n          'lint-pr',\n          pr.head.sha,\n          errorRule ? 'failure' : 'success',\n          errorRule ? errorRule.error.title : '✓ Your PR is valid',\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = hasLabelInPR(pr.labels, featureBranchLabel);\n  const prHasSkipCiLabel = hasLabelInPR(pr.labels, skipCiLabel);\n  const prHasAutoMergeLabel = hasLabelInPR(pr.labels, automergeLabel);\n\n  const defaultOptions = {\n    ...repoContext.config.prDefaultOptions,\n    featureBranch: prHasFeatureBranchLabel,\n    autoMergeWithSkipCi: prHasSkipCiLabel,\n    autoMerge: prHasAutoMergeLabel,\n  };\n\n  const { body, options } = updateBody(\n    pr.body,\n    defaultOptions,\n    statuses\n      .filter((status) => status.info && status.info.inBody)\n      .map((status) => status.info) as StatusInfo[],\n  );\n  await updatePrIfNeeded(pr, context, repoContext, { title, body });\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    await Promise.all([\n      featureBranchLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.featureBranch,\n          featureBranchLabel,\n          prHasFeatureBranchLabel,\n        ),\n      skipCiLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMergeWithSkipCi,\n          skipCiLabel,\n          prHasSkipCiLabel,\n        ),\n      automergeLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMerge,\n          automergeLabel,\n          prHasAutoMergeLabel,\n          {\n            onAdd: async (prLabels) => {\n              await autoMergeIfPossible(pr, context, repoContext, prLabels);\n            },\n            onRemove: () => {\n              repoContext.removePrFromAutomergeQueue(context, pr.number);\n            },\n          },\n        ),\n    ]);\n\n    if (!automergeLabel) {\n      return { skipAutoMerge: true };\n    }\n  }\n\n  return { skipAutoMerge: false };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\nimport createStatus from './utils/createStatus';\n\nconst addStatusCheck = async function <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n  previousSha?: string,\n): Promise<void> {\n  const hasPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find((check) => check.name === process.env.REVIEWFLOW_NAME);\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else if (previousSha && state === 'failure') {\n    await Promise.all([\n      createStatus(\n        context,\n        '',\n        previousSha,\n        'success',\n        'New commits have been pushed',\n      ),\n      createStatus(context, '', pr.head.sha, state, description),\n    ]);\n  } else {\n    await createStatus(context, '', pr.head.sha, state, description);\n  }\n};\n\nexport const updateStatusCheckFromLabels = (\n  pr: Octokit.PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  labels: LabelResponse[] = pr.labels || [],\n  previousSha?: string,\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l?.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  const createFailedStatusCheck = (description: string): Promise<void> =>\n    addStatusCheck(\n      pr,\n      context,\n      {\n        state: 'failure',\n        description,\n      },\n      previousSha,\n    );\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(\n    pr,\n    context,\n    {\n      state: 'success',\n      description: '✓ PR ready to merge !',\n    },\n    previousSha,\n  );\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../orgsConfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextIssue } from '../../context/utils';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends { repository: Webhooks.PayloadRepository },\n  GroupNames extends string = any\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n          toAddNames.add(label.name);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          contextIssue(context, {\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          try {\n            const result = await context.github.issues.removeLabel(\n              contextIssue(context, {\n                name: toDeleteName,\n              }),\n            );\n            prLabels = result.data;\n          } catch (err) {\n            context.log.warn('error removing label', {\n              err: err?.message,\n            });\n          }\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        contextIssue(context, {\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(pr, context, repoContext, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { contextPr } from '../../context/utils';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nexport const autoApproveAndAutoMerge = async (\n  pr: Octokit.PullsGetResponse,\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = repoContext.labels['code/approved'];\n  if (hasLabelInPR(pr.labels, codeApprovedLabel)) {\n    await context.github.pulls.createReview(\n      contextPr(context, { event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(pr, context, repoContext);\n    return true;\n  }\n\n  return false;\n};\n","import Webhooks from '@octokit/webhooks';\nimport parse from '@commitlint/parse';\nimport { PRHandler } from '../utils';\nimport { contextPr } from '../../context/utils';\nimport syncLabel from './utils/syncLabel';\nimport { updateBodyCommitsNotes } from './utils/updateBody';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const readCommitsAndUpdateInfos: PRHandler<Webhooks.WebhookPayloadPullRequest> = async (\n  pr,\n  context,\n  repoContext,\n) => {\n  // tmp.data[0].sha\n  // tmp.data[0].commit.message\n\n  const commits = await context.github.paginate(\n    context.github.pulls.listCommits.endpoint.merge(\n      contextPr(context, {\n        // A custom page size up to 100. Default is 30.\n        per_page: 100,\n      }),\n    ),\n    (res) => res.data,\n  );\n\n  const conventionalCommits = await Promise.all(\n    commits.map((c) => parse(c.commit.message)),\n  );\n\n  const breakingChangesCommits: any = conventionalCommits.reduce(\n    (acc, c, index) => {\n      const breakingChangesNotes = c.notes.filter(\n        (note: any) => note.title === 'BREAKING CHANGE',\n      );\n      if (breakingChangesNotes.length !== 0) {\n        acc.push({ commit: commits[index], breakingChangesNotes });\n      }\n\n      return acc;\n    },\n    [],\n  );\n\n  const breakingChangesLabel = repoContext.labels['breaking-changes'];\n  const newBody = updateBodyCommitsNotes(\n    pr.body,\n    breakingChangesCommits.length === 0\n      ? ''\n      : `Breaking Changes:\\n${breakingChangesCommits\n          .map(({ commit, breakingChangesNotes }: any) =>\n            breakingChangesNotes.map(\n              (note: any) =>\n                `- ${note.text.replace('\\n', ' ')} (${commit.sha})`,\n            ),\n          )\n          .join('')}`,\n  );\n\n  await Promise.all([\n    syncLabel(\n      pr,\n      context,\n      breakingChangesCommits.length !== 0,\n      breakingChangesLabel,\n    ),\n    updatePrIfNeeded(pr, context, repoContext, { body: newBody }),\n  ]);\n\n  // TODO auto update ! in front of : to signal a breaking change when https://github.com/conventional-changelog/commitlint/issues/658 is closed\n};\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function opened(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const fromRenovate = pr.head.ref.startsWith('renovate/');\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(pr, context, repoContext),\n          editOpenedPR(pr, context, repoContext).then(() => {\n            return readCommitsAndUpdateInfos(pr, context, repoContext);\n          }),\n          fromRenovate\n            ? autoApproveAndAutoMerge(pr, context, repoContext).then(\n                async (approved: boolean): Promise<void> => {\n                  if (!approved) {\n                    await updateReviewStatus(pr, context, repoContext, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(pr, context, repoContext, 'dev', {\n                add: ['needsReview'],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBodyWithOptions } from './actions/utils/parseBody';\n\nexport default function closed(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id\n              ? parseBodyWithOptions(\n                  pr.body,\n                  repoContext.config.prDefaultOptions,\n                )\n              : null;\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            parsedBody?.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            updateReviewStatus(pr, context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function closed(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.reopened',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        await Promise.all([\n          updateReviewStatus(pr, context, repoContext, 'dev', {\n            add: ['needsReview'],\n            remove: ['approved'],\n          }),\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { MessageCategory } from '../../dm/MessageCategory';\nimport { RepoContext } from '../../context/repoContext';\n\nexport const postSlackMessageWithSecondaryBlock = (\n  repoContext: RepoContext,\n  category: MessageCategory,\n  userId: number,\n  userLogin: string,\n  message: string,\n  secondaryBlockText?: string,\n): ReturnType<RepoContext['slack']['postMessage']> => {\n  return repoContext.slack.postMessage(category, userId, userLogin, {\n    text: message,\n    blocks: [\n      {\n        type: 'section' as const,\n        text: {\n          type: 'mrkdwn' as const,\n          text: message,\n        },\n      },\n    ],\n    secondaryBlocks: !secondaryBlockText\n      ? undefined\n      : [\n          {\n            type: 'section' as const,\n            text: {\n              type: 'mrkdwn' as const,\n              text: secondaryBlockText,\n            },\n          },\n        ],\n  });\n};\n","import { Context } from 'probot';\nimport { contextPr } from '../../context/utils';\n\nexport const listReviews = async (context: Context) => {\n  const { data: reviews } = await context.github.pulls.listReviews(\n    contextPr(context, { per_page: 50 }),\n  );\n  return reviews;\n};\n","import issueParser from 'issue-parser';\n\nconst parse = issueParser('github', { actions: {}, issuePrefixes: [] });\n\nexport const parseMentions = (body: string): readonly string[] => {\n  return parse(body).mentions.map((m) => m.user);\n};\n","import { Application, Octokit, Context } from 'probot';\nimport { WebhookPayloadPullRequestReviewComment } from '@octokit/webhooks';\nimport { contextPr } from '../context/utils';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { postSlackMessageWithSecondaryBlock } from './utils/postSlackMessageWithSecondaryBlock';\nimport { listReviews } from './utils/listReviews';\nimport { parseMentions } from './utils/parseMentions';\n\nconst getDiscussion = async (\n  context: Context,\n  comment: any,\n): Promise<Octokit.PullsListCommentsResponse> => {\n  if (!comment.in_reply_to_id) return [comment];\n  return context.github.paginate(\n    context.github.pulls.listComments.endpoint.merge(contextPr(context)),\n    ({ data }: Octokit.Response<Octokit.PullsListCommentsResponse>) => {\n      return data.filter(\n        (c) =>\n          c.in_reply_to_id === comment.in_reply_to_id ||\n          c.id === comment.in_reply_to_id,\n      );\n    },\n  );\n};\n\nconst getMentions = (\n  discussion: Octokit.PullsListCommentsResponse,\n): string[] => {\n  const mentions = new Set<string>();\n\n  discussion.forEach((c) => {\n    parseMentions(c.body).forEach((m) => mentions.add(m));\n  });\n\n  return [...mentions];\n};\n\nconst getUsersInThread = (\n  discussion: Octokit.PullsListCommentsResponse,\n): { id: number; login: string }[] => {\n  const userIds = new Set<number>();\n  const users: { id: number; login: string }[] = [];\n\n  discussion.forEach((c) => {\n    if (userIds.has(c.user.id)) return;\n    userIds.add(c.user.id);\n    users.push({ id: c.user.id, login: c.user.login });\n  });\n\n  return users;\n};\n\nexport default function prComment(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request_review_comment.created',\n    createHandlerPullRequestChange<WebhookPayloadPullRequestReviewComment>(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const { comment } = context.payload;\n\n        const body = comment.body;\n        if (!body) return;\n\n        const commentByOwner = pr.user.login === comment.user.login;\n        const [discussion, reviews] = await Promise.all([\n          getDiscussion(context, comment),\n          listReviews(context),\n        ]);\n\n        const reviewers = reviews.map((review) => review.user);\n        const followers = commentByOwner\n          ? reviewers\n          : reviewers.filter((user) => user.login !== comment.user.login);\n\n        const usersInThread = getUsersInThread(discussion).filter(\n          (u) => u.id !== pr.user.id && !followers.find((f) => f.id === u.id),\n        );\n        const mentions = getMentions(discussion).filter(\n          (m) =>\n            m !== pr.user.login &&\n            !followers.find((f) => f.login === m) &&\n            !usersInThread.find((u) => u.login === m),\n        );\n\n        const mention = repoContext.slack.mention(comment.user.login);\n        const prUrl = repoContext.slack.prLink(pr, context);\n        const ownerMention = repoContext.slack.mention(pr.user.login);\n        const commentLink = repoContext.slack.link(\n          comment.html_url,\n          'commented',\n        );\n\n        const createMessage = (toOwner?: boolean): string => {\n          const ownerPart = toOwner ? 'your PR' : `${ownerMention}'s PR `;\n          return `:speech_balloon: ${mention} ${commentLink} on ${ownerPart} ${prUrl}`;\n        };\n\n        if (!commentByOwner) {\n          postSlackMessageWithSecondaryBlock(\n            repoContext,\n            'pr-comment',\n            pr.user.id,\n            pr.user.login,\n            createMessage(true),\n            body,\n          );\n        }\n\n        followers.forEach((follower) => {\n          postSlackMessageWithSecondaryBlock(\n            repoContext,\n            'pr-comment-follow',\n            follower.id,\n            follower.login,\n            createMessage(false),\n            body,\n          );\n        });\n\n        usersInThread.forEach((user) => {\n          postSlackMessageWithSecondaryBlock(\n            repoContext,\n            'pr-comment-thread',\n            user.id,\n            user.login,\n            createMessage(false),\n            body,\n          );\n        });\n\n        mongoStores.users\n          .findAll({ login: { $in: mentions } })\n          .then((users) => {\n            users.forEach((u) => {\n              postSlackMessageWithSecondaryBlock(\n                repoContext,\n                'pr-comment-mention',\n                u._id as any, // TODO _id is number\n                u.login,\n                createMessage(false),\n                body,\n              );\n            });\n          });\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { contextPr } from '../context/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        // ignore if sender is self (dismissed review rerequest review)\n        if (sender.type === 'Bot') return;\n\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            contextPr(context, { per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup &&\n              review.state === 'REQUEST_CHANGES' &&\n              // In case this is a rerequest for review\n              review.user.login !== reviewer.login,\n          );\n\n          if (!hasChangesRequestedInReviews) {\n            await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n              add: ['needsReview', !shouldWait && 'requested'],\n              remove: ['approved', 'changesRequested'],\n            });\n          }\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          repoContext.slack.postMessage(\n            'pr-review',\n            reviewer.id,\n            reviewer.login,\n            {\n              text: `:eyes: ${repoContext.slack.mention(\n                sender.login,\n              )} requests your review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )} !\\n> ${pr.title}`,\n            },\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { contextPr } from '../context/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequestRemoved(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { data: reviews } = await context.github.pulls.listReviews(\n            contextPr(context, { per_page: 50 }),\n          );\n\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const hasApprovedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'APPROVED',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n            ],\n          });\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (repoContext.slack) {\n          repoContext.slack.postMessage(\n            'pr-review',\n            reviewer.id,\n            reviewer.login,\n            {\n              text: `:skull_and_crossbones: ${repoContext.slack.mention(\n                sender.login,\n              )} removed the request for your review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            },\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { listReviews } from './utils/listReviews';\nimport { postSlackMessageWithSecondaryBlock } from './utils/postSlackMessageWithSecondaryBlock';\n\nexport default function reviewSubmitted(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const { user: reviewer, state, body } = (context.payload as any).review;\n\n        const reviewByOwner = pr.user.login === reviewer.login;\n        const reviews = await listReviews(context);\n        const reviewers = reviews.map((review) => review.user);\n        const followers = reviewers.filter(\n          (user) => user.login !== reviewer.login,\n        );\n\n        if (!reviewByOwner) {\n          const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n          let merged: boolean;\n\n          if (\n            reviewerGroup &&\n            repoContext.config.labels.review[reviewerGroup]\n          ) {\n            const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n              reviewerGroup,\n              pr.requested_reviewers,\n              {\n                includesReviewerGroup: true,\n                // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n                // includesWaitForGroups: true,\n              },\n            );\n\n            const hasChangesRequestedInReviews = reviews.some(\n              (review) =>\n                repoContext.getReviewerGroup(review.user.login) ===\n                  reviewerGroup && review.state === 'REQUEST_CHANGES',\n            );\n\n            const approved =\n              !hasRequestedReviewsForGroup &&\n              !hasChangesRequestedInReviews &&\n              state === 'approved';\n\n            const newLabels = await updateReviewStatus(\n              pr,\n              context,\n              repoContext,\n              reviewerGroup,\n              {\n                add: [\n                  approved && 'approved',\n                  state === 'changes_requested' && 'changesRequested',\n                ],\n                remove: [\n                  approved && 'needsReview',\n                  !(\n                    hasRequestedReviewsForGroup || state === 'changes_requested'\n                  ) && 'requested',\n                  state === 'approved' &&\n                    !hasChangesRequestedInReviews &&\n                    'changesRequested',\n                  state === 'changes_requested' && 'approved',\n                ],\n              },\n            );\n\n            if (approved && !hasChangesRequestedInReviews) {\n              merged = await autoMergeIfPossible(\n                pr,\n                context,\n                repoContext,\n                newLabels,\n              );\n            }\n          }\n\n          const mention = repoContext.slack.mention(reviewer.login);\n          const prUrl = repoContext.slack.prLink(pr, context);\n          const ownerMention = repoContext.slack.mention(pr.user.login);\n\n          if (!body && state !== 'changes_requested' && state !== 'approved') {\n            return;\n          }\n\n          const createMessage = (toOwner?: boolean): string => {\n            const ownerPart = toOwner ? 'your PR' : `${ownerMention}'s PR `;\n\n            if (state === 'changes_requested') {\n              return `:x: ${mention} requests changes on ${ownerPart} ${prUrl}`;\n            }\n            if (state === 'approved') {\n              return `${\n                toOwner ? ':clap: ' : ''\n              }:white_check_mark: ${mention} approves ${ownerPart} ${prUrl}${\n                merged ? ' and PR is merged :tada:' : ''\n              }`;\n            }\n            return `:speech_balloon: ${mention} commented on ${ownerPart} ${prUrl}`;\n          };\n\n          postSlackMessageWithSecondaryBlock(\n            repoContext,\n            'pr-review',\n            pr.user.id,\n            pr.user.login,\n            createMessage(true),\n            body,\n          );\n\n          followers.forEach((follower) => {\n            postSlackMessageWithSecondaryBlock(\n              repoContext,\n              'pr-review-follow',\n              follower.id,\n              follower.login,\n              createMessage(false),\n              body,\n            );\n          });\n        } else if (body) {\n          const mention = repoContext.slack.mention(reviewer.login);\n          const prUrl = repoContext.slack.prLink(pr, context);\n\n          followers.forEach((follower) => {\n            postSlackMessageWithSecondaryBlock(\n              repoContext,\n              'pr-review-follow',\n              follower.id,\n              follower.login,\n              `:speech_balloon: ${mention} commented on his PR ${prUrl}`,\n              body,\n            );\n          });\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { contextPr } from '../context/utils';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewDismissed(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            contextPr(context, { per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: ['needsReview', 'requested'],\n            remove: [\n              !hasChangesRequestedInReviews && 'changesRequested',\n              'approved',\n            ],\n          });\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              'pr-review',\n              pr.user.id,\n              pr.user.login,\n              {\n                text: `:skull: ${repoContext.slack.mention(\n                  reviewer.login,\n                )} dismissed his review on ${repoContext.slack.prLink(\n                  pr,\n                  context,\n                )}`,\n              },\n            );\n          } else {\n            repoContext.slack.postMessage(\n              'pr-review',\n              reviewer.id,\n              reviewer.login,\n              {\n                text: `:skull: ${repoContext.slack.mention(\n                  sender.login,\n                )} dismissed your review on ${repoContext.slack.prLink(\n                  pr,\n                  context,\n                )}`,\n              },\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { readCommitsAndUpdateInfos } from './actions/readCommitsAndUpdateInfos';\n\nexport default function synchronize(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n        const previousSha = (context.payload as any).before as string;\n\n        await Promise.all([\n          editOpenedPR(pr, context, repoContext, previousSha),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(\n            pr,\n            context,\n            repoContext,\n            pr.labels,\n            previousSha,\n          ),\n\n          readCommitsAndUpdateInfos(pr, context, repoContext),\n        ]);\n\n        // call autoMergeIfPossible to re-add to the queue when push is fixed\n        await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      mongoStores,\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        if (\n          sender.type === 'Bot' &&\n          sender.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n        ) {\n          return;\n        }\n\n        const { skipAutoMerge } = await editOpenedPR(pr, context, repoContext);\n        if (!skipAutoMerge) await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateBody } from './utils/updateBody';\nimport { Options } from './utils/prOptions';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const updatePrBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  updateOptions: Partial<Record<Options, boolean>>,\n): Promise<void> => {\n  const { body } = updateBody(\n    pr.body,\n    repoContext.config.prDefaultOptions,\n    undefined,\n    updateOptions,\n  );\n\n  await updatePrIfNeeded(pr, context, repoContext, { body });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { contextPr, contextIssue } from '../context/utils';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrBody } from './actions/updatePrBody';\nimport hasLabelInPR from './actions/utils/hasLabelInPR';\n\nexport default function labelsChanged(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context: Context<Webhooks.WebhookPayloadPullRequest>) => {\n      const sender = context.payload.sender;\n      const fromRenovate =\n        sender.type === 'Bot' && sender.login === 'renovate[bot]';\n      context.payload.pull_request.head.ref.startsWith('renovate/');\n\n      if (sender.type === 'Bot' && !fromRenovate) {\n        return;\n      }\n\n      await handlerPullRequestChange(\n        mongoStores,\n        context,\n        async (pr, repoContext) => {\n          const label = (context.payload as any).label;\n          if (fromRenovate) {\n            const codeApprovedLabel = repoContext.labels['code/approved'];\n            const autoMergeLabel = repoContext.labels['merge/automerge'];\n            const autoMergeSkipCiLabel = repoContext.labels['merge/skip-ci'];\n            if (context.payload.action === 'labeled') {\n              if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n                // const { data: reviews } = await context.github.pulls.listReviews(\n                //   contextPr(context, { per_page: 1 }),\n                // );\n                // if (reviews.length !== 0) {\n                await context.github.pulls.createReview(\n                  contextPr(context, { event: 'APPROVE' }),\n                );\n                if (autoMergeSkipCiLabel) {\n                  await context.github.issues.addLabels(\n                    contextIssue(context, {\n                      labels: [autoMergeSkipCiLabel.name],\n                    }),\n                  );\n                }\n                await updateStatusCheckFromLabels(pr, context, repoContext);\n                await updatePrBody(pr, context, repoContext, {\n                  autoMergeWithSkipCi: true,\n                  // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                  autoMerge: hasLabelInPR(pr.labels, autoMergeLabel)\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMerge,\n                });\n                // }\n              } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n                await updatePrBody(pr, context, repoContext, {\n                  autoMerge: true,\n                  // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                  // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                  autoMergeWithSkipCi: hasLabelInPR(\n                    pr.labels,\n                    codeApprovedLabel,\n                  )\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n                });\n              }\n              await autoMergeIfPossible(pr, context, repoContext);\n            }\n            return;\n          }\n\n          if (repoContext.protectedLabelIds.includes(label.id)) {\n            if (context.payload.action === 'labeled') {\n              await context.github.issues.removeLabel(\n                contextIssue(context, { name: label.name }),\n              );\n            } else {\n              await context.github.issues.addLabels(\n                contextIssue(context, { labels: [label.name] }),\n              );\n            }\n            return;\n          }\n\n          await updateStatusCheckFromLabels(pr, context, repoContext);\n\n          const featureBranchLabel = repoContext.labels['feature-branch'];\n          const automergeLabel = repoContext.labels['merge/automerge'];\n          const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n          const option = (() => {\n            if (featureBranchLabel && label.id === featureBranchLabel.id)\n              return 'featureBranch';\n            if (automergeLabel && label.id === automergeLabel.id)\n              return 'autoMerge';\n            if (skipCiLabel && label.id === skipCiLabel.id)\n              return 'autoMergeWithSkipCi';\n            return null;\n          })();\n\n          if (option) {\n            await updatePrBody(pr, context, repoContext, {\n              [option]: context.payload.action === 'labeled',\n            });\n          } else if (context.payload.action === 'labeled') {\n            if (\n              repoContext.labels['merge/automerge'] &&\n              label.id === repoContext.labels['merge/automerge'].id\n            ) {\n              await autoMergeIfPossible(pr, context, repoContext);\n            }\n          }\n        },\n      );\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      mongoStores,\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  pull_number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      mongoStores,\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  pull_number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { MongoStores } from '../mongo';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      mongoStores,\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (\n          context.payload.state !== 'loading' &&\n          isSameBranch(context, lockedPr)\n        ) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","import { Context } from 'probot';\nimport { orgsConfigs, defaultConfig } from '../../orgsConfigs';\nimport { MongoStores } from '../../mongo';\nimport { OrgContext, obtainOrgContext } from '../../context/orgContext';\n\ntype CallbackContextAndOrgContext<T> = (\n  context: Context<T>,\n  orgContext: OrgContext,\n) => void | Promise<void>;\n\nexport const handlerOrgChange = async <\n  T extends { organization: { id: number; login: string } }\n>(\n  mongoStores: MongoStores,\n  context: Context<T>,\n  callback: CallbackContextAndOrgContext<T>,\n): Promise<void> => {\n  const org = context.payload.organization;\n  const config = orgsConfigs[org.login] || defaultConfig;\n  const orgContext = await obtainOrgContext(mongoStores, context, config, org);\n  if (!orgContext) return;\n\n  return orgContext.lock(async () => {\n    await callback(context, orgContext);\n  });\n};\n\nexport const createHandlerOrgChange = <\n  T extends { organization: { id: number; login: string } }\n>(\n  mongoStores: MongoStores,\n  callback: CallbackContextAndOrgContext<T>,\n) => (context: Context<T>) => {\n  return handlerOrgChange(mongoStores, context, callback);\n};\n","import { Application } from 'probot';\nimport Webhooks from '@octokit/webhooks';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reopenedHandler from './pr-handlers/reopened';\nimport comment from './pr-handlers/comment';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchronizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\nimport { MongoStores } from './mongo';\nimport { createHandlerOrgChange } from './org-handlers/utils/handler';\nimport { syncOrg } from './org-handlers/actions/syncOrg';\nimport { syncTeams } from './org-handlers/actions/syncTeams';\n\nexport default function initApp(\n  app: Application,\n  mongoStores: MongoStores,\n): void {\n  /* https://developer.github.com/webhooks/event-payloads/#organization */\n  app.on(\n    ['organization.member_added', 'organization.member_removed'],\n    createHandlerOrgChange<Webhooks.WebhookPayloadOrganization>(\n      mongoStores,\n      async (context, orgContext) => {\n        await syncOrg(\n          mongoStores,\n          context.github,\n          context.payload.organization,\n        );\n      },\n    ),\n  );\n\n  /* https://developer.github.com/webhooks/event-payloads/#team */\n  app.on(\n    ['team.created', 'team.deleted', 'team.edited'],\n    createHandlerOrgChange<Webhooks.WebhookPayloadTeam>(\n      mongoStores,\n      async (context, orgContext) => {\n        await syncTeams(\n          mongoStores,\n          context.github,\n          context.payload.organization,\n        );\n      },\n    ),\n  );\n\n  // /* https://developer.github.com/webhooks/event-payloads/#membership */\n  // app.on(\n  //   ['membership.added', 'membership.removed'],\n  //   createHandlerOrgChange<Webhooks.WebhookPayloadMembership>(\n  //     mongoStores,\n  //     async (context, orgContext) => {\n  //       await syncTeamMembers(\n  //         mongoStores,\n  //         context.github,\n  //         context.payload.organization,\n  //         context.payload.team,\n  //       );\n  //     },\n  //   ),\n  // );\n\n  // PR\n  /* https://developer.github.com/webhooks/event-payloads/#pull_request */\n  openedHandler(app, mongoStores);\n  editedHandler(app, mongoStores);\n  closedHandler(app, mongoStores);\n  reopenedHandler(app, mongoStores);\n\n  reviewRequestedHandler(app, mongoStores);\n  reviewRequestRemovedHandler(app, mongoStores);\n  reviewSubmittedHandler(app, mongoStores);\n  reviewDismissedHandler(app, mongoStores);\n  labelsChanged(app, mongoStores);\n  synchronizeHandler(app, mongoStores);\n\n  /* https://developer.github.com/webhooks/event-payloads/#pull_request_review_comment */\n  comment(app, mongoStores);\n\n  /* https://developer.github.com/webhooks/event-payloads/#check_run */\n  checkrunCompleted(app, mongoStores);\n\n  /* https://developer.github.com/webhooks/event-payloads/#check_suite */\n  checksuiteCompleted(app, mongoStores);\n\n  /* https://developer.github.com/webhooks/event-payloads/#status */\n  status(app, mongoStores);\n}\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\nimport initApp from './initApp';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application): void => {\n  const mongoStores = mongoInit();\n  appRouter(app, mongoStores);\n  initApp(app, mongoStores);\n});\n"],"names":["process","env","MONGO_DB","Error","init","config","Map","MONGO_HOST","MONGO_PORT","MONGO_USER","set","MONGO_PASSWORD","connection","MongoConnection","userDmSettings","MongoStore","collection","then","coll","createIndex","userId","orgId","unique","users","login","orgs","orgMembers","orgTeams","Layout","lang","title","REVIEWFLOW_NAME","children","padding","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","create","client","id","secret","auth","tokenHost","tokenPath","authorizePath","AUTH_SECRET_KEY","signPromisified","promisify","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","strategy","host","hostname","PORT","readAuthCookie","cookie","cookies","algorithm","audience","headers","getAuthInfoFromCookie","res","authInfo","clearCookie","undefined","getUser","redirect","api","Octokit","accessToken","router","get","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error","send","error_description","code","result","getToken","renderToStaticMarkup","access_token","octokit","user","getAuthenticated","data","time","Date","now","console","log","token","expiresIn","httpOnly","repository","repos","list","per_page","map","repo","owner","name","length","params","status","permissions","admin","data2","apps","getRepoInstallation","catch","err","home","listForAuthenticatedUser","display","flexGrow","org","syncTeams","mongoStores","github","orgEmbed","teamIds","paginate","teams","endpoint","merge","done","Promise","all","team","push","upsertOne","_id","slug","description","deleteMany","$not","$in","syncOrg","orgInStore","memberIds","listMembers","member","type","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","groups","waitForGroups","labels","color","review","ci","inProgress","succeeded","failed","ignoreRepoPattern","regExp","summary","bot","statusInfoFromMatch","match","issue","inBody","url","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","CamilSadiki","busser","abarreir","arthurflachs","damienorny","darame07","Pixy","Radyum","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","vlbr","mdcarter","ChibiBlasphem","design","jperriere","CoralineColasse","Lenamari","ops","logins","backends","frontends","duplicate","documentation","rfc","bug","enhancement","question","wontfix","needsReview","requested","changesRequested","approved","tilap","orgsConfigs","ornikar","reviewflow","defaultDmSettings","cache","getDefaultDmSettings","orgConfig","defaultConfig","updateCache","newSettings","orgCache","getUserDmSettings","orgDefaultDmSettings","userDmSettingsConfig","findOne","settings","dmMessages","orgSettings","find","o","installation","getOrgInstallation","width","Object","entries","key","__html","patch","bodyParser","json","body","updateOne","$set","value","updated","$setOnInsert","created","upsert","userSettings","getUserInstallation","username","appRouter","app","route","use","cookieParser","options","optionsRegexps","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","reduce","acc","exec","parseBody","reviewFlowCol","reviewflowContent","ending","reviewFlowColMatch","reviewflowContentCol","reviewflowContentColPrefix","reviewflowContentColSuffix","parseBodyWithOptions","parsedBody","breakingChanges","replace","trim","hasLabelInPR","prLabels","some","l","hasFailedStatusOrChecks","pr","context","checks","listForRef","ref","head","sha","failedChecks","check_runs","filter","check","conclusion","info","combinedStatus","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossible","repoContext","autoMergeLabel","debug","prId","prNumber","number","removePrFromAutomergeQueue","createMergeLockPrFromPr","branch","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","pushAutomergeQueue","addMergeLockPr","mergeable","prResult","pulls","pull_number","merged","mergeable_state","reschedule","startsWith","includes","renovateRebaseBody","issues","update","issue_number","base","mergeResult","merge_method","commit_title","commit_message","Boolean","message","ExcludesFalsy","getLabelsForRepo","listLabelsForRepo","initRepoLabels","finalLabels","labelKey","labelConfig","labelColor","slice","existingLabel","createLabel","current_name","updateLabel","getKeys","keys","contextIssue","object","payload","pull_request","contextPr","voidTeamSlack","mention","link","postMessage","resolve","prLink","initTeamSlack","slackToken","githubLoginToSlackEmail","groupName","assign","slackEmails","values","slackClient","WebClient","members","page","forEach","email","profile","im","open","channel","membersMap","getUserFromGithubLogin","githubLogin","category","githubId","DRY_RUN","chat","text","blocks","attachments","secondaryBlocks","thread_ts","ts","ok","html_url","getOrCreateOrg","orgInfo","findByKey","initTeamContext","slackPromise","githubLoginToGroup","githubLoginToTeams","teamName","getReviewerGroups","githubLogins","Set","lock","Lock","callback","reject","logInfos","createReleaseCallback","release","getReviewerGroup","getTeamsForLogin","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","group","slack","orgContextsPromise","orgContexts","obtainOrgContext","existingTeamContext","existingPromise","promise","orgContext","delete","initRepoContext","reviewGroupNames","needsReviewLabelIds","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","prNumberOrPrNumbers","setTimeout","String","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","p","repoContextsPromise","repoContexts","shouldIgnoreRepo","repoName","ignoreRepoRegexp","test","obtainRepoContext","existingRepoContext","warn","handlerPullRequestChange","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","addAssignees","cleanTitle","s","arg1","arg2","toUpperCase","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","getReplacement","updateBody","updateOptions","parsed","infosAndCommitNotesParagraph","updatedOptions","updateBodyCommitsNotes","commitNotes","reviewflowContentColReplaced","updatePrIfNeeded","hasDiffInTitle","hasDiffInBody","diff","syncLabel","shouldHaveLabel","prHasLabel","onRemove","onAdd","removeLabel","response","addLabels","createStatus","target_url","editOpenedPR","previousSha","skipAutoMerge","isPrFromBot","errorRule","rule","date","toISOString","hasLintPrCheck","head_sha","started_at","completed_at","output","featureBranchLabel","automergeLabel","skipCiLabel","prHasFeatureBranchLabel","prHasSkipCiLabel","prHasAutoMergeLabel","defaultOptions","addStatusCheck","hasPrCheck","created_at","updateStatusCheckFromLabels","createFailedStatusCheck","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","existing","size","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","readCommitsAndUpdateInfos","commits","listCommits","conventionalCommits","c","parse","commit","breakingChangesCommits","index","breakingChangesNotes","notes","note","breakingChangesLabel","newBody","opened","on","fromRenovate","closed","git","deleteRef","postSlackMessageWithSecondaryBlock","userLogin","secondaryBlockText","listReviews","reviews","issueParser","actions","issuePrefixes","parseMentions","mentions","m","getDiscussion","comment","in_reply_to_id","listComments","getMentions","discussion","getUsersInThread","userIds","has","prComment","commentByOwner","reviewers","followers","usersInThread","u","f","prUrl","ownerMention","commentLink","createMessage","toOwner","ownerPart","follower","findAll","reviewRequested","sender","reviewer","requested_reviewer","hasChangesRequestedInReviews","reviewRequestRemoved","hasRequestedReviewsForGroup","hasApprovedInReviews","reviewSubmitted","reviewByOwner","newLabels","reviewDismissed","synchronize","before","edited","updatePrBody","labelsChanged","autoMergeSkipCiLabel","action","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","handlerOrgChange","organization","createHandlerOrgChange","initApp","openedHandler","editedHandler","closedHandler","reopenedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchronizeHandler","Probot","run","mongoInit"],"mappings":"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"}