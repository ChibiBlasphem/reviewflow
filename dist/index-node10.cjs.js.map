{"version":3,"file":"index-node10.cjs.js","sources":["../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/app/auth.tsx","../src/app/repository.tsx","../src/app/home.tsx","../src/events/account-handlers/actions/syncTeams.ts","../src/events/account-handlers/actions/syncOrg.ts","../src/accountConfigs/defaultConfig.ts","../src/accountConfigs/ornikar.ts","../src/accountConfigs/christophehurpeau.ts","../src/accountConfigs/reviewflow.ts","../src/accountConfigs/index.ts","../src/dm/defaultDmSettings.ts","../src/dm/getUserDmSettings.ts","../src/app/org-settings.tsx","../src/events/account-handlers/actions/syncUser.ts","../src/app/user-settings.tsx","../src/appRouter.tsx","../src/events/pr-handlers/utils/fetchPr.ts","../src/events/pr-handlers/actions/utils/body/prOptions.ts","../src/events/pr-handlers/actions/utils/body/parseBody.ts","../src/events/pr-handlers/actions/utils/body/updateBody.ts","../src/events/pr-handlers/utils/reviewflowComment.ts","../src/events/pr-handlers/utils/createPullRequestContext.ts","../src/events/pr-handlers/actions/utils/hasLabelInPR.ts","../src/events/pr-handlers/actions/autoMergeIfPossible.ts","../src/utils/ExcludesFalsy.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/voidTeamSlack.ts","../src/context/initTeamSlack.ts","../src/context/getOrCreateAccount.ts","../src/context/accountContext.ts","../src/context/repoContext.ts","../src/events/repository-handlers/utils/createRepoHandler.ts","../src/events/pr-handlers/utils/createPullRequestHandler.ts","../src/events/pr-handlers/actions/autoAssignPRToCreator.ts","../src/events/pr-handlers/actions/utils/cleanTitle.ts","../src/events/pr-handlers/actions/updatePr.ts","../src/events/pr-handlers/actions/utils/createStatus.ts","../src/events/pr-handlers/actions/utils/syncLabel.ts","../src/events/pr-handlers/actions/syncLabelsAfterCommentBodyEdited.ts","../src/events/pr-handlers/actions/readCommitsAndUpdateInfos.ts","../src/events/pr-handlers/actions/editOpenedPR.ts","../src/events/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/events/pr-handlers/actions/updateReviewStatus.ts","../src/events/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/events/pr-handlers/opened.ts","../src/events/pr-handlers/closed.ts","../src/events/pr-handlers/reopened.ts","../src/slack/utils.ts","../src/events/pr-handlers/utils/createSlackMessageWithSecondaryBlock.ts","../src/events/pr-handlers/utils/getReviewersAndReviewStates.ts","../src/events/pr-handlers/utils/parseMentions.ts","../src/events/pr-handlers/utils/getPullRequestFromPayload.ts","../src/events/pr-handlers/utils/isBotUser.ts","../src/events/pr-handlers/commentCreated.ts","../src/events/pr-handlers/commentEditedOrDeleted.ts","../src/events/pr-handlers/reviewRequested.ts","../src/events/pr-handlers/reviewRequestRemoved.ts","../src/events/pr-handlers/reviewSubmitted.ts","../src/events/pr-handlers/reviewDismissed.ts","../src/events/pr-handlers/synchronize.ts","../src/events/pr-handlers/edited.ts","../src/events/pr-handlers/actions/updatePrCommentBody.ts","../src/events/pr-handlers/labelsChanged.ts","../src/events/pr-handlers/checkrunCompleted.ts","../src/events/pr-handlers/checksuiteCompleted.ts","../src/events/pr-handlers/status.ts","../src/events/account-handlers/utils/handler.ts","../src/events/repository-handlers/repoEdited.ts","../src/initApp.ts","../src/slack/home.ts","../src/index.ts"],"sourcesContent":["import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { SlackMessage } from './context/SlackMessage';\nimport { MessageCategory } from './dm/MessageCategory';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport type AccountType = 'Organization' | 'User';\n\nexport interface AccountEmbed {\n  id: number;\n  login: string;\n  type: AccountType;\n}\n\ninterface RepoEmbed {\n  id: number;\n  name: string;\n}\n\ninterface PrEmbed {\n  number: number;\n}\n\ntype AccountEmbedWithoutType = Omit<AccountEmbed, 'type'>;\n\nexport interface UserDmSettings extends MongoModel {\n  userId: number;\n  orgId: number;\n  settings: Record<MessageCategory, boolean>;\n}\n\n// TODO _id is number\ninterface BaseAccount extends MongoModel {\n  login: string;\n  installationId?: number;\n}\n\nexport interface User extends BaseAccount {\n  type: string;\n}\n\nexport interface Org extends BaseAccount {\n  slackToken?: string;\n}\n\nexport interface OrgMember extends MongoModel {\n  org: AccountEmbedWithoutType;\n  user: AccountEmbedWithoutType;\n  slack?: { id: string };\n}\n\nexport interface OrgTeam extends MongoModel {\n  org: AccountEmbedWithoutType;\n  name: string;\n  slug: string;\n  description: string;\n}\n\nexport type SlackMessageType =\n  | 'review-comment'\n  | 'issue-comment'\n  | 'review-submitted'\n  | 'review-requested';\n\nexport interface SlackSentMessage extends MongoModel {\n  type: SlackMessageType;\n  typeId: number;\n  account: AccountEmbed;\n  message: SlackMessage;\n  sentTo: {\n    channel: string;\n    ts: string;\n  }[];\n}\n\nexport interface AutomergeLog extends MongoModel {\n  account: AccountEmbed;\n  repoFullName: string;\n  pr: {\n    id: number;\n    number: number;\n    isRenovate: boolean;\n    mergeableState: string;\n  };\n  type:\n    | 'rebase-renovate'\n    | 'unknown mergeable_state'\n    | 'blocked mergeable_state'\n    | 'behind mergeable_state'\n    | 'not mergeable'\n    | 'failed status or checks'\n    | 'already merged';\n  action: 'remove' | 'reschedule' | 'wait' | 'update branch';\n}\n\nexport interface ReviewflowPr extends MongoModel {\n  account: AccountEmbed;\n  repo: RepoEmbed;\n  pr: PrEmbed;\n  commentId: number;\n}\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  userDmSettings: MongoStore<UserDmSettings>;\n  users: MongoStore<User>;\n  orgs: MongoStore<Org>;\n  orgMembers: MongoStore<OrgMember>;\n  orgTeams: MongoStore<OrgTeam>;\n  slackSentMessages: MongoStore<SlackSentMessage>;\n  automergeLogs: MongoStore<AutomergeLog>;\n  prs: MongoStore<ReviewflowPr>;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const config = new Map([\n    ['host', process.env.MONGO_HOST || 'localhost'],\n    ['port', process.env.MONGO_PORT || '27017'],\n    ['database', process.env.MONGO_DB as string],\n  ]);\n  if (process.env.MONGO_USER) {\n    config.set('user', process.env.MONGO_USER);\n    config.set('password', process.env.MONGO_PASSWORD as string);\n  }\n  const connection = new MongoConnection(config);\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  const userDmSettings = new MongoStore<UserDmSettings>(\n    connection,\n    'userDmSettings',\n  );\n  userDmSettings.collection.then((coll) => {\n    coll.createIndex({ userId: 1, orgId: 1 }, { unique: true });\n  });\n\n  const users = new MongoStore<User>(connection, 'users');\n  users.collection.then((coll) => {\n    coll.createIndex({ login: 1 }, { unique: true });\n  });\n\n  const orgs = new MongoStore<Org>(connection, 'orgs');\n  orgs.collection.then((coll) => {\n    coll.createIndex({ login: 1 }, { unique: true });\n  });\n\n  const orgMembers = new MongoStore<OrgMember>(connection, 'orgMembers');\n  orgMembers.collection.then((coll) => {\n    coll.createIndex({ 'user.id': 1, 'org.id': 1 }, { unique: true });\n  });\n\n  const orgTeams = new MongoStore<OrgTeam>(connection, 'orgTeams');\n  orgTeams.collection.then((coll) => {\n    coll.createIndex({ 'org.id': 1 });\n  });\n\n  const slackSentMessages = new MongoStore<SlackSentMessage>(\n    connection,\n    'slackSentMessages',\n  );\n  slackSentMessages.collection.then((coll) => {\n    coll.createIndex({\n      'account.id': 1,\n      'account.type': 1,\n      type: 1,\n      typeId: 1,\n    });\n    // remove older than 14 days\n    coll.deleteMany({\n      created: { $lt: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000) },\n    });\n  });\n\n  const automergeLogs = new MongoStore<AutomergeLog>(\n    connection,\n    'automergeLogs',\n  );\n  automergeLogs.collection.then((coll) => {\n    coll.createIndex({\n      repoFullName: 1,\n      type: 1,\n    });\n    coll.createIndex({\n      repoFullName: 1,\n      'pr.number': 1,\n    });\n    // remove older than 30 days\n    coll.deleteMany({\n      created: { $lt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000) },\n    });\n  });\n\n  const prs = new MongoStore<ReviewflowPr>(connection, 'prs');\n  prs.collection.then((coll) => {\n    coll.createIndex(\n      {\n        'account.id': 1,\n        'repo.id': 1,\n        'pr.number': 1,\n      },\n      { unique: true },\n    );\n    // remove older than 12 * 30 days\n    coll.deleteMany({\n      created: { $lt: new Date(Date.now() - 12 * 30 * 24 * 60 * 60 * 1000) },\n    });\n  });\n\n  // return { connection, prEvents };\n  return {\n    connection,\n    userDmSettings,\n    users,\n    orgs,\n    orgMembers,\n    orgTeams,\n    slackSentMessages,\n    automergeLogs,\n    prs,\n  };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.REVIEWFLOW_NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>\n        <div style={{ padding: '24px 48px' }}>{children}</div>\n      </body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { promisify } from 'util';\nimport { Octokit } from 'probot';\nimport type { Router, Request, Response } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { sign, verify } from 'jsonwebtoken';\nimport * as githubAuth from '../auth/github';\nimport Layout from '../views/Layout';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request): string => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/app/login-response`;\n};\n\ninterface AuthInfo {\n  id: number;\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nconst getAuthInfoFromCookie = async (\n  req: Request,\n  res: Response,\n): Promise<undefined | AuthInfo> => {\n  const strategy = 'gh'; // req.params.strategy\n  const authInfo = await readAuthCookie(req, strategy);\n\n  if (authInfo?.id) {\n    return authInfo;\n  }\n\n  res.clearCookie(`auth_${strategy}`);\n  return undefined;\n};\n\nexport const getUser = async (\n  req: Request,\n  res: Response,\n): Promise<{ authInfo: AuthInfo; api: Octokit } | null> => {\n  const authInfo = await getAuthInfoFromCookie(req, res);\n  if (!authInfo) {\n    res.redirect('/app/login');\n    return null;\n  }\n\n  return {\n    authInfo,\n    api: new Octokit({ auth: `token ${authInfo.accessToken}` }),\n  };\n};\n\nexport default function auth(router: Router): void {\n  router.get('/login', async (req: Request, res: Response) => {\n    if (await getAuthInfoFromCookie(req, res)) {\n      return res.redirect('/app');\n    }\n\n    // const state = await randomHex(8);\n    // res.cookie(`auth_${strategy}_${state}`, strategy, {\n    //   maxAge: 10 * 60 * 1000,\n    //   httpOnly: true,\n    //   secure,\n    // });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req),\n      scope: 'read:user,repo',\n      // state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code: string = req.query.code as string;\n    // const state = req.query.state;\n    // const cookieName = `auth_${strategy}_${state}`;\n    // const cookie = req.cookies && req.cookies[cookieName];\n    // if (!cookie) {\n    //   // res.redirect(`/${strategy}/login`);\n    //   res.send(\n    //     '<html><body>No cookie for this state. <a href=\"/app/login\">Retry ?</a></body></html>',\n    //   );\n    //   return;\n    // }\n    // res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req),\n    });\n\n    if (!result) {\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/app/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const id = user.data.id;\n    const login = user.data.login;\n\n    const authInfo: AuthInfo = { id, login, accessToken, time: Date.now() };\n    const token = await signPromisified(authInfo, AUTH_SECRET_KEY, {\n      algorithm: 'HS512',\n      audience: req.headers['user-agent'],\n      expiresIn: '10 days',\n    });\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/app');\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function repository(router: Router, api: GitHubAPI): void {\n  router.get('/repositories', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n    const { data } = await user.api.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a href={`/app/repository/${repo.owner.login}/${repo.name}`}>\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n\n            {data.length === 100 && (\n              <div>We currently have a limit to 100 repositories</div>\n            )}\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/repository/:owner/:repository', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n    const { data } = await user.api.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    if (!data.permissions.admin) {\n      res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed on this repo. Go to \"}\n              <a\n                href={`https://github.com/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function home(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h1>{process.env.REVIEWFLOW_NAME}</h1>\n            <div style={{ display: 'flex' }}>\n              <div style={{ flexGrow: 1 }}>\n                <h4>Choose your account</h4>\n                <ul>\n                  <li>\n                    <a href=\"/app/user\">{user.authInfo.login}</a>\n                  </li>\n                  {orgs.data.map((org) => (\n                    <li key={org.id}>\n                      <a href={`/app/org/${org.login}`}>{org.login}</a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import { Octokit } from 'probot';\nimport { MongoStores } from '../../../mongo';\n\nexport const syncTeams = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  org: { login: string; id: number },\n): Promise<void> => {\n  const orgEmbed = { id: org.id, login: org.login };\n\n  const teamIds: number[] = [];\n\n  await Promise.all(\n    await github.paginate(\n      github.teams.list.endpoint.merge({\n        org: org.login,\n      }),\n      ({ data }: Octokit.Response<Octokit.TeamsListResponse>) => {\n        return Promise.all(\n          data.map((team) => {\n            teamIds.push(team.id);\n            return mongoStores.orgTeams.upsertOne({\n              _id: team.id as any, // TODO _id number\n              org: orgEmbed,\n              name: team.name,\n              slug: team.slug,\n              description: team.description,\n            });\n          }),\n        );\n      },\n    ),\n  );\n\n  await mongoStores.orgTeams.deleteMany({\n    'org.id': org.id,\n    _id: { $not: { $in: teamIds } },\n  });\n};\n","import { Octokit } from 'probot';\nimport { MongoStores, Org } from '../../../mongo';\n\ninterface OrgInfo {\n  login: string;\n  id: number;\n}\n\nexport const syncOrg = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  installationId: number,\n  org: OrgInfo,\n): Promise<Org> => {\n  const orgInStore = await mongoStores.orgs.upsertOne({\n    _id: org.id as any, // TODO _id is number\n    login: org.login,\n    installationId,\n  });\n\n  const orgEmbed = { id: org.id, login: org.login };\n\n  const memberIds: number[] = [];\n\n  await Promise.all(\n    await github.paginate(\n      github.orgs.listMembers.endpoint.merge({\n        org: org.login,\n      }),\n      ({ data }: Octokit.Response<Octokit.OrgsListMembersResponse>) => {\n        return Promise.all(\n          data.map(async (member) => {\n            memberIds.push(member.id);\n            return Promise.all([\n              mongoStores.orgMembers.upsertOne({\n                _id: `${org.id}_${member.id}`,\n                org: orgEmbed,\n                user: {\n                  id: member.id,\n                  login: member.login,\n                },\n              }),\n              mongoStores.users.upsertOne({\n                _id: member.id as any,\n                login: member.login,\n                type: member.type,\n              }),\n            ]);\n          }),\n        );\n      },\n    ),\n  );\n\n  await mongoStores.orgMembers.deleteMany({\n    'org.id': org.id,\n    'user.id': { $not: { $in: memberIds } },\n  });\n\n  return orgInStore;\n};\n","import { Config } from './types';\n\nconst config: Config<never, never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [],\n  },\n  groups: {},\n  waitForGroups: {},\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'ops' | 'frontends' | 'backends'> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  ignoreRepoPattern: '(infra-.*|devenv)',\n  requiresReviewRequest: true,\n  autoMergeRenovateWithSkipCi: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z][\\dA-Z]+-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  botUsers: ['michael-robot'],\n\n  groups: {\n    dev: {\n      /* ops */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Alan-pad': null,\n      CamilSadiki: null,\n      busser: null,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Radyum: `romain.reynaud${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'budet-b': `benjamin.budet${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      mdcarter: `maxime.dehaye${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      ChibiBlasphem: `christopher${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Lenamari: `lena${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'AlexisRiols-Ornikar': `alexis.riols${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    ops: {\n      logins: ['JulienBreux', 'Alan-pad', 'CamilSadiki', 'busser'],\n      labels: ['teams/ops'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n        'Radyum',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'vlbr',\n        'budet-b',\n        'mdcarter',\n        'ChibiBlasphem',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/ops': {\n        name: 'ops',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        description: 'This issue or pull request will need a new major version',\n        color: '#FF6F00',\n      },\n      duplicate: {\n        name: 'duplicate',\n        description: 'This issue or pull request already exists',\n        color: '#ECEFF1',\n      },\n      documentation: {\n        name: 'documentation',\n        description: 'Improvements or additions to documentation',\n        color: '#7FCEFF',\n      },\n      rfc: {\n        name: 'RFC',\n        description: 'Request For Comments',\n        color: '#FFD3B2',\n      },\n      bug: {\n        name: 'bug',\n        description: \"Something isn't working\",\n        color: '#FF3D00',\n      },\n      enhancement: {\n        name: 'enhancement',\n        description: 'New feature or request',\n        color: '#7FCEFF',\n      },\n      'help-wanted': {\n        name: 'help wanted',\n        description: 'Extra attention is needed',\n        color: '#B1EE8B',\n      },\n      question: {\n        name: 'question',\n        description: 'Further information is requested',\n        color: '#F860A4',\n      },\n      wontfix: {\n        name: 'wontfix',\n        description: 'This will not be worked on',\n        color: '#ECEFF1',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([/a-z-]*)\\))?(!)?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n\n      /* infos */\n      'breaking-changes': {\n        name: ':warning: Breaking Changes',\n        color: '#ef7934',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\nimport chrisconfig from './christophehurpeau';\n\nconst config: Config<'dev', never> = {\n  ...chrisconfig,\n  requiresReviewRequest: true,\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n    },\n  },\n};\nexport default config;\n","import { Config as ConfigType } from './types';\nimport defaultConfig from './defaultConfig';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\nimport reviewflow from './reviewflow';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const accountConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n  reviewflow,\n};\n\nexport { defaultConfig };\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","import { MessageCategory } from './MessageCategory';\n\nexport const defaultDmSettings: Record<MessageCategory, boolean> = {\n  'pr-review': true,\n  'pr-review-follow': true,\n  'pr-comment': true,\n  'pr-comment-bots': true,\n  'pr-comment-follow': true,\n  'pr-comment-follow-bots': false,\n  'pr-comment-mention': true,\n  'pr-comment-thread': true,\n  'pr-merge-conflicts': true,\n  'issue-comment-mention': true,\n};\n","import { MongoStores } from '../mongo';\nimport { accountConfigs, defaultConfig } from '../accountConfigs';\nimport { MessageCategory } from './MessageCategory';\nimport { defaultDmSettings } from './defaultDmSettings';\n\nexport type UserDmSettings = Record<MessageCategory, boolean>;\nconst cache = new Map<string, Map<number, UserDmSettings>>();\n\nconst getDefaultDmSettings = (org: string): UserDmSettings => {\n  const accountConfig = accountConfigs[org] || defaultConfig;\n  return accountConfig.defaultDmSettings\n    ? { ...defaultDmSettings, ...accountConfig.defaultDmSettings }\n    : defaultDmSettings;\n};\n\nexport const updateCache = (\n  org: string,\n  userId: number,\n  newSettings: Partial<UserDmSettings>,\n): void => {\n  let orgCache = cache.get(org);\n  if (!orgCache) {\n    orgCache = new Map();\n    cache.set(org, orgCache);\n  }\n  orgCache.set(userId, { ...getDefaultDmSettings(org), ...newSettings });\n};\n\nexport const getUserDmSettings = async (\n  mongoStores: MongoStores,\n  org: string,\n  orgId: number,\n  userId: number,\n): Promise<UserDmSettings> => {\n  const orgDefaultDmSettings = getDefaultDmSettings(org);\n\n  const userDmSettingsConfig = await mongoStores.userDmSettings.findOne({\n    orgId,\n    userId,\n  });\n\n  const config = userDmSettingsConfig\n    ? {\n        ...orgDefaultDmSettings,\n        ...userDmSettingsConfig.settings,\n      }\n    : orgDefaultDmSettings;\n\n  updateCache(org, userId, config);\n  return config;\n};\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport bodyParser from 'body-parser';\nimport { syncTeams } from '../events/account-handlers/actions/syncTeams';\nimport { syncOrg } from '../events/account-handlers/actions/syncOrg';\nimport { MessageCategory } from '../dm/MessageCategory';\nimport { getUserDmSettings, updateCache } from '../dm/getUserDmSettings';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { accountConfigs } from '../accountConfigs';\nimport { getUser } from './auth';\n\nconst dmMessages: Record<MessageCategory, string> = {\n  'pr-review': 'You are assigned to a review, someone reviewed your PR',\n  'pr-review-follow': \"Someone reviewed a PR you're also reviewing\",\n  'pr-comment': 'Someone commented on your PR',\n  'pr-comment-bots': 'A bot commented on your PR',\n  'pr-comment-follow': \"Someone commented on a PR you're reviewing\",\n  'pr-comment-follow-bots': \"A bot commented on a PR you're reviewing\",\n  'pr-comment-mention': 'Someone mentioned you in a PR',\n  'pr-comment-thread': \"Someone replied to a discussion you're in\",\n  'pr-merge-conflicts': 'Your PR has a merge conflict (not implemented)',\n  'issue-comment-mention':\n    'Someone mentioned you in an issue (not implemented)',\n};\n\nexport default function orgSettings(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/org/:org/force-sync', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    const o = await mongoStores.orgs.findByKey(org.id);\n    if (!o) return res.redirect('/app');\n\n    await syncOrg(mongoStores, user.api, o.installationId as number, org);\n    await syncTeams(mongoStores, user.api, org);\n\n    res.redirect(`/app/org/${req.params.org}`);\n  });\n\n  router.get('/org/:org', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    const installation = await api.apps\n      .getOrgInstallation({ org: org.login })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!installation) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed for this user. Go to \"}\n              <a\n                href={`https://github.com/settings/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to install it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const accountConfig = accountConfigs[org.login];\n    const userDmSettings = await getUserDmSettings(\n      mongoStores,\n      org.login,\n      org.id,\n      user.authInfo.id,\n    );\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h1>{process.env.REVIEWFLOW_NAME}</h1>\n            <div style={{ display: 'flex' }}>\n              <h2 style={{ flexGrow: 1 }}>{org.login}</h2>\n              <a href=\"/app\">Switch account</a>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n              <div style={{ flexGrow: 1 }}>\n                <h4>Information</h4>\n                {!accountConfig\n                  ? 'Default config is used: https://github.com/christophehurpeau/reviewflow/blob/master/src/accountConfigs/defaultConfig.ts'\n                  : `Custom config: https://github.com/christophehurpeau/reviewflow/blob/master/src/accountConfigs/${org.login}.ts`}\n              </div>\n              <div style={{ width: '380px' }}>\n                <h4>My DM Settings</h4>\n                {Object.entries(dmMessages).map(([key, name]) => (\n                  <div key={key}>\n                    <label htmlFor={key}>\n                      <span\n                        // eslint-disable-next-line react/no-danger\n                        dangerouslySetInnerHTML={{\n                          __html: `<input id=\"${key}\" type=\"checkbox\" autocomplete=\"off\" ${\n                            userDmSettings[key as MessageCategory]\n                              ? 'checked=\"checked\" '\n                              : ''\n                          }onclick=\"fetch(location.pathname, { method: 'PATCH', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ key: '${key}', value: event.currentTarget.checked }) })\" />`,\n                        }}\n                      />\n                      {name}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n\n  router.patch('/org/:org', bodyParser.json(), async (req, res) => {\n    if (!req.body) {\n      res.status(400).send('not ok');\n      return;\n    }\n\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const orgs = await user.api.orgs.listForAuthenticatedUser();\n    const org = orgs.data.find((o) => o.login === req.params.org);\n    if (!org) return res.redirect('/app');\n\n    (await mongoStores.userDmSettings.collection).updateOne(\n      {\n        _id: `${org.id}_${user.authInfo.id}`,\n      },\n      {\n        $set: {\n          [`settings.${req.body.key}`]: req.body.value,\n          updated: new Date(),\n        },\n        $setOnInsert: {\n          orgId: org.id,\n          userId: user.authInfo.id,\n          created: new Date(),\n        },\n      },\n      { upsert: true },\n    );\n\n    const userDmSettingsConfig = await mongoStores.userDmSettings.findOne({\n      orgId: org.id,\n      userId: user.authInfo.id,\n    });\n\n    if (userDmSettingsConfig) {\n      updateCache(org.login, user.authInfo.id, userDmSettingsConfig.settings);\n    }\n\n    res.send('ok');\n  });\n}\n","import { Octokit } from 'probot';\nimport { MongoStores, User } from '../../../mongo';\n\ninterface UserInfo {\n  login: string;\n  id: number;\n}\n\nexport const syncUser = async (\n  mongoStores: MongoStores,\n  github: Octokit,\n  installationId: number,\n  userInfo: UserInfo,\n): Promise<User> => {\n  const user = await mongoStores.users.upsertOne({\n    _id: userInfo.id as any, // TODO _id is number\n    login: userInfo.login,\n    installationId,\n  });\n\n  return user;\n};\n","import type { Router } from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { GitHubAPI } from 'probot/lib/github';\nimport { syncUser } from '../events/account-handlers/actions/syncUser';\nimport type { MongoStores } from '../mongo';\nimport Layout from '../views/Layout';\nimport { getUser } from './auth';\n\nexport default function userSettings(\n  router: Router,\n  api: GitHubAPI,\n  mongoStores: MongoStores,\n): void {\n  router.get('/user/force-sync', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    // const { data: installation } = await api.apps\n    //   .getUserInstallation({\n    //     username: user.authInfo.login,\n    //   })\n    //   .catch((err) => {\n    //     return { status: err.status, data: undefined };\n    //   });\n\n    // console.log(installation);\n\n    const u = await mongoStores.users.findByKey(user.authInfo.id);\n    if (!u || !u.installationId) return res.redirect('/app');\n\n    await syncUser(\n      mongoStores,\n      user.api,\n      u.installationId as number,\n      user.authInfo,\n    );\n\n    res.redirect(`/app/user`);\n  });\n\n  router.get('/user', async (req, res) => {\n    const user = await getUser(req, res);\n    if (!user) return;\n\n    const { data: installation } = await api.apps\n      .getUserInstallation({\n        username: user.authInfo.login,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!installation) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME}{' '}\n              {\"isn't installed for this user. Go to \"}\n              <a\n                href={`https://github.com/settings/apps/${process.env.REVIEWFLOW_NAME}/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to install it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    return res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>{process.env.REVIEWFLOW_NAME} is installed for this user</div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import { Application } from 'probot';\nimport cookieParser from 'cookie-parser';\nimport { AppContext } from './context/AppContext';\nimport repository from './app/repository';\nimport auth from './app/auth';\nimport home from './app/home';\nimport orgSettings from './app/org-settings';\nimport userSettings from './app/user-settings';\n\nexport default async function appRouter(\n  app: Application,\n  { mongoStores }: AppContext,\n): Promise<void> {\n  const router = app.route('/app');\n  const api = await app.auth();\n\n  router.use(cookieParser());\n\n  auth(router);\n  repository(router, api);\n  home(router, api, mongoStores);\n  orgSettings(router, api, mongoStores);\n  userSettings(router, api, mongoStores);\n}\n","import { Context, Octokit } from 'probot';\n\nexport const fetchPr = async (\n  context: Context<any>,\n  prNumber: number,\n): Promise<Octokit.PullsGetResponse> => {\n  const prResult = await context.github.pulls.get(\n    context.repo({ pull_number: prNumber }),\n  );\n\n  return prResult.data;\n};\n","export type Options = Record<OptionsKeys, boolean>;\n\nexport type OptionsKeys =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: OptionsKeys[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: {\n  key: OptionsKeys;\n  regexp: RegExp;\n}[] = options.map((option) => ({\n  key: option,\n  regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n}));\n\nexport const optionsLabels: { key: OptionsKeys; label: string }[] = [\n  { key: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    key: 'autoMergeWithSkipCi',\n    label: 'Add `[skip ci]` on merge commit',\n  },\n  {\n    key: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    key: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { optionsRegexps } from './prOptions';\nimport type { Options } from './prOptions';\n\nexport type { Options } from './prOptions';\n\nexport const parseOptions = (\n  content: string,\n  defaultOptions: Options,\n): Options => {\n  return optionsRegexps.reduce((acc, { key, regexp }) => {\n    const match = regexp.exec(content);\n    acc[key] = !match\n      ? defaultOptions[key] || false\n      : match[1] === 'x' || match[1] === 'X';\n    return acc;\n  }, {} as any) as Options;\n};\n\nexport const parseCommitNotes = (content: string): string => {\n  const commitNotes = content.replace(\n    /^.*#### Commits Notes:(.*)#### Options:.*$/s,\n    '$1',\n  );\n\n  if (commitNotes === content) {\n    return '';\n  } else {\n    return commitNotes.trim();\n  }\n};\n\ninterface ParsedBody {\n  options: Options;\n  commitNotes: string;\n}\n\nexport const parseBody = (\n  content: string,\n  defaultOptions: Options,\n): ParsedBody => {\n  return {\n    options: parseOptions(content, defaultOptions),\n    commitNotes: parseCommitNotes(content),\n  };\n};\n","import { StatusInfo } from 'accountConfigs/types';\nimport { Options, parseOptions } from './parseBody';\nimport { optionsLabels } from './prOptions';\n\nexport const defaultCommentBody = 'This will be auto filled by reviewflow.';\n\nconst toMarkdownOptions = (options: Options) => {\n  return optionsLabels\n    .map(\n      ({ key, label }) =>\n        `- [${options[key] ? 'x' : ' '}] <!-- reviewflow-${key} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]): string => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  commentBody: string;\n  options?: Options;\n}\n\nconst getReplacement = (infos?: StatusInfo[]): string => {\n  if (!infos) return '$1$2';\n  return infos.length !== 0\n    ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n$2`\n    : '$2';\n};\n\nconst updateOptions = (\n  options: Options,\n  optionsToUpdate?: Partial<Options>,\n): Options => {\n  if (!optionsToUpdate) return options;\n  return { ...options, ...optionsToUpdate };\n};\n\nconst internalUpdateBodyOptionsAndInfos = (\n  body: string,\n  options: Options,\n  infos?: StatusInfo[],\n): string => {\n  const infosAndCommitNotesParagraph = body.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^\\s*(?:(#### Infos:.*)?(#### Commits Notes:.*)?#### Options:)?.*$/s,\n    getReplacement(infos),\n  );\n\n  return `${infosAndCommitNotesParagraph}#### Options:\\n${toMarkdownOptions(\n    options,\n  )}`;\n};\n\nexport const createCommentBody = (\n  defaultOptions: Options,\n  infos?: StatusInfo[],\n): string => {\n  return internalUpdateBodyOptionsAndInfos('', defaultOptions, infos);\n};\n\nexport const updateCommentOptions = (\n  commentBody: string,\n  defaultOptions: Options,\n  optionsToUpdate?: Partial<Options>,\n): UpdatedBodyWithOptions => {\n  const options = parseOptions(commentBody, defaultOptions);\n  const updatedOptions = updateOptions(options, optionsToUpdate);\n\n  return {\n    options: updatedOptions,\n    commentBody: internalUpdateBodyOptionsAndInfos(commentBody, updatedOptions),\n  };\n};\n\nexport const updateCommentBodyInfos = (\n  commentBody: string,\n  infos?: StatusInfo[],\n): string => {\n  return commentBody.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^\\s*(?:(#### Infos:.*)?(#### Commits Notes:.*)?(#### Options:.*)?)?$/s,\n    `${getReplacement(infos)}$3`,\n  );\n};\n\nexport const updateCommentBodyCommitsNotes = (\n  commentBody: string,\n  commitNotes?: string,\n): string => {\n  return commentBody.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /(?:#### Commits Notes:.*)?(#### Options:)/s,\n    // eslint-disable-next-line no-nested-ternary\n    !commitNotes ? '$1' : `#### Commits Notes:\\n\\n${commitNotes}\\n\\n$1`,\n  );\n};\n\nexport const removeDeprecatedReviewflowInPrBody = (prBody: string): string => {\n  return prBody.replace(\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    /^(.*)<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->(.*)$/is,\n    // eslint-disable-next-line no-nested-ternary\n    '$1$3',\n  );\n};\n","import { Context, Octokit } from 'probot';\nimport { PullRequestData } from './PullRequestData';\n\nexport const createReviewflowComment = <T, U extends PullRequestData>(\n  context: Context<T>,\n  pr: U,\n  body: string,\n): Promise<Octokit.IssuesCreateCommentResponse> => {\n  return context.github.issues\n    .createComment(context.repo({ issue_number: pr.number, body }))\n    .then(({ data }) => data);\n};\n\nexport const getReviewflowCommentById = <T, U extends PullRequestData>(\n  context: Context<T>,\n  pr: U,\n  commentId: number,\n): Promise<Octokit.IssuesGetCommentResponse | null> => {\n  return context.github.issues\n    .getComment(\n      context.repo({\n        issue_number: pr.number,\n        comment_id: commentId,\n      }),\n    )\n    .then(\n      ({ data }) => data,\n      () => null,\n    );\n};\n","import { Context, Octokit } from 'probot';\nimport { AppContext } from 'context/AppContext';\nimport { ReviewflowPr } from 'mongo';\nimport { RepoContext } from 'context/repoContext';\nimport { defaultCommentBody } from '../actions/utils/body/updateBody';\nimport { fetchPr } from './fetchPr';\nimport { PullRequestData, PullRequestFromWebhook } from './PullRequestData';\nimport {\n  createReviewflowComment,\n  getReviewflowCommentById,\n} from './reviewflowComment';\n\nexport interface PrContext<T extends PullRequestData = PullRequestData> {\n  appContext: AppContext;\n  repoContext: RepoContext;\n  pr: T;\n  updatedPr: null | Octokit.PullsGetResponse;\n  reviewflowPr: ReviewflowPr;\n  commentBody: string;\n}\n\nexport interface PrContextWithUpdatedPr<\n  T extends PullRequestData = PullRequestData\n> extends PrContext<T> {\n  updatedPr: Octokit.PullsGetResponse;\n}\n\nexport interface CreatePrContextOptions {\n  reviewflowCommentPromise?: ReturnType<typeof createReviewflowComment>;\n}\n\nconst getReviewflowPr = async <T, U extends PullRequestData>(\n  appContext: AppContext,\n  repoContext: RepoContext,\n  context: Context<T>,\n  pr: U,\n  reviewflowCommentPromise?: ReturnType<typeof createReviewflowComment>,\n): Promise<{ reviewflowPr: ReviewflowPr; commentBody: string }> => {\n  const prEmbed = { number: pr.number };\n\n  if (reviewflowCommentPromise) {\n    const comment = await reviewflowCommentPromise;\n    const reviewflowPr = await appContext.mongoStores.prs.insertOne({\n      account: repoContext.accountEmbed,\n      repo: repoContext.repoEmbed,\n      pr: prEmbed,\n      commentId: comment.id,\n    });\n    return { reviewflowPr, commentBody: comment.body };\n  }\n\n  const existing = await appContext.mongoStores.prs.findOne({\n    'account.id': repoContext.accountEmbed.id,\n    'repo.id': repoContext.repoEmbed.id,\n    'pr.number': pr.number,\n  });\n  const comment =\n    existing &&\n    (await getReviewflowCommentById(context, pr, existing.commentId));\n\n  if (!comment || !existing) {\n    const comment = await createReviewflowComment(\n      context,\n      pr,\n      defaultCommentBody,\n    );\n\n    if (!existing) {\n      const reviewflowPr = await appContext.mongoStores.prs.insertOne({\n        account: repoContext.accountEmbed,\n        repo: repoContext.repoEmbed,\n        pr: prEmbed,\n        commentId: comment.id,\n      });\n      return { reviewflowPr, commentBody: comment.body };\n    } else {\n      await appContext.mongoStores.prs.partialUpdateByKey(existing._id, {\n        $set: { commentId: comment.id },\n      });\n    }\n  }\n\n  return { reviewflowPr: existing, commentBody: comment!.body };\n};\n\nexport const createPullRequestContextFromWebhook = async <\n  T,\n  U extends PullRequestFromWebhook\n>(\n  appContext: AppContext,\n  repoContext: RepoContext,\n  context: Context<T>,\n  pr: U,\n  options: CreatePrContextOptions,\n): Promise<PrContext<U>> => {\n  const { reviewflowPr, commentBody } = await getReviewflowPr(\n    appContext,\n    repoContext,\n    context,\n    pr,\n    options.reviewflowCommentPromise,\n  );\n\n  return {\n    appContext,\n    repoContext,\n    pr,\n    reviewflowPr,\n    commentBody,\n    updatedPr: null,\n  };\n};\n\nexport const createPullRequestContextFromPullResponse = async <T>(\n  appContext: AppContext,\n  repoContext: RepoContext,\n  context: Context<T>,\n  pr: Octokit.PullsGetResponse,\n  options: CreatePrContextOptions,\n): Promise<PrContextWithUpdatedPr<Octokit.PullsGetResponse>> => {\n  console.log('createPullRequestContextFromPullResponse', pr.number);\n  const { reviewflowPr, commentBody } = await getReviewflowPr(\n    appContext,\n    repoContext,\n    context,\n    pr,\n    options.reviewflowCommentPromise,\n  );\n\n  return {\n    appContext,\n    repoContext,\n    pr,\n    reviewflowPr,\n    commentBody,\n    updatedPr: pr,\n  };\n};\n\nexport const fetchPullRequestAndCreateContext = async <\n  T,\n  U extends PullRequestFromWebhook\n>(\n  context: Context<T>,\n  prContext: PrContext<U>,\n): Promise<PrContextWithUpdatedPr<U>> => {\n  const updatedPr = await fetchPr(context, prContext.pr.number);\n  return {\n    ...prContext,\n    updatedPr,\n  };\n};\n","import { Octokit } from 'probot';\nimport { LabelResponse } from '../../../../context/initRepoLabels';\n\nexport default function hasLabelInPR(\n  prLabels: Octokit.PullsGetResponse['labels'],\n  label: LabelResponse,\n): boolean {\n  if (!label) return false;\n  return prLabels.some((l): boolean => l.id === label.id);\n}\n","import { Context, Octokit } from 'probot';\nimport Webhooks from '@octokit/webhooks';\nimport { AutomergeLog } from 'mongo';\nimport { AppContext } from 'context/AppContext';\nimport { RepoContext } from 'context/repoContext';\nimport { LabelResponse } from 'context/initRepoLabels';\nimport {\n  PrContext,\n  PrContextWithUpdatedPr,\n  createPullRequestContextFromPullResponse,\n} from '../utils/createPullRequestContext';\nimport { PullRequestData } from '../utils/PullRequestData';\nimport { parseBody } from './utils/body/parseBody';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nconst hasFailedStatusOrChecks = async (\n  pr: PullRequestData,\n  context: Context<any>,\n): Promise<boolean> => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossibleOptionalPrContext = async (\n  appContext: AppContext,\n  repoContext: RepoContext,\n  pr:\n    | Octokit.PullsGetResponse\n    | Webhooks.WebhookPayloadPullRequest['pull_request'],\n  context: Context<any>,\n  prContext?:\n    | PrContext<Octokit.PullsGetResponse>\n    | PrContext<Webhooks.WebhookPayloadPullRequest['pull_request']>\n    | PrContextWithUpdatedPr,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n\n  if (!hasLabelInPR(prLabels, autoMergeLabel)) {\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'no automerge label',\n    );\n    return false;\n  }\n\n  const isRenovatePr = pr.head.ref.startsWith('renovate/');\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (pr.state !== 'open') {\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'pr is not opened',\n    );\n  }\n\n  const addLog = (\n    type: AutomergeLog['type'],\n    action: AutomergeLog['action'],\n  ): void => {\n    const repoFullName = pr.head.repo.full_name;\n    context.log.info(`automerge: ${repoFullName}#${pr.id} ${type}`);\n    appContext.mongoStores.automergeLogs.insertOne({\n      account: repoContext.accountEmbed,\n      repoFullName,\n      pr: {\n        id: pr.id,\n        number: pr.number,\n        isRenovate: isRenovatePr,\n        mergeableState: pr.mergeable_state,\n      },\n      type,\n    });\n  };\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'blocking labels',\n    );\n    return false;\n  }\n\n  if (pr.requested_reviewers.length !== 0) {\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'still has requested reviewers',\n    );\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && String(lockedPr.number) !== String(pr.number)) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable == null) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    addLog('already merged', 'remove');\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      'pr already merged',\n    );\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${pr.mergeable_state}`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      addLog('unknown mergeable_state', 'reschedule');\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (isRenovatePr) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        addLog('rebase-renovate', 'wait');\n\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n        if (pr.body.includes('<!-- rebase-check -->')) {\n          if (pr.body.includes('[x] <!-- rebase-check -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- rebase-check -->',\n            '[x] <!-- rebase-check -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              issue_number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        addLog('failed status or checks', 'remove');\n        repoContext.removePrFromAutomergeQueue(\n          context,\n          pr.number,\n          'failed status or checks',\n        );\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        addLog('blocked mergeable_state', 'wait');\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${pr.mergeable_state}`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        addLog('failed status or checks', 'remove');\n        repoContext.removePrFromAutomergeQueue(\n          context,\n          pr.number,\n          'failed status or checks',\n        );\n        return false;\n      } else {\n        addLog('blocked mergeable_state', 'wait');\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      addLog('behind mergeable_state', 'update branch');\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    addLog('not mergeable', 'remove');\n    repoContext.removePrFromAutomergeQueue(\n      context,\n      pr.number,\n      `mergeable_state=${pr.mergeable_state}`,\n    );\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${pr.mergeable_state}`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n    if (!prContext)\n      prContext = await createPullRequestContextFromPullResponse(\n        appContext,\n        repoContext,\n        context,\n        pr,\n        {},\n      );\n\n    const parsedBody = parseBody(\n      prContext.commentBody,\n      repoContext.config.prDefaultOptions,\n    );\n    const options = parsedBody?.options || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: options.featureBranch\n        ? undefined\n        : `${pr.title}${options.autoMergeWithSkipCi ? ' [skip ci]' : ''} (#${\n            pr.number\n          })`,\n      commit_message: options.featureBranch ? undefined : '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number, 'merged');\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n\nexport const autoMergeIfPossible = async (\n  prContext:\n    | PrContext<Octokit.PullsGetResponse>\n    | PrContext<Webhooks.WebhookPayloadPullRequest['pull_request']>\n    | PrContextWithUpdatedPr,\n  context: Context<any>,\n  prLabels?: LabelResponse[],\n): Promise<boolean> => {\n  const pr:\n    | Octokit.PullsGetResponse\n    | Webhooks.WebhookPayloadPullRequest['pull_request'] =\n    prContext.updatedPr ||\n    (prContext as\n      | PrContext<Octokit.PullsGetResponse>\n      | PrContext<Webhooks.WebhookPayloadPullRequest['pull_request']>).pr;\n  return autoMergeIfPossibleOptionalPrContext(\n    prContext.appContext,\n    prContext.repoContext,\n    pr,\n    context,\n    prContext,\n    prLabels,\n  );\n};\n","export const ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n","import { Context, Octokit } from 'probot';\nimport { Config } from '../accountConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const getLabelsForRepo = async (\n  context: Context<any>,\n): Promise<Octokit.IssuesListLabelsForRepoResponse> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  return labels;\n};\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const labels = await getLabelsForRepo(context);\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = labelConfig.description\n      ? `${labelConfig.description} - Synced by reviewflow`\n      : `Synced by reviewflow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n      if (labelKey === 'teams/ops') {\n        existingLabel = labels.find((label) => label.name === 'archi');\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor ||\n      existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","import { Context } from 'probot';\nimport createEmojiRegex from 'emoji-regex';\n\nexport const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n\nexport const contextIssue = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  issue_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    issue_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    issue_number: number;\n  } & T;\n};\n\nexport const contextPr = <T>(\n  context: Context,\n  object?: T,\n): {\n  owner: string;\n  repo: string;\n  pull_number: number;\n} & T => {\n  const payload = context.payload;\n  return context.repo({\n    ...object,\n    pull_number: (payload.issue || payload.pull_request || payload).number,\n  }) as {\n    owner: string;\n    repo: string;\n    pull_number: number;\n  } & T;\n};\n\nconst emojiRegex = createEmojiRegex();\n\nexport const getEmojiFromRepoDescription = (\n  description: string | null,\n): string => {\n  if (!description) return '';\n  if (description.startsWith(':')) {\n    const [, emoji] = /^(:\\w+:)/.exec(description) || [];\n    return emoji || '';\n  }\n  const match = emojiRegex.exec(description);\n  if (match && description.startsWith(match[0])) return match[0];\n  return '';\n};\n","import { TeamSlack } from './TeamSlack';\n\nexport const voidTeamSlack = (): TeamSlack => ({\n  mention: (): string => '',\n  postMessage: (): Promise<null> => Promise.resolve(null),\n  updateMessage: (): Promise<null> => Promise.resolve(null),\n  deleteMessage: (): Promise<undefined> => Promise.resolve(undefined),\n  addReaction: (): Promise<undefined> => Promise.resolve(undefined),\n  updateHome: (): void => undefined,\n});\n","import { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Org, User } from '../mongo';\nimport { getUserDmSettings } from '../dm/getUserDmSettings';\nimport { MessageCategory } from '../dm/MessageCategory';\nimport { Config } from '../accountConfigs';\nimport { getKeys } from './utils';\nimport { AppContext } from './AppContext';\nimport { SlackMessage } from './SlackMessage';\nimport { TeamSlack, PostSlackMessageResult } from './TeamSlack';\nimport { voidTeamSlack } from './voidTeamSlack';\n\nexport type { TeamSlack };\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  { mongoStores, slackHome }: AppContext,\n  context: Context<any>,\n  config: Config<GroupNames>,\n  account: Org | User,\n): Promise<TeamSlack> => {\n  const owner = context.payload.repository.owner;\n\n  if (!(account as Org).slackToken) {\n    return voidTeamSlack();\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackEmails = Object.values(githubLoginToSlackEmail);\n  const slackClient = new WebClient(account.slackToken);\n\n  const membersInDb = await mongoStores.orgMembers.findAll({\n    'org.id': account._id,\n  });\n\n  const members: [string, { member: any; im: any }][] = [];\n  const foundEmailMembers: string[] = [];\n\n  Object.entries(githubLoginToSlackEmail).forEach(([login, email]) => {\n    const member = membersInDb.find((m) => m.user.login === login);\n    if (member?.slack?.id) {\n      foundEmailMembers.push(email);\n      members.push([email, { member: { id: member.slack.id }, im: undefined }]);\n    }\n  });\n\n  if (foundEmailMembers.length !== slackEmails.length) {\n    const missingEmails = slackEmails.filter(\n      (email) => !foundEmailMembers.includes(email),\n    );\n\n    const memberEmailToMemberId = new Map<string, number>(\n      Object.entries(githubLoginToSlackEmail).map(([login, email]) => [\n        email,\n        membersInDb.find((m) => m.user.login === login)?._id as any,\n      ]),\n    );\n\n    await slackClient.paginate('users.list', {}, (page: any) => {\n      page.members.forEach((member: any) => {\n        const email = member.profile && member.profile.email;\n        if (email && missingEmails.includes(email)) {\n          members.push([email, { member, im: undefined }]);\n          if (memberEmailToMemberId.has(email)) {\n            mongoStores.orgMembers.partialUpdateMany(\n              {\n                _id: memberEmailToMemberId.get(email),\n              },\n              { $set: { slack: { id: member.id } } },\n            );\n          }\n        }\n      });\n      return false;\n    });\n  }\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.conversations.open({\n        users: user.member.id,\n      });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string): string => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (\n      category: MessageCategory,\n      githubId: number,\n      githubLogin: string,\n      message: SlackMessage,\n    ): Promise<PostSlackMessageResult> => {\n      context.log.debug('slack: post message', {\n        category,\n        githubLogin,\n        message,\n      });\n      if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return null;\n\n      const userDmSettings = await getUserDmSettings(\n        mongoStores,\n        owner.login,\n        owner.id,\n        githubId,\n      );\n\n      if (!userDmSettings[category]) return null;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return null;\n      const result = await slackClient.chat.postMessage({\n        username: process.env.REVIEWFLOW_NAME,\n        channel: user.im.id,\n        text: message.text,\n        blocks: message.blocks,\n        attachments: message.secondaryBlocks\n          ? [{ blocks: message.secondaryBlocks }]\n          : undefined,\n        thread_ts: message.ts,\n      });\n      if (!result.ok) return null;\n      return { ts: result.ts as string, channel: result.channel as string };\n    },\n    updateMessage: async (\n      ts: string,\n      channel: string,\n      message: SlackMessage,\n    ): Promise<PostSlackMessageResult> => {\n      context.log.debug('slack: update message', { ts, channel, message });\n      if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return null;\n\n      const result = await slackClient.chat.update({\n        ts,\n        channel,\n        text: message.text,\n        blocks: message.blocks,\n        attachments: message.secondaryBlocks\n          ? [{ blocks: message.secondaryBlocks }]\n          : undefined,\n      });\n      if (!result.ok) return null;\n      return { ts: result.ts as string, channel: result.channel as string };\n    },\n    deleteMessage: async (ts: string, channel: string): Promise<void> => {\n      context.log.debug('slack: delete message', { ts, channel });\n      await slackClient.chat.delete({\n        ts,\n        channel,\n      });\n    },\n    addReaction: async (\n      ts: string,\n      channel: string,\n      name: string,\n    ): Promise<void> => {\n      context.log.debug('slack: add reaction', { ts, channel, name });\n      await slackClient.reactions.add({\n        timestamp: ts,\n        channel,\n        name,\n      });\n    },\n\n    updateHome: (githubLogin: string): void => {\n      context.log.debug('update slack home', { githubLogin });\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.member) return;\n\n      slackHome.scheduleUpdateMember(context.github, slackClient, {\n        user: { id: null, login: githubLogin },\n        org: { id: account._id, login: account.login },\n        slack: { id: user.member.id },\n      } as any);\n    },\n  };\n};\n","import { Octokit } from 'probot';\nimport { syncOrg } from '../events/account-handlers/actions/syncOrg';\nimport { syncTeams } from '../events/account-handlers/actions/syncTeams';\nimport { syncUser } from '../events/account-handlers/actions/syncUser';\nimport { Org, User } from '../mongo';\nimport { AppContext } from './AppContext';\n\nexport interface AccountInfo {\n  id: number;\n  login: string;\n  type: string;\n}\n\nexport const getOrCreateAccount = async (\n  { mongoStores }: AppContext,\n  github: Octokit,\n  installationId: number,\n  accountInfo: AccountInfo,\n): Promise<Org | User> => {\n  switch (accountInfo.type) {\n    case 'Organization': {\n      let org = await mongoStores.orgs.findByKey(accountInfo.id);\n      if (org?.installationId) return org;\n\n      // TODO diff org vs user...\n      org = await syncOrg(mongoStores, github, installationId, accountInfo);\n      await syncTeams(mongoStores, github, accountInfo);\n      return org;\n    }\n\n    case 'User': {\n      let user = await mongoStores.users.findByKey(accountInfo.id);\n      if (user?.installationId) return user;\n\n      user = await syncUser(mongoStores, github, installationId, accountInfo);\n      return user;\n    }\n\n    default:\n      throw new Error(`Account type not supported ${accountInfo.type}`);\n  }\n};\n","import { Context } from 'probot';\nimport { Lock } from 'lock';\nimport { Org, User, AccountEmbed, AccountType } from '../mongo';\nimport { Config } from '../accountConfigs';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\nimport { getOrCreateAccount, AccountInfo } from './getOrCreateAccount';\nimport { AppContext } from './AppContext';\n\nexport interface AccountContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  accountType: AccountType;\n  account: Org | User;\n  accountEmbed: AccountEmbed;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => GroupNames | undefined;\n  getReviewerGroups: (githubLogins: string[]) => GroupNames[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  approveShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n\n  lock(callback: () => Promise<void> | void): Promise<void>;\n}\n\nconst initAccountContext = async (\n  appContext: AppContext,\n  context: Context<any>,\n  config: Config,\n  accountInfo: AccountInfo,\n): Promise<AccountContext> => {\n  const account = await getOrCreateAccount(\n    appContext,\n    context.github,\n    context.payload.installation.id,\n    accountInfo,\n  );\n  const slackPromise = initTeamSlack(appContext, context, config, account);\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]): string[] => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(ExcludesFalsy),\n    ),\n  ];\n\n  const lock = Lock();\n\n  return {\n    config,\n    account,\n    accountEmbed: {\n      id: accountInfo.id,\n      login: accountInfo.login,\n      type: accountInfo.type as AccountType,\n    },\n    accountType: accountInfo.type as AccountType,\n    lock: (callback: () => Promise<void> | void): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const logInfos = { account: accountInfo.login };\n        context.log.info('lock: try to lock account', logInfos);\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        lock('_', async (createReleaseCallback) => {\n          const release = createReleaseCallback(() => {});\n          context.log.info('lock: lock account acquired', logInfos);\n          try {\n            await callback();\n          } catch (err) {\n            context.log.info('lock: release account (with error)', logInfos);\n            release();\n            reject(err);\n            return;\n          }\n          context.log.info('lock: release account', logInfos);\n          release();\n          resolve();\n        });\n      });\n    },\n    getReviewerGroup: (githubLogin): string | undefined =>\n      githubLoginToGroup.get(githubLogin),\n    getReviewerGroups,\n\n    getTeamsForLogin: (githubLogin): string[] =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    approveShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ): boolean => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst accountContextsPromise = new Map();\nconst accountContexts = new Map();\n\nexport const obtainAccountContext = (\n  appContext: AppContext,\n  context: Context<any>,\n  config: Config,\n  accountInfo: AccountInfo,\n): Promise<AccountContext> => {\n  const existingAccountContext = accountContexts.get(accountInfo.login);\n  if (existingAccountContext) return existingAccountContext;\n\n  const existingPromise = accountContextsPromise.get(accountInfo.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initAccountContext(appContext, context, config, accountInfo);\n  accountContextsPromise.set(accountInfo.login, promise);\n\n  return promise.then((accountContext) => {\n    accountContextsPromise.delete(accountInfo.login);\n    accountContexts.set(accountInfo.login, accountContext);\n    return accountContext;\n  });\n};\n","import { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { fetchPr } from '../events/pr-handlers/utils/fetchPr';\nimport { accountConfigs, Config, defaultConfig } from '../accountConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossibleOptionalPrContext } from '../events/pr-handlers/actions/autoMergeIfPossible';\nimport { ExcludesFalsy } from '../utils/ExcludesFalsy';\nimport { AppContext } from './AppContext';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainAccountContext, AccountContext } from './accountContext';\nimport { getEmojiFromRepoDescription } from './utils';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  repoFullName: string;\n  repoEmbed: { id: number; name: string };\n  repoEmoji: string | undefined;\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPR(\n    prId: string,\n    prNumber: number,\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(\n    context: Context<any>,\n    prNumber: number,\n    reason: string,\n  ): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nexport type RepoContext<GroupNames extends string = any> = AccountContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  appContext: AppContext,\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const {\n    id,\n    name,\n    full_name: fullName,\n    owner: org,\n    description,\n  } = context.payload.repository;\n  const repoEmoji = getEmojiFromRepoDescription(description);\n\n  const accountContext = await obtainAccountContext(\n    appContext,\n    context,\n    config,\n    org,\n  );\n  const repoContext = Object.create(accountContext);\n\n  const labels = await initRepoLabels(context, config);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPR = (\n    prOPrIssueId: string,\n    prNumber: number,\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      const logInfos = {\n        repo: fullName,\n        prOPrIssueId,\n        prNumber,\n      };\n      context.log.debug('lock: try to lock pr', logInfos);\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      lock(String(prNumber), async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        context.log.info('lock: lock pr acquired', logInfos);\n        try {\n          await callback();\n        } catch (err) {\n          context.log.info('lock: release pr (with error)', logInfos);\n          release();\n          reject(err);\n          return;\n        }\n        context.log.info('lock: release pr', logInfos);\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPR('reschedule', -1, () => {\n        return lockPR(String(pr.id), pr.number, async () => {\n          const updatedPr = await fetchPr(context, pr.number);\n          await autoMergeIfPossibleOptionalPrContext(\n            appContext,\n            repoContext,\n            updatedPr,\n            context,\n          );\n        });\n      });\n    }, 10000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    repoFullName: fullName,\n    repoEmbed: { id, name },\n    repoEmoji,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', {\n        repo: fullName,\n        pr,\n      });\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (\n      context,\n      prNumber: number | string,\n      reason: string,\n    ): void => {\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log(`merge lock: remove ${fullName}#${prNumber}: ${reason}`);\n        context.log(`merge lock: next ${fullName}`, lockMergePr);\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        const previousLength = automergeQueue.length;\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n        if (automergeQueue.length !== previousLength) {\n          context.log(`merge lock: remove ${fullName}#${prNumber}: ${reason}`);\n        }\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      context.log('merge lock: push queue', {\n        repo: fullName,\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPR,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const shouldIgnoreRepo = (\n  repoName: string,\n  accountConfig: Config<any, any>,\n): boolean => {\n  const ignoreRepoRegexp =\n    accountConfig.ignoreRepoPattern &&\n    new RegExp(`^${accountConfig.ignoreRepoPattern}$`);\n\n  if (repoName === 'reviewflow-test') {\n    return process.env.REVIEWFLOW_NAME !== 'reviewflow-dev';\n  }\n\n  if (ignoreRepoRegexp) {\n    return ignoreRepoRegexp.test(repoName);\n  }\n\n  return false;\n};\n\nexport const obtainRepoContext = (\n  appContext: AppContext,\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  const owner = repo.owner;\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  let accountConfig = accountConfigs[owner.login];\n\n  if (!accountConfig) {\n    console.warn(`using default config for ${owner.login}`);\n    accountConfig = defaultConfig as Config<any, any>;\n  }\n\n  if (shouldIgnoreRepo(repo.name, accountConfig)) {\n    console.warn('repo ignored', { owner: repo.owner.login, name: repo.name });\n    return null;\n  }\n\n  const promise = initRepoContext(appContext, context, accountConfig);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import { PayloadRepository } from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { OnCallback } from 'probot/lib/application';\nimport { RepoContext, obtainRepoContext } from 'context/repoContext';\nimport { AppContext } from 'context/AppContext';\n\nexport const createRepoHandler = <T extends { repository: PayloadRepository }>(\n  appContext: AppContext,\n  callback: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => Promise<void> | void,\n): OnCallback<T> => {\n  return async (context): Promise<void> => {\n    const repoContext = await obtainRepoContext(appContext, context);\n    if (!repoContext) return;\n\n    return callback(context, repoContext);\n  };\n};\n","import { Context } from 'probot';\nimport Webhooks from '@octokit/webhooks';\nimport { OnCallback } from 'probot/lib/application';\nimport { createRepoHandler } from '../../repository-handlers/utils/createRepoHandler';\nimport { AppContext } from '../../../context/AppContext';\nimport { RepoContext, LockedMergePr } from '../../../context/repoContext';\nimport {\n  createPullRequestContextFromWebhook,\n  CreatePrContextOptions,\n  PrContext,\n} from './createPullRequestContext';\nimport { PullRequestData, PullRequestFromWebhook } from './PullRequestData';\n\nexport type CallbackWithPRAndRepoContext<T extends PullRequestData> = (\n  prContext: PrContext<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createPullRequestHandler = <\n  T extends { repository: Webhooks.PayloadRepository },\n  U extends PullRequestFromWebhook\n>(\n  appContext: AppContext,\n  getPullRequestInPayload: (\n    payload: Context<T>['payload'],\n    context: Context<T>,\n  ) => U | null,\n  callbackPr: (\n    prContext: PrContext<U>,\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => void | Promise<void>,\n  callbackBeforeLock?: (\n    pullRequest: U,\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => CreatePrContextOptions,\n): OnCallback<T> => {\n  return createRepoHandler(appContext, async (context, repoContext) => {\n    const pullRequest: U | null = getPullRequestInPayload(\n      context.payload,\n      context,\n    );\n    if (pullRequest === null) return;\n    const options = callbackBeforeLock\n      ? callbackBeforeLock(pullRequest, context, repoContext)\n      : {};\n\n    await repoContext.lockPR(\n      String(pullRequest.id),\n      pullRequest.number,\n      async () => {\n        const prContext = await createPullRequestContextFromWebhook<T, U>(\n          appContext,\n          repoContext,\n          context,\n          pullRequest,\n          options,\n        );\n\n        return callbackPr(prContext, context, repoContext);\n      },\n    );\n  });\n};\n\nexport const createPullRequestsHandler = <\n  T extends { repository: Webhooks.PayloadRepository },\n  U extends PullRequestFromWebhook | LockedMergePr\n>(\n  appContext: AppContext,\n  getPrs: (payload: Context<T>['payload'], repoContext: RepoContext) => U[],\n  callbackPr: (\n    pr: U,\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => void | Promise<void>,\n): OnCallback<T> => {\n  return createRepoHandler(appContext, async (context, repoContext) => {\n    const prs = getPrs(context.payload, repoContext);\n    if (prs.length === 0) return;\n\n    await Promise.all(\n      prs.map((pr) =>\n        repoContext.lockPR(String(pr.id), pr.number, async () => {\n          return callbackPr(pr, context, repoContext);\n        }),\n      ),\n    );\n  });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { contextIssue } from '../../../context/utils';\nimport { PrContext } from '../utils/createPullRequestContext';\n\nexport const autoAssignPRToCreator = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  prContext: PrContext<E['pull_request'] | Octokit.PullsGetResponse>,\n  context: Context<E>,\n): Promise<void> => {\n  const { pr, repoContext } = prContext;\n  if (!repoContext.config.autoAssignToCreator) return;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    contextIssue(context, {\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z][\\dA-Za-z]+)[ -](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/i, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { PrContext } from '../utils/createPullRequestContext';\n\ninterface UpdatePr {\n  title?: string;\n  body?: string;\n  commentBody?: string;\n}\n\nconst cleanNewLines = (text: string): string => text.replace(/\\r\\n/g, '\\n');\nconst checkIfHasDiff = (text1: string, text2: string): boolean =>\n  cleanNewLines(text1) !== cleanNewLines(text2);\n\nexport const updatePrIfNeeded = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  prContext: PrContext<E['pull_request'] | Octokit.PullsGetResponse>,\n  context: Context<E>,\n  update: UpdatePr,\n): Promise<void> => {\n  const hasDiffInTitle = update.title && prContext.pr.title !== update.title;\n  const hasDiffInBody =\n    update.body && checkIfHasDiff(prContext.pr.body, update.body);\n  const promises = [];\n\n  if (hasDiffInTitle || hasDiffInBody) {\n    const diff: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      diff.title = update.title;\n      prContext.pr.title = update.title as string;\n    }\n    if (hasDiffInBody) {\n      console.log({\n        diff,\n        originalTitle: prContext.pr.title,\n        originalBody: cleanNewLines(prContext.pr.body),\n        updatedBody: update.body && cleanNewLines(update.body),\n        hasBodyDiff: hasDiffInBody,\n      });\n\n      diff.body = update.body;\n      prContext.pr.body = update.body as string;\n    }\n\n    promises.push(\n      context.github.pulls.update(\n        context.repo({\n          pull_number: prContext.pr.number,\n          ...diff,\n        }),\n      ),\n    );\n  }\n\n  if (\n    update.commentBody &&\n    checkIfHasDiff(prContext.commentBody, update.commentBody)\n  ) {\n    if (update.commentBody.includes('Explain here why this PR')) {\n      throw new Error('Not valid comment body');\n    }\n\n    promises.push(\n      context.github.issues.updateComment(\n        context.repo({\n          comment_id: prContext.reviewflowPr.commentId,\n          body: update.commentBody,\n        }),\n      ),\n    );\n  }\n\n  await Promise.all(promises);\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\n\nexport default async function createStatus<\n  T extends { repository: Webhooks.PayloadRepository }\n>(\n  context: Context<T>,\n  name: string,\n  sha: string,\n  type: 'failure' | 'success',\n  description: string,\n  url?: string,\n): Promise<void> {\n  await context.github.repos.createStatus(\n    context.repo({\n      context:\n        name === ''\n          ? process.env.REVIEWFLOW_NAME\n          : `${process.env.REVIEWFLOW_NAME}/${name}`,\n      sha,\n      state: type,\n      description,\n      target_url: url,\n    }),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../../../context/initRepoLabels';\nimport { contextIssue } from '../../../../context/utils';\nimport hasLabelInPR from './hasLabelInPR';\n\ninterface SyncLabelOptions {\n  onRemove?: () => void | Promise<void>;\n  onAdd?: (prLabels: LabelResponse[]) => void | Promise<void>;\n}\n\nexport default async function syncLabel<\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: Octokit.PullsGetResponse | T['pull_request'],\n  context: Context<T>,\n  shouldHaveLabel: boolean,\n  label: LabelResponse,\n  prHasLabel = hasLabelInPR(pr.labels, label),\n  { onRemove, onAdd }: SyncLabelOptions = {},\n): Promise<void> {\n  if (prHasLabel && !shouldHaveLabel) {\n    await context.github.issues.removeLabel(\n      contextIssue(context, { name: label.name }),\n    );\n    if (onRemove) await onRemove();\n  }\n  if (shouldHaveLabel && !prHasLabel) {\n    const response = await context.github.issues.addLabels(\n      contextIssue(context, { labels: [label.name] }),\n    );\n    if (onAdd) await onAdd(response.data);\n  }\n}\n","import { Octokit, Context } from 'probot';\nimport Webhooks from '@octokit/webhooks';\nimport { RepoContext } from 'context/repoContext';\nimport { AppContext } from 'context/AppContext';\nimport {\n  PrContext,\n  PrContextWithUpdatedPr,\n} from '../utils/createPullRequestContext';\nimport hasLabelInPR from './utils/hasLabelInPR';\nimport syncLabel from './utils/syncLabel';\nimport { updateCommentOptions } from './utils/body/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport { Options } from './utils/body/prOptions';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const calcDefaultOptions = (\n  repoContext: RepoContext,\n  pr:\n    | Octokit.PullsGetResponse\n    | Webhooks.WebhookPayloadPullRequest['pull_request'],\n): Options => {\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = hasLabelInPR(pr.labels, featureBranchLabel);\n  const prHasSkipCiLabel = hasLabelInPR(pr.labels, skipCiLabel);\n  const prHasAutoMergeLabel = hasLabelInPR(pr.labels, automergeLabel);\n\n  return {\n    ...repoContext.config.prDefaultOptions,\n    featureBranch: prHasFeatureBranchLabel,\n    autoMergeWithSkipCi: prHasSkipCiLabel,\n    autoMerge: prHasAutoMergeLabel,\n  };\n};\n\nexport const syncLabelsAfterCommentBodyEdited = async (\n  appContext: AppContext,\n  repoContext: RepoContext,\n  pr:\n    | Octokit.PullsGetResponse\n    | Webhooks.WebhookPayloadPullRequest['pull_request'],\n  context: Context<any>,\n  prContext:\n    | PrContext<Octokit.PullsGetResponse>\n    | PrContext<Webhooks.WebhookPayloadPullRequest['pull_request']>\n    | PrContextWithUpdatedPr,\n): Promise<void> => {\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = hasLabelInPR(pr.labels, featureBranchLabel);\n  const prHasSkipCiLabel = hasLabelInPR(pr.labels, skipCiLabel);\n  const prHasAutoMergeLabel = hasLabelInPR(pr.labels, automergeLabel);\n\n  const { commentBody, options } = updateCommentOptions(\n    prContext.commentBody,\n    calcDefaultOptions(repoContext, pr),\n  );\n\n  await updatePrIfNeeded(prContext, context, { commentBody });\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    await Promise.all([\n      featureBranchLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.featureBranch,\n          featureBranchLabel,\n          prHasFeatureBranchLabel,\n        ),\n      skipCiLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMergeWithSkipCi,\n          skipCiLabel,\n          prHasSkipCiLabel,\n        ),\n      automergeLabel &&\n        syncLabel(\n          pr,\n          context,\n          options.autoMerge,\n          automergeLabel,\n          prHasAutoMergeLabel,\n          {\n            onAdd: async (prLabels) => {\n              await autoMergeIfPossible(prContext, context, prLabels);\n            },\n            onRemove: () => {\n              repoContext.removePrFromAutomergeQueue(\n                context,\n                pr.number,\n                'label removed',\n              );\n            },\n          },\n        ),\n    ]);\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport parse from '@commitlint/parse';\nimport { Context, Octokit } from 'probot';\nimport { contextPr } from '../../../context/utils';\nimport { PrContext } from '../utils/createPullRequestContext';\nimport syncLabel from './utils/syncLabel';\nimport { updateCommentBodyCommitsNotes } from './utils/body/updateBody';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const readCommitsAndUpdateInfos = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  prContext: PrContext<E['pull_request'] | Octokit.PullsGetResponse>,\n  context: Context<E>,\n  commentBody = prContext.commentBody,\n): Promise<void> => {\n  const pr = prContext.updatedPr || prContext.pr;\n  const { repoContext } = prContext;\n  // tmp.data[0].sha\n  // tmp.data[0].commit.message\n\n  const commits = await context.github.paginate(\n    context.github.pulls.listCommits.endpoint.merge(\n      contextPr(context, {\n        // A custom page size up to 100. Default is 30.\n        per_page: 100,\n      }),\n    ),\n    (res) => res.data,\n  );\n\n  const conventionalCommits = await Promise.all(\n    commits.map((c) => parse(c.commit.message)),\n  );\n\n  const breakingChangesCommits: any = conventionalCommits.reduce(\n    (acc, c, index) => {\n      const breakingChangesNotes = c.notes.filter(\n        (note: any) => note.title === 'BREAKING CHANGE',\n      );\n      if (breakingChangesNotes.length !== 0) {\n        acc.push({ commit: commits[index], breakingChangesNotes });\n      }\n\n      return acc;\n    },\n    [],\n  );\n\n  const breakingChangesLabel = repoContext.labels['breaking-changes'];\n  const newCommentBody = updateCommentBodyCommitsNotes(\n    commentBody,\n    breakingChangesCommits.length === 0\n      ? ''\n      : `Breaking Changes:\\n${breakingChangesCommits\n          .map(({ commit, breakingChangesNotes }: any) =>\n            breakingChangesNotes.map(\n              (note: any) =>\n                `- ${note.text.replace('\\n', ' ')} (${commit.sha})`,\n            ),\n          )\n          .join('')}`,\n  );\n\n  await Promise.all([\n    syncLabel(\n      pr,\n      context,\n      breakingChangesCommits.length !== 0,\n      breakingChangesLabel,\n    ),\n    updatePrIfNeeded(prContext, context, { commentBody: newCommentBody }),\n  ]);\n\n  // TODO auto update ! in front of : to signal a breaking change when https://github.com/conventional-changelog/commitlint/issues/658 is closed\n};\n","import { Context, Octokit } from 'probot';\nimport Webhooks from '@octokit/webhooks';\nimport { StatusError, StatusInfo } from '../../../accountConfigs/types';\nimport { ExcludesFalsy } from '../../../utils/ExcludesFalsy';\nimport { PrContext } from '../utils/createPullRequestContext';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updatePrIfNeeded } from './updatePr';\nimport createStatus from './utils/createStatus';\nimport {\n  updateCommentBodyInfos,\n  defaultCommentBody,\n  createCommentBody,\n  removeDeprecatedReviewflowInPrBody,\n} from './utils/body/updateBody';\nimport { calcDefaultOptions } from './syncLabelsAfterCommentBodyEdited';\nimport { readCommitsAndUpdateInfos } from './readCommitsAndUpdateInfos';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nexport const editOpenedPR = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  prContext: PrContext<E['pull_request'] | Octokit.PullsGetResponse>,\n  context: Context<E>,\n  shouldUpdateCommentBodyInfos: boolean,\n  previousSha?: string,\n): Promise<void> => {\n  const { repoContext } = prContext;\n  const pr = prContext.updatedPr || prContext.pr;\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find(\n    (check): boolean => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  const promises = Promise.all<any>(\n    [\n      ...statuses.map(\n        ({ name, error, info }): Promise<void> =>\n          createStatus(\n            context,\n            name,\n            pr.head.sha,\n            error ? 'failure' : 'success',\n            error ? error.title : (info as StatusInfo).title,\n            error ? undefined : (info as StatusInfo).url,\n          ),\n      ),\n      ...(previousSha\n        ? statuses\n            .map(({ name, error, info }): Promise<void> | undefined =>\n              error\n                ? createStatus(\n                    context,\n                    name,\n                    previousSha,\n                    'success',\n                    'New commits have been pushed',\n                  )\n                : undefined,\n            )\n            .filter(ExcludesFalsy)\n        : []),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck && previousSha && errorRule\n        ? createStatus(\n            context,\n            'lint-pr',\n            previousSha,\n            'success',\n            'New commits have been pushed',\n          )\n        : undefined,\n      !hasLintPrCheck &&\n        createStatus(\n          context,\n          'lint-pr',\n          pr.head.sha,\n          errorRule ? 'failure' : 'success',\n          errorRule ? errorRule.error.title : '✓ Your PR is valid',\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const commentBodyInfos = statuses\n    .filter((status) => status.info && status.info.inBody)\n    .map((status) => status.info) as StatusInfo[];\n\n  const shouldCreateCommentBody = prContext.commentBody === defaultCommentBody;\n\n  const commentBody = shouldCreateCommentBody\n    ? createCommentBody(calcDefaultOptions(repoContext, pr), commentBodyInfos)\n    : updateCommentBodyInfos(prContext.commentBody, commentBodyInfos);\n\n  const body = removeDeprecatedReviewflowInPrBody(pr.body);\n\n  if (shouldCreateCommentBody || shouldUpdateCommentBodyInfos) {\n    await Promise.all([\n      promises,\n      updatePrIfNeeded(prContext, context, { title, body }),\n      readCommitsAndUpdateInfos(prContext, context, commentBody),\n    ]);\n  } else {\n    await Promise.all([\n      promises,\n      updatePrIfNeeded(prContext, context, { title, body, commentBody }),\n    ]);\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from 'context/initRepoLabels';\nimport {\n  PrContext,\n  PrContextWithUpdatedPr,\n} from '../utils/createPullRequestContext';\nimport { PullRequestWithDecentDataFromWebhook } from '../utils/PullRequestData';\nimport createStatus from './utils/createStatus';\n\nconst addStatusCheck = async function <\n  T extends { repository: Webhooks.PayloadRepository }\n>(\n  prContext:\n    | PrContext<PullRequestWithDecentDataFromWebhook>\n    | PrContext<Octokit.PullsGetResponse>\n    | PrContextWithUpdatedPr,\n  context: Context<T>,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n  previousSha?: string,\n): Promise<void> {\n  const pr: Octokit.PullsGetResponse | PullRequestWithDecentDataFromWebhook =\n    prContext.updatedPr ||\n    (prContext as\n      | PrContext<PullRequestWithDecentDataFromWebhook>\n      | PrContext<Octokit.PullsGetResponse>).pr;\n  const hasPrCheck = (\n    await context.github.checks.listForRef(\n      context.repo({\n        ref: pr.head.sha,\n      }),\n    )\n  ).data.check_runs.find((check) => check.name === process.env.REVIEWFLOW_NAME);\n\n  context.log.debug('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else if (previousSha && state === 'failure') {\n    await Promise.all([\n      createStatus(\n        context,\n        '',\n        previousSha,\n        'success',\n        'New commits have been pushed',\n      ),\n      createStatus(context, '', pr.head.sha, state, description),\n    ]);\n  } else {\n    await createStatus(context, '', pr.head.sha, state, description);\n  }\n};\n\nexport const updateStatusCheckFromLabels = <\n  T extends { repository: Webhooks.PayloadRepository }\n>(\n  prContext:\n    | PrContext<Webhooks.WebhookPayloadPullRequest['pull_request']>\n    | PrContext<Octokit.PullsGetResponse>\n    | PrContextWithUpdatedPr,\n  pr:\n    | Webhooks.WebhookPayloadPullRequest['pull_request']\n    | Octokit.PullsGetResponse,\n  context: Context<T>,\n  labels: LabelResponse[] = pr.labels || [],\n  previousSha?: string,\n): Promise<void> => {\n  const { repoContext } = prContext;\n\n  context.log.debug('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l?.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  const createFailedStatusCheck = (description: string): Promise<void> =>\n    addStatusCheck(\n      prContext,\n      context,\n      {\n        state: 'failure',\n        description,\n      },\n      previousSha,\n    );\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      // TODO remove `as`\n      // https://github.com/probot/probot/issues/1219\n      `Awaiting review from: ${(pr.requested_reviewers as Octokit.PullsGetResponse['requested_reviewers'][])\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(\n    prContext,\n    context,\n    {\n      state: 'success',\n      description: '✓ PR ready to merge !',\n    },\n    previousSha,\n  );\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { LabelResponse } from '../../../context/initRepoLabels';\nimport { GroupLabels } from '../../../accountConfigs/types';\nimport { contextIssue } from '../../../context/utils';\nimport {\n  PrContext,\n  PrContextWithUpdatedPr,\n} from '../utils/createPullRequestContext';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends { repository: Webhooks.PayloadRepository },\n  GroupNames extends string = any\n>(\n  prContext:\n    | PrContext<Webhooks.WebhookPayloadPullRequest['pull_request']>\n    | PrContext<Octokit.PullsGetResponse>\n    | PrContextWithUpdatedPr,\n  context: Context<E>,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  const { repoContext } = prContext;\n  const pr =\n    prContext.updatedPr ||\n    (prContext as\n      | PrContext<Webhooks.WebhookPayloadPullRequest['pull_request']>\n      | PrContext<Octokit.PullsGetResponse>).pr;\n  context.log.debug('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n          toAddNames.add(label.name);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN && process.env.DRY_RUN !== 'false') return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.debug('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          contextIssue(context, {\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          try {\n            const result = await context.github.issues.removeLabel(\n              contextIssue(context, {\n                name: toDeleteName,\n              }),\n            );\n            prLabels = result.data;\n          } catch (err) {\n            context.log.warn('error removing label', {\n              err: err?.message,\n            });\n          }\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.debug('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        contextIssue(context, {\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(prContext, pr, context, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { contextPr } from '../../../context/utils';\nimport { PrContext } from '../utils/createPullRequestContext';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\nimport hasLabelInPR from './utils/hasLabelInPR';\n\nexport const autoApproveAndAutoMerge = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  prContext: PrContext<E['pull_request']> | PrContext<Octokit.PullsGetResponse>,\n  context: Context<E>,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = prContext.repoContext.labels['code/approved'];\n  if (hasLabelInPR(prContext.pr.labels, codeApprovedLabel)) {\n    await context.github.pulls.createReview(\n      contextPr(context, { event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(prContext, context);\n    return true;\n  }\n\n  return false;\n};\n","import { Application } from 'probot';\nimport { AppContext } from 'context/AppContext';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\nimport { defaultCommentBody } from './actions/utils/body/updateBody';\nimport { createReviewflowComment } from './utils/reviewflowComment';\n\nexport default function opened(app: Application, appContext: AppContext): void {\n  app.on(\n    'pull_request.opened',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context) => {\n        const { pr } = prContext;\n        const fromRenovate = pr.head.ref.startsWith('renovate/');\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(prContext, context),\n          editOpenedPR(prContext, context, true),\n          fromRenovate\n            ? autoApproveAndAutoMerge(prContext, context).then(\n                async (approved: boolean): Promise<void> => {\n                  if (\n                    !approved &&\n                    prContext.repoContext.config.requiresReviewRequest\n                  ) {\n                    await updateReviewStatus(prContext, context, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(prContext, context, 'dev', {\n                add: prContext.repoContext.config.requiresReviewRequest\n                  ? ['needsReview']\n                  : [],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n      (pr, context, repoContext) => {\n        return {\n          reviewflowCommentPromise: createReviewflowComment(\n            context,\n            pr,\n            defaultCommentBody,\n          ),\n        };\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseOptions } from './actions/utils/body/parseBody';\n\nexport default function closed(app: Application, appContext: AppContext): void {\n  app.on(\n    'pull_request.closed',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context, repoContext) => {\n        const { pr, commentBody } = prContext;\n        const repo = context.payload.repository;\n\n        if (pr.merged) {\n          const isNotFork = pr.head.repo.id === repo.id;\n          const options = parseOptions(\n            commentBody,\n            repoContext.config.prDefaultOptions,\n          );\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(\n              context,\n              pr.number,\n              'pr closed',\n            ),\n            isNotFork && options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(\n              context,\n              pr.number,\n              'pr closed',\n            ),\n            updateReviewStatus(prContext, context, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n\n        if (pr.assignees) {\n          pr.assignees.forEach((assignee) => {\n            repoContext.slack.updateHome(assignee.login);\n          });\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { editOpenedPR } from './actions/editOpenedPR';\n\nexport default function closed(app: Application, appContext: AppContext): void {\n  app.on(\n    'pull_request.reopened',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context, repoContext): Promise<void> => {\n        await Promise.all([\n          updateReviewStatus(prContext, context, 'dev', {\n            add: ['needsReview'],\n            remove: ['approved'],\n          }),\n          editOpenedPR(prContext, context, true),\n        ]);\n      },\n    ),\n  );\n}\n","import { RepoContext } from '../context/repoContext';\n\nexport const createLink = (url: string, text: string): string => {\n  return `<${url}|${text}>`;\n};\n\nexport const createPrLink = (\n  pr: { html_url: string; number: number },\n  repoContext: RepoContext,\n): string => {\n  return createLink(\n    pr.html_url,\n    `${repoContext.repoEmoji ? `${repoContext.repoEmoji} ` : ''}${\n      repoContext.repoFullName\n    }#${pr.number}`,\n  );\n};\n","import { KnownBlock } from '@slack/web-api';\nimport { SlackMessage } from '../../../context/SlackMessage';\n\nexport const createMrkdwnSectionBlock = (text: string): KnownBlock => ({\n  type: 'section' as const,\n  text: {\n    type: 'mrkdwn' as const,\n    text,\n  },\n});\n\nexport const createSlackMessageWithSecondaryBlock = (\n  message: string,\n  secondaryBlockText?: string,\n): SlackMessage => {\n  return {\n    text: message,\n    blocks: [\n      {\n        type: 'section' as const,\n        text: {\n          type: 'mrkdwn' as const,\n          text: message,\n        },\n      },\n    ],\n    secondaryBlocks: !secondaryBlockText\n      ? undefined\n      : [createMrkdwnSectionBlock(secondaryBlockText)],\n  };\n};\n","import { Context, Octokit } from 'probot';\nimport { RepoContext } from '../../../context/repoContext';\nimport { contextPr, getKeys } from '../../../context/utils';\n\ntype ReviewState = 'CHANGES_REQUESTED' | 'APPROVED' | 'DISMISSED';\n\ninterface ReviewStates {\n  approved: number;\n  changesRequested: number;\n  dismissed: number;\n}\ninterface Reviewer {\n  id: number;\n  login: string;\n}\n\nexport const getReviewersAndReviewStates = async <\n  GroupNames extends string = any\n>(\n  context: Context,\n  repoContext: RepoContext<GroupNames>,\n): Promise<{\n  reviewers: Reviewer[];\n  reviewStates: Record<GroupNames, ReviewStates>;\n}> => {\n  const userIds = new Set<number>();\n  const reviewers: Reviewer[] = [];\n  const reviewStatesByUser = new Map<number, ReviewState>();\n\n  await context.github.paginate(\n    context.github.pulls.listReviews.endpoint.merge(contextPr(context)),\n    ({ data: reviews }: Octokit.Response<Octokit.PullsListReviewsResponse>) => {\n      reviews.forEach((review) => {\n        if (!userIds.has(review.user.id)) {\n          userIds.add(review.user.id);\n          reviewers.push({ id: review.user.id, login: review.user.login });\n        }\n        const state = review.state.toUpperCase();\n        if (state !== 'COMMENTED') {\n          reviewStatesByUser.set(review.user.id, state as ReviewState);\n        }\n      });\n    },\n  );\n\n  const reviewStates: Record<GroupNames, ReviewStates> = {} as Record<\n    GroupNames,\n    ReviewStates\n  >;\n\n  getKeys(repoContext.config.groups).forEach((groupName) => {\n    reviewStates[groupName] = {\n      approved: 0,\n      changesRequested: 0,\n      dismissed: 0,\n    };\n  });\n\n  reviewers.forEach((reviewer) => {\n    const group = repoContext.getReviewerGroup(reviewer.login);\n    if (group) {\n      const state = reviewStatesByUser.get(reviewer.id);\n      switch (state) {\n        case 'APPROVED':\n          reviewStates[group].approved++;\n          break;\n        case 'CHANGES_REQUESTED':\n          reviewStates[group].changesRequested++;\n          break;\n        case 'DISMISSED':\n          reviewStates[group].dismissed++;\n          break;\n      }\n    }\n  });\n\n  return { reviewers, reviewStates };\n};\n","import issueParser from 'issue-parser';\n\nconst parse = issueParser('github', { actions: {}, issuePrefixes: [] });\n\nexport const parseMentions = (body: string): readonly string[] => {\n  return parse(body).mentions.map((m) => m.user);\n};\n","import Webhooks from '@octokit/webhooks';\n\ntype WebhookPr =\n  | Webhooks.WebhookPayloadPullRequest['pull_request']\n  | Webhooks.WebhookPayloadPullRequestReviewPullRequest;\n\ntype PullRequestHandlerAllowedPayloads =\n  | {\n      repository: Webhooks.PayloadRepository;\n      pull_request: WebhookPr;\n    }\n  | {\n      repository: Webhooks.PayloadRepository;\n      issue: Webhooks.WebhookPayloadIssueCommentIssue;\n    };\n\nexport type PullRequestFromPayload<\n  T extends PullRequestHandlerAllowedPayloads\n> = T extends { pull_request: WebhookPr }\n  ? T['pull_request']\n  : T extends { issue: Webhooks.WebhookPayloadIssueCommentIssue }\n  ? T['issue'] /* & T['issue']['pull_request'] */\n  : never;\n\n/** deprecated */\nexport const getPullRequestFromPayload = <\n  T extends PullRequestHandlerAllowedPayloads\n>(\n  payload: T,\n): PullRequestFromPayload<T> => {\n  const pullRequest: WebhookPr = (payload as any).pull_request;\n  if (pullRequest) {\n    return pullRequest as PullRequestFromPayload<T>;\n  }\n\n  const issue = (payload as any).issue;\n  if (issue?.pull_request) {\n    return {\n      ...issue,\n      ...issue.pull_request,\n    };\n  }\n\n  throw new Error('No pull_request in payload');\n};\n","import { RepoContext } from '../../../context/repoContext';\n\nexport const checkIfUserIsBot = (\n  repoContext: RepoContext,\n  user: { login: string; type: string },\n): boolean => {\n  if (user.type === 'Bot') return true;\n  if (repoContext.config.botUsers) {\n    return repoContext.config.botUsers.includes(user.login);\n  }\n  return false;\n};\n\nexport const checkIfIsThisBot = (user: {\n  login: string;\n  type: string;\n}): boolean => {\n  return (\n    user.type === 'Bot' && user.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n  );\n};\n","import { Application, Octokit, Context } from 'probot';\nimport {\n  WebhookPayloadPullRequestReviewComment,\n  WebhookPayloadIssueComment,\n} from '@octokit/webhooks';\nimport slackifyMarkdown from 'slackify-markdown';\nimport * as slackUtils from '../../slack/utils';\nimport { AccountEmbed } from '../../mongo';\nimport { SlackMessage } from '../../context/SlackMessage';\nimport { PostSlackMessageResult } from '../../context/TeamSlack';\nimport { contextPr } from '../../context/utils';\nimport { AppContext } from '../../context/AppContext';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { createSlackMessageWithSecondaryBlock } from './utils/createSlackMessageWithSecondaryBlock';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\nimport { parseMentions } from './utils/parseMentions';\nimport {\n  getPullRequestFromPayload,\n  PullRequestFromPayload,\n} from './utils/getPullRequestFromPayload';\nimport { checkIfUserIsBot, checkIfIsThisBot } from './utils/isBotUser';\nimport { fetchPr } from './utils/fetchPr';\n\nconst getDiscussion = async (\n  context: Context,\n  comment: any,\n): Promise<Octokit.PullsListCommentsResponse> => {\n  if (!comment.in_reply_to_id) return [comment];\n  return context.github.paginate(\n    context.github.pulls.listComments.endpoint.merge(contextPr(context)),\n    ({ data }: Octokit.Response<Octokit.PullsListCommentsResponse>) => {\n      return data.filter(\n        (c) =>\n          c.in_reply_to_id === comment.in_reply_to_id ||\n          c.id === comment.in_reply_to_id,\n      );\n    },\n  );\n};\n\nconst getMentions = (\n  discussion: Octokit.PullsListCommentsResponse,\n): string[] => {\n  const mentions = new Set<string>();\n\n  discussion.forEach((c) => {\n    parseMentions(c.body).forEach((m) => mentions.add(m));\n  });\n\n  return [...mentions];\n};\n\nconst getUsersInThread = (\n  discussion: Octokit.PullsListCommentsResponse,\n): { id: number; login: string }[] => {\n  const userIds = new Set<number>();\n  const users: { id: number; login: string }[] = [];\n\n  discussion.forEach((c) => {\n    if (userIds.has(c.user.id)) return;\n    userIds.add(c.user.id);\n    users.push({ id: c.user.id, login: c.user.login });\n  });\n\n  return users;\n};\n\nexport default function prCommentCreated(\n  app: Application,\n  appContext: AppContext,\n): void {\n  const saveInDb = async (\n    type: 'review-comment' | 'issue-comment',\n    commentId: number,\n    accountEmbed: AccountEmbed,\n    results: PostSlackMessageResult[],\n    message: SlackMessage,\n  ): Promise<void> => {\n    const filtered = results.filter((res) => res !== null);\n    if (filtered.length === 0) return;\n\n    await appContext.mongoStores.slackSentMessages.insertOne({\n      type,\n      typeId: commentId,\n      message,\n      account: accountEmbed,\n      sentTo: filtered,\n    });\n  };\n\n  app.on(\n    [\n      'pull_request_review_comment.created',\n      // comments without review and without path are sent with issue_comment.created.\n      // createHandlerPullRequestChange checks if pull_request event is present, removing real issues comments.\n      'issue_comment.created',\n    ],\n    createPullRequestHandler<\n      WebhookPayloadPullRequestReviewComment | WebhookPayloadIssueComment,\n      | PullRequestFromPayload<\n          WebhookPayloadPullRequestReviewComment | WebhookPayloadIssueComment\n        >\n      | any\n    >(\n      appContext,\n      (payload, context) => {\n        if (checkIfIsThisBot(payload.comment.user)) {\n          // ignore comments from this bot\n          return null;\n        }\n        return getPullRequestFromPayload(payload);\n      },\n      async (prContext, context, repoContext): Promise<void> => {\n        const pr = await fetchPr(context, prContext.pr.number);\n        const { comment } = context.payload;\n        const type = (comment as any).pull_request_review_id\n          ? 'review-comment'\n          : 'issue-comment';\n\n        const body = comment.body;\n        if (!body) return;\n\n        const commentByOwner = pr.user.login === comment.user.login;\n        const [discussion, { reviewers }] = await Promise.all([\n          getDiscussion(context, comment),\n          getReviewersAndReviewStates(context, repoContext),\n        ]);\n\n        const followers = reviewers.filter(\n          (u) => u.id !== pr.user.id && u.id !== comment.user.id,\n        );\n\n        if (pr.requested_reviewers) {\n          followers.push(\n            ...pr.requested_reviewers.filter((rr) => {\n              return (\n                !followers.find((f) => f.id === rr.id) &&\n                rr.id !== comment.user.id &&\n                rr.id !== pr.user.id\n              );\n            }),\n          );\n        }\n\n        const usersInThread = getUsersInThread(discussion).filter(\n          (u) =>\n            u.id !== pr.user.id &&\n            u.id !== comment.user.id &&\n            !followers.find((f) => f.id === u.id),\n        );\n        const mentions = getMentions(discussion).filter(\n          (m) =>\n            m !== pr.user.login &&\n            m !== comment.user.login &&\n            !followers.find((f) => f.login === m) &&\n            !usersInThread.find((u) => u.login === m),\n        );\n\n        const mention = repoContext.slack.mention(comment.user.login);\n        const prUrl = slackUtils.createPrLink(pr, repoContext);\n        const ownerMention = repoContext.slack.mention(pr.user.login);\n        const commentLink = slackUtils.createLink(\n          comment.html_url,\n          (comment as any).in_reply_to_id ? 'replied' : 'commented',\n        );\n\n        const createMessage = (toOwner?: boolean): string => {\n          const ownerPart = toOwner\n            ? 'your PR'\n            : `${\n                pr.user.id === comment.user.id ? 'his' : `${ownerMention}'s`\n              } PR`;\n          return `:speech_balloon: ${mention} ${commentLink} on ${ownerPart} ${prUrl}`;\n        };\n\n        const promisesOwner = [];\n        const promisesNotOwner = [];\n        const slackifiedBody = slackifyMarkdown(body);\n        const isBotUser = checkIfUserIsBot(repoContext, comment.user);\n\n        if (!commentByOwner) {\n          const slackMessage = createSlackMessageWithSecondaryBlock(\n            createMessage(true),\n            slackifiedBody,\n          );\n\n          promisesOwner.push(\n            repoContext.slack\n              .postMessage(\n                isBotUser ? 'pr-comment-bots' : 'pr-comment',\n                pr.user.id,\n                pr.user.login,\n                slackMessage,\n              )\n              .then((res) =>\n                saveInDb(\n                  type,\n                  comment.id,\n                  repoContext.accountEmbed,\n                  [res],\n                  slackMessage,\n                ),\n              ),\n          );\n        }\n\n        const message = createSlackMessageWithSecondaryBlock(\n          createMessage(false),\n          slackifiedBody,\n        );\n\n        promisesNotOwner.push(\n          ...followers.map((follower) =>\n            repoContext.slack.postMessage(\n              isBotUser ? 'pr-comment-follow-bots' : 'pr-comment-follow',\n              follower.id,\n              follower.login,\n              message,\n            ),\n          ),\n        );\n\n        promisesNotOwner.push(\n          ...usersInThread.map((user) =>\n            repoContext.slack.postMessage(\n              'pr-comment-thread',\n              user.id,\n              user.login,\n              message,\n            ),\n          ),\n        );\n\n        if (mentions.length !== 0) {\n          await appContext.mongoStores.users\n            .findAll({ login: { $in: mentions } })\n            .then((users) => {\n              promisesNotOwner.push(\n                ...users.map((u) =>\n                  repoContext.slack.postMessage(\n                    'pr-comment-mention',\n                    u._id as any, // TODO _id is number\n                    u.login,\n                    message,\n                  ),\n                ),\n              );\n            });\n        }\n\n        await Promise.all([\n          Promise.all(promisesOwner),\n          Promise.all(promisesNotOwner).then((results) =>\n            saveInDb(\n              type,\n              comment.id,\n              repoContext.accountEmbed,\n              results,\n              message,\n            ),\n          ),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { WebhookPayloadPullRequestReviewComment } from '@octokit/webhooks';\nimport slackifyMarkdown from 'slackify-markdown';\nimport { AppContext } from '../../context/AppContext';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { createMrkdwnSectionBlock } from './utils/createSlackMessageWithSecondaryBlock';\nimport {\n  getPullRequestFromPayload,\n  PullRequestFromPayload,\n} from './utils/getPullRequestFromPayload';\nimport { checkIfIsThisBot } from './utils/isBotUser';\nimport { syncLabelsAfterCommentBodyEdited } from './actions/syncLabelsAfterCommentBodyEdited';\nimport { fetchPullRequestAndCreateContext } from './utils/createPullRequestContext';\n\nexport default function prCommentEditedOrDeleted(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    [\n      'pull_request_review_comment.edited',\n      'pull_request_review_comment.deleted',\n      // comments without review and without path are sent with issue_comment.created.\n      // createHandlerPullRequestChange checks if pull_request event is present, removing real issues comments.\n      'issue_comment.edited',\n      'issue_comment.deleted',\n    ],\n    createPullRequestHandler<\n      WebhookPayloadPullRequestReviewComment,\n      PullRequestFromPayload<WebhookPayloadPullRequestReviewComment>\n    >(\n      appContext,\n      (payload) => {\n        if (checkIfIsThisBot(payload.sender)) {\n          // ignore edits made from this bot\n          return null;\n        }\n        return getPullRequestFromPayload(payload);\n      },\n      async (prContext, context, repoContext): Promise<void> => {\n        const { comment } = context.payload;\n\n        if (\n          context.payload.action === 'edited' &&\n          checkIfIsThisBot(comment.user)\n        ) {\n          const updatedPrContext = await fetchPullRequestAndCreateContext(\n            context,\n            prContext,\n          );\n          if (!updatedPrContext.updatedPr.closed_at) {\n            await syncLabelsAfterCommentBodyEdited(\n              appContext,\n              repoContext,\n              updatedPrContext.updatedPr,\n              context,\n              updatedPrContext,\n            );\n          }\n          return;\n        }\n\n        const type = comment.pull_request_review_id\n          ? 'review-comment'\n          : 'issue-comment';\n\n        const criteria = {\n          'account.id': repoContext.account._id,\n          'account.type': repoContext.accountType,\n          type,\n          typeId: comment.id,\n        };\n\n        const sentMessages = await appContext.mongoStores.slackSentMessages.findAll(\n          criteria,\n        );\n\n        if (sentMessages.length === 0) return;\n\n        if (context.payload.action === 'deleted') {\n          await Promise.all([\n            Promise.all(\n              sentMessages.map((sentMessage) =>\n                Promise.all(\n                  sentMessage.sentTo.map((sentTo) =>\n                    repoContext.slack.deleteMessage(sentTo.ts, sentTo.channel),\n                  ),\n                ),\n              ),\n            ),\n            appContext.mongoStores.slackSentMessages.deleteMany(criteria),\n          ]);\n        } else {\n          const secondaryBlocks = [\n            createMrkdwnSectionBlock(slackifyMarkdown(comment.body)),\n          ];\n\n          await Promise.all([\n            Promise.all(\n              sentMessages.map((sentMessage) =>\n                Promise.all(\n                  sentMessage.sentTo.map((sentTo) =>\n                    repoContext.slack.updateMessage(sentTo.ts, sentTo.channel, {\n                      ...sentMessage.message,\n                      secondaryBlocks,\n                    }),\n                  ),\n                ),\n              ),\n            ),\n            appContext.mongoStores.slackSentMessages.partialUpdateMany(\n              criteria,\n              { $set: { 'message.secondaryBlocks': secondaryBlocks } },\n            ),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport * as slackUtils from '../../slack/utils';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request.review_requested',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context, repoContext): Promise<void> => {\n        const { pr } = prContext;\n        const sender = context.payload.sender;\n\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.approveShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          await updateReviewStatus(prContext, context, reviewerGroup, {\n            add: ['needsReview', !shouldWait && 'requested'],\n            remove: ['approved'],\n          });\n\n          if (pr.assignees) {\n            pr.assignees.forEach((assignee) => {\n              repoContext.slack.updateHome(assignee.login);\n            });\n          }\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          const text = `:eyes: ${repoContext.slack.mention(\n            sender.login,\n          )} requests your review on ${slackUtils.createPrLink(\n            pr,\n            repoContext,\n          )} !\\n> ${pr.title}`;\n          const message = { text };\n          const result = await repoContext.slack.postMessage(\n            'pr-review',\n            reviewer.id,\n            reviewer.login,\n            message,\n          );\n          if (result) {\n            await appContext.mongoStores.slackSentMessages.insertOne({\n              type: 'review-requested',\n              typeId: `${pr.id}_${reviewer.id}`,\n              message,\n              account: repoContext.accountEmbed,\n              sentTo: [result],\n            });\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport * as slackUtils from '../../slack/utils';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\n\nexport default function reviewRequestRemoved(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context, repoContext): Promise<void> => {\n        const { pr } = prContext;\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { reviewStates } = await getReviewersAndReviewStates(\n            context,\n            repoContext,\n          );\n\n          const hasChangesRequestedInReviews =\n            reviewStates[reviewerGroup].changesRequested !== 0;\n\n          const hasApprovedInReviews =\n            reviewStates[reviewerGroup].approved !== 0;\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n\n          await updateReviewStatus(prContext, context, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed (should still be in changed requested anyway, but we never know)\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup && 'requested',\n            ],\n          });\n\n          if (pr.assignees) {\n            pr.assignees.forEach((assignee) => {\n              repoContext.slack.updateHome(assignee.login);\n            });\n          }\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        repoContext.slack.postMessage(\n          'pr-review',\n          reviewer.id,\n          reviewer.login,\n          {\n            text: `:skull_and_crossbones: ${repoContext.slack.mention(\n              sender.login,\n            )} removed the request for your review on ${slackUtils.createPrLink(\n              pr,\n              repoContext,\n            )}`,\n          },\n        );\n\n        const sentMessageRequestedReview = await appContext.mongoStores.slackSentMessages.findOne(\n          {\n            'account.id': repoContext.account._id,\n            'account.type': repoContext.accountType,\n            type: 'review-requested',\n            typeId: `${pr.id}_${reviewer.id}`,\n          },\n        );\n\n        if (sentMessageRequestedReview) {\n          const sentTo = sentMessageRequestedReview.sentTo[0];\n          const message = sentMessageRequestedReview.message;\n          await Promise.all([\n            repoContext.slack.updateMessage(sentTo.ts, sentTo.channel, {\n              ...message,\n              text: message.text\n                .split('\\n')\n                .map((l) => `~${l}~`)\n                .join('\\n'),\n            }),\n            repoContext.slack.addReaction(\n              sentTo.ts,\n              sentTo.channel,\n              'skull_and_crossbones',\n            ),\n            appContext.mongoStores.slackSentMessages.deleteOne(\n              sentMessageRequestedReview,\n            ),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport slackifyMarkdown from 'slackify-markdown';\nimport { AppContext } from '../../context/AppContext';\nimport * as slackUtils from '../../slack/utils';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\nimport { createSlackMessageWithSecondaryBlock } from './utils/createSlackMessageWithSecondaryBlock';\nimport { fetchPullRequestAndCreateContext } from './utils/createPullRequestContext';\n\nconst getEmojiFromState = (state: string): string => {\n  switch (state) {\n    case 'changes_requested':\n      return 'x';\n    case 'approved':\n      return 'white_check_mark';\n    default:\n      return 'speech_balloon';\n  }\n};\n\nexport default function reviewSubmitted(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request_review.submitted',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context): Promise<void> => {\n        const { pr, repoContext } = prContext;\n        const {\n          user: reviewer,\n          state,\n          body,\n          html_url: reviewUrl,\n        } = (context.payload as any).review;\n\n        const reviewByOwner = pr.user.login === reviewer.login;\n        const { reviewers, reviewStates } = await getReviewersAndReviewStates(\n          context,\n          repoContext,\n        );\n        const followers = reviewers.filter(\n          (user) => user.id !== reviewer.id && user.id !== pr.user.id,\n        );\n\n        if (pr.requested_reviewers) {\n          followers.push(\n            ...pr.requested_reviewers.filter((rr) => {\n              return (\n                !followers.find((f) => f.id === rr.id) &&\n                rr.id !== reviewer.id &&\n                rr.id !== pr.user.id\n              );\n            }),\n          );\n        }\n\n        if (!reviewByOwner) {\n          const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n          let merged: boolean;\n\n          if (\n            reviewerGroup &&\n            repoContext.config.labels.review[reviewerGroup]\n          ) {\n            const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n              reviewerGroup,\n              pr.requested_reviewers,\n              {\n                includesReviewerGroup: true,\n                // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n                // includesWaitForGroups: true,\n              },\n            );\n\n            const hasChangesRequestedInReviews =\n              reviewStates[reviewerGroup].changesRequested !== 0;\n\n            const approved =\n              !hasRequestedReviewsForGroup &&\n              !hasChangesRequestedInReviews &&\n              state === 'approved';\n\n            const updatedPrContext = await fetchPullRequestAndCreateContext(\n              context,\n              prContext,\n            );\n\n            const newLabels = await updateReviewStatus(\n              updatedPrContext,\n              context,\n              reviewerGroup,\n              {\n                add: [\n                  approved && 'approved',\n                  state === 'changes_requested' && 'needsReview',\n                  state === 'changes_requested' && 'changesRequested',\n                ],\n                remove: [\n                  approved && 'needsReview',\n                  !hasRequestedReviewsForGroup && 'requested',\n                  state === 'approved' &&\n                    !hasChangesRequestedInReviews &&\n                    'changesRequested',\n                  state === 'changes_requested' && 'approved',\n                ],\n              },\n            );\n\n            if (approved && !hasChangesRequestedInReviews) {\n              merged = await autoMergeIfPossible(\n                updatedPrContext,\n                context,\n                newLabels,\n              );\n            }\n          }\n\n          if (pr.assignees) {\n            pr.assignees.forEach((assignee) => {\n              repoContext.slack.updateHome(assignee.login);\n            });\n          }\n          repoContext.slack.updateHome(reviewer.login);\n\n          const sentMessageRequestedReview = await appContext.mongoStores.slackSentMessages.findOne(\n            {\n              'account.id': repoContext.account._id,\n              'account.type': repoContext.accountType,\n              type: 'review-requested',\n              typeId: `${pr.id}_${reviewer.id}`,\n            },\n          );\n\n          const emoji = getEmojiFromState(state);\n\n          if (sentMessageRequestedReview) {\n            const sentTo = sentMessageRequestedReview.sentTo[0];\n            const message = sentMessageRequestedReview.message;\n            await Promise.all([\n              repoContext.slack.updateMessage(sentTo.ts, sentTo.channel, {\n                ...message,\n                text: message.text\n                  .split('\\n')\n                  .map((l) => `~${l}~`)\n                  .join('\\n'),\n              }),\n              repoContext.slack.addReaction(sentTo.ts, sentTo.channel, emoji),\n              appContext.mongoStores.slackSentMessages.deleteOne(\n                sentMessageRequestedReview,\n              ),\n            ]);\n          }\n\n          if (!body && state !== 'changes_requested' && state !== 'approved') {\n            return;\n          }\n\n          const mention = repoContext.slack.mention(reviewer.login);\n          const prUrl = slackUtils.createPrLink(pr, repoContext);\n          const ownerMention = repoContext.slack.mention(pr.user.login);\n\n          const createMessage = (toOwner?: boolean): string => {\n            const ownerPart = toOwner ? 'your PR' : `${ownerMention}'s PR`;\n\n            if (state === 'changes_requested') {\n              return `:${emoji}: ${mention} requests changes on ${ownerPart} ${prUrl}`;\n            }\n            if (state === 'approved') {\n              return `${\n                toOwner ? ':clap: ' : ''\n              }:${emoji}: ${mention} approves ${ownerPart} ${prUrl}${\n                merged ? ' and PR is merged :tada:' : ''\n              }`;\n            }\n\n            const commentLink = slackUtils.createLink(reviewUrl, 'commented');\n            return `:${emoji}: ${mention} ${commentLink} on ${ownerPart} ${prUrl}`;\n          };\n\n          const slackifiedBody = slackifyMarkdown(body);\n\n          repoContext.slack.postMessage(\n            'pr-review',\n            pr.user.id,\n            pr.user.login,\n            createSlackMessageWithSecondaryBlock(\n              createMessage(true),\n              slackifiedBody,\n            ),\n          );\n\n          const message = createSlackMessageWithSecondaryBlock(\n            createMessage(false),\n            slackifiedBody,\n          );\n\n          followers.forEach((follower) => {\n            repoContext.slack.postMessage(\n              'pr-review-follow',\n              follower.id,\n              follower.login,\n              message,\n            );\n          });\n        } else if (body) {\n          const mention = repoContext.slack.mention(reviewer.login);\n          const prUrl = slackUtils.createPrLink(pr, repoContext);\n          const commentLink = slackUtils.createLink(reviewUrl, 'commented');\n\n          const message = createSlackMessageWithSecondaryBlock(\n            `:speech_balloon: ${mention} ${commentLink} on his PR ${prUrl}`,\n            body,\n          );\n\n          followers.forEach((follower) => {\n            repoContext.slack.postMessage(\n              'pr-review-follow',\n              follower.id,\n              follower.login,\n              message,\n            );\n          });\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport * as slackUtils from '../../slack/utils';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { getReviewersAndReviewStates } from './utils/getReviewersAndReviewStates';\nimport { fetchPullRequestAndCreateContext } from './utils/createPullRequestContext';\n\nexport default function reviewDismissed(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context, repoContext): Promise<void> => {\n        const updatedPrContext = await fetchPullRequestAndCreateContext(\n          context,\n          prContext,\n        );\n        const pr = updatedPrContext.updatedPr;\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { reviewStates } = await getReviewersAndReviewStates(\n            context,\n            repoContext,\n          );\n          const hasChangesRequestedInReviews =\n            reviewStates[reviewerGroup].changesRequested !== 0;\n          const hasApprovals = reviewStates[reviewerGroup].approved !== 0;\n          const hasRequestedReviewsForGroup = repoContext.approveShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            { includesReviewerGroup: true },\n          );\n\n          await updateReviewStatus(updatedPrContext, context, reviewerGroup, {\n            add: [\n              !hasApprovals && 'needsReview',\n              hasApprovals &&\n                !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'approved',\n            ],\n            remove: [\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n              !hasChangesRequestedInReviews && 'changesRequested',\n              !hasApprovals && 'approved',\n            ],\n          });\n\n          if (pr.assignees) {\n            pr.assignees.forEach((assignee) => {\n              repoContext.slack.updateHome(assignee.login);\n            });\n          }\n          repoContext.slack.updateHome(reviewer.login);\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              'pr-review',\n              pr.user.id,\n              pr.user.login,\n              {\n                text: `:skull: ${repoContext.slack.mention(\n                  reviewer.login,\n                )} dismissed his review on ${slackUtils.createPrLink(\n                  pr,\n                  repoContext,\n                )}`,\n              },\n            );\n          } else {\n            repoContext.slack.postMessage(\n              'pr-review',\n              reviewer.id,\n              reviewer.login,\n              {\n                text: `:skull: ${repoContext.slack.mention(\n                  sender.login,\n                )} dismissed your review on ${slackUtils.createPrLink(\n                  pr,\n                  repoContext,\n                )}`,\n              },\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { fetchPullRequestAndCreateContext } from './utils/createPullRequestContext';\n\nexport default function synchronize(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'pull_request.synchronize',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context): Promise<void> => {\n        const updatedPrContext = await fetchPullRequestAndCreateContext(\n          context,\n          prContext,\n        );\n        // old and new sha\n        // const { before, after } = context.payload;\n        const previousSha = (context.payload as any).before as string;\n\n        await Promise.all([\n          editOpenedPR(updatedPrContext, context, true, previousSha),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(\n            updatedPrContext,\n            updatedPrContext.updatedPr,\n            context,\n            updatedPrContext.updatedPr.labels,\n            previousSha,\n          ),\n        ]);\n\n        // call autoMergeIfPossible to re-add to the queue when push is fixed\n        await autoMergeIfPossible(updatedPrContext, context);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { fetchPullRequestAndCreateContext } from './utils/createPullRequestContext';\nimport { checkIfIsThisBot } from './utils/isBotUser';\n\nexport default function edited(app: Application, appContext: AppContext): void {\n  app.on(\n    'pull_request.edited',\n    createPullRequestHandler(\n      appContext,\n      (payload) => payload.pull_request,\n      async (prContext, context, repoContext): Promise<void> => {\n        const prContextUpdated = await fetchPullRequestAndCreateContext(\n          context,\n          prContext,\n        );\n        const sender = context.payload.sender;\n        if (checkIfIsThisBot(sender)) {\n          return;\n        }\n\n        await editOpenedPR(prContextUpdated, context, false);\n        await autoMergeIfPossible(prContextUpdated, context);\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context, Octokit } from 'probot';\nimport { PrContext } from '../utils/createPullRequestContext';\nimport { updateCommentOptions } from './utils/body/updateBody';\nimport { Options } from './utils/body/prOptions';\nimport { updatePrIfNeeded } from './updatePr';\n\nexport const updatePrCommentBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  prContext: PrContext<E['pull_request'] | Octokit.PullsGetResponse>,\n  context: Context<E>,\n  updateOptions: Partial<Options>,\n): Promise<void> => {\n  const { commentBody: newBody } = updateCommentOptions(\n    prContext.commentBody,\n    prContext.repoContext.config.prDefaultOptions,\n    updateOptions,\n  );\n\n  await updatePrIfNeeded(prContext, context, { commentBody: newBody });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { contextPr, contextIssue } from '../../context/utils';\nimport { createPullRequestHandler } from './utils/createPullRequestHandler';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrCommentBody } from './actions/updatePrCommentBody';\nimport hasLabelInPR from './actions/utils/hasLabelInPR';\nimport { fetchPullRequestAndCreateContext } from './utils/createPullRequestContext';\n\nconst isFromRenovate = (\n  payload: Webhooks.WebhookPayloadPullRequest,\n): boolean => {\n  const sender = payload.sender;\n  return (\n    sender.type === 'Bot' &&\n    sender.login === 'renovate[bot]' &&\n    payload.pull_request.head.ref.startsWith('renovate/')\n  );\n};\n\nexport default function labelsChanged(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    createPullRequestHandler<\n      Webhooks.WebhookPayloadPullRequest,\n      Webhooks.WebhookPayloadPullRequest['pull_request']\n    >(\n      appContext,\n      (payload) => {\n        if (payload.sender.type === 'Bot' && !isFromRenovate(payload)) {\n          return null;\n        }\n        return payload.pull_request;\n      },\n      async (prContext, context, repoContext) => {\n        const fromRenovate = isFromRenovate(context.payload);\n        const updatedPrContext = await fetchPullRequestAndCreateContext(\n          context,\n          prContext,\n        );\n        const { updatedPr: pr } = updatedPrContext;\n\n        const label = (context.payload as any).label;\n        if (fromRenovate) {\n          const codeApprovedLabel = repoContext.labels['code/approved'];\n          const autoMergeLabel = repoContext.labels['merge/automerge'];\n          const autoMergeSkipCiLabel = repoContext.labels['merge/skip-ci'];\n          if (context.payload.action === 'labeled') {\n            if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n              // const { data: reviews } = await context.github.pulls.listReviews(\n              //   contextPr(context, { per_page: 1 }),\n              // );\n              // if (reviews.length !== 0) {\n              await context.github.pulls.createReview(\n                contextPr(context, { event: 'APPROVE' }),\n              );\n\n              let labels = pr.labels;\n              const autoMergeWithSkipCi =\n                autoMergeSkipCiLabel &&\n                repoContext.config.autoMergeRenovateWithSkipCi;\n              if (autoMergeWithSkipCi) {\n                const result = await context.github.issues.addLabels(\n                  contextIssue(context, {\n                    labels: [autoMergeSkipCiLabel.name],\n                  }),\n                );\n                labels = result.data;\n              }\n              await updateStatusCheckFromLabels(\n                updatedPrContext,\n                pr,\n                context,\n                labels,\n              );\n              await updatePrCommentBody(updatedPrContext, context, {\n                autoMergeWithSkipCi,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                autoMerge: hasLabelInPR(labels, autoMergeLabel)\n                  ? true\n                  : repoContext.config.prDefaultOptions.autoMerge,\n              });\n              // }\n            } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n              await updatePrCommentBody(updatedPrContext, context, {\n                autoMerge: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                autoMergeWithSkipCi: hasLabelInPR(pr.labels, codeApprovedLabel)\n                  ? true\n                  : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n              });\n            }\n            await autoMergeIfPossible(updatedPrContext, context);\n          }\n          return;\n        }\n\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              contextIssue(context, { name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              contextIssue(context, { labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(updatedPrContext, pr, context);\n\n        const featureBranchLabel = repoContext.labels['feature-branch'];\n        const automergeLabel = repoContext.labels['merge/automerge'];\n        const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n        const option = (() => {\n          if (featureBranchLabel && label.id === featureBranchLabel.id)\n            return 'featureBranch';\n          if (automergeLabel && label.id === automergeLabel.id)\n            return 'autoMerge';\n          if (skipCiLabel && label.id === skipCiLabel.id)\n            return 'autoMergeWithSkipCi';\n          return null;\n        })();\n\n        if (option) {\n          await updatePrCommentBody(updatedPrContext, context, {\n            [option]: context.payload.action === 'labeled',\n          });\n        } // not an else if\n        if (automergeLabel && label.id === automergeLabel.id) {\n          if (context.payload.action === 'labeled') {\n            await autoMergeIfPossible(updatedPrContext, context);\n          } else {\n            repoContext.removePrFromAutomergeQueue(\n              context,\n              pr.number,\n              'automerge label removed',\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createPullRequestsHandler } from './utils/createPullRequestHandler';\nimport { autoMergeIfPossibleOptionalPrContext } from './actions/autoMergeIfPossible';\nimport { fetchPr } from './utils/fetchPr';\n\nexport default function checkrunCompleted(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'check_run.completed',\n    createPullRequestsHandler(\n      appContext,\n      (payload) => payload.check_run.pull_requests,\n      async (pr, context, repoContext) => {\n        const pullRequest = await fetchPr(context, pr.number);\n\n        await autoMergeIfPossibleOptionalPrContext(\n          appContext,\n          repoContext,\n          pullRequest,\n          context,\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { createPullRequestsHandler } from './utils/createPullRequestHandler';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { fetchPr } from './utils/fetchPr';\nimport { createPullRequestContextFromPullResponse } from './utils/createPullRequestContext';\n\nexport default function checksuiteCompleted(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'check_suite.completed',\n    createPullRequestsHandler(\n      appContext,\n      (payload) => payload.check_suite.pull_requests,\n      async (pr, context, repoContext) => {\n        const pullRequest = await fetchPr(context, pr.number);\n        const prContext = await createPullRequestContextFromPullResponse(\n          appContext,\n          repoContext,\n          context,\n          pullRequest,\n          {},\n        );\n\n        await autoMergeIfPossible(prContext, context);\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { AppContext } from '../../context/AppContext';\nimport { LockedMergePr } from '../../context/repoContext';\nimport { createPullRequestsHandler } from './utils/createPullRequestHandler';\n\nconst isSameBranch = (\n  payload: Context<Webhooks.WebhookPayloadStatus>['payload'],\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(app: Application, appContext: AppContext): void {\n  app.on(\n    'status',\n    createPullRequestsHandler(\n      appContext,\n      (payload, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (payload.state !== 'loading' && isSameBranch(payload, lockedPr)) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (pr, context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context.payload, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","import { Context } from 'probot';\nimport { accountConfigs, defaultConfig } from '../../../accountConfigs';\nimport {\n  AccountContext,\n  obtainAccountContext,\n} from '../../../context/accountContext';\nimport { AppContext } from '../../../context/AppContext';\n\ntype CallbackContextAndAccountContext<T> = (\n  context: Context<T>,\n  accountContext: AccountContext,\n) => void | Promise<void>;\n\nexport const handlerOrgChange = async <\n  T extends { organization: { id: number; login: string } }\n>(\n  appContext: AppContext,\n  context: Context<T>,\n  callback: CallbackContextAndAccountContext<T>,\n): Promise<void> => {\n  const org = context.payload.organization;\n  const config = accountConfigs[org.login] || defaultConfig;\n  const accountContext = await obtainAccountContext(\n    appContext,\n    context,\n    config,\n    { ...org, type: 'Organization' },\n  );\n  if (!accountContext) return;\n\n  return accountContext.lock(async () => {\n    await callback(context, accountContext);\n  });\n};\n\nexport const createHandlerOrgChange = <\n  T extends { organization: { id: number; login: string } }\n>(\n  appContext: AppContext,\n  callback: CallbackContextAndAccountContext<T>,\n) => (context: Context<T>) => {\n  return handlerOrgChange(appContext, context, callback);\n};\n","import { Application } from 'probot';\nimport { createHandlerOrgChange } from '../account-handlers/utils/handler';\nimport { getEmojiFromRepoDescription } from '../../context/utils';\nimport { AppContext } from '../../context/AppContext';\nimport { obtainRepoContext } from '../../context/repoContext';\n\nexport default function repoEdited(\n  app: Application,\n  appContext: AppContext,\n): void {\n  app.on(\n    'repository.edited',\n    createHandlerOrgChange(\n      appContext,\n      async (context, orgContext): Promise<void> => {\n        const repoContext = await obtainRepoContext(appContext, context);\n        if (!repoContext) return;\n        const repo = context.payload.repository;\n        repoContext.repoFullName = repo.full_name;\n        repoContext.repoEmoji = getEmojiFromRepoDescription(repo.description);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport Webhooks from '@octokit/webhooks';\nimport openedHandler from './events/pr-handlers/opened';\nimport closedHandler from './events/pr-handlers/closed';\nimport reopenedHandler from './events/pr-handlers/reopened';\nimport commentCreated from './events/pr-handlers/commentCreated';\nimport commentEditedOrDeleted from './events/pr-handlers/commentEditedOrDeleted';\nimport reviewRequestedHandler from './events/pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './events/pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './events/pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './events/pr-handlers/reviewDismissed';\nimport synchronizeHandler from './events/pr-handlers/synchronize';\nimport editedHandler from './events/pr-handlers/edited';\nimport labelsChanged from './events/pr-handlers/labelsChanged';\nimport checkrunCompleted from './events/pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './events/pr-handlers/checksuiteCompleted';\nimport status from './events/pr-handlers/status';\nimport { createHandlerOrgChange } from './events/account-handlers/utils/handler';\nimport repoEdited from './events/repository-handlers/repoEdited';\nimport { syncOrg } from './events/account-handlers/actions/syncOrg';\nimport { syncTeams } from './events/account-handlers/actions/syncTeams';\nimport { AppContext } from './context/AppContext';\n\nexport default function initApp(\n  app: Application,\n  appContext: AppContext,\n): void {\n  /* https://developer.github.com/webhooks/event-payloads/#organization */\n  app.on(\n    ['organization.member_added', 'organization.member_removed'],\n    createHandlerOrgChange<Webhooks.WebhookPayloadOrganization>(\n      appContext,\n      async (context, accountContext) => {\n        await syncOrg(\n          appContext.mongoStores,\n          context.github,\n          accountContext.account.installationId as number,\n          context.payload.organization,\n        );\n      },\n    ),\n  );\n\n  /* https://developer.github.com/webhooks/event-payloads/#team */\n  app.on(\n    ['team.created', 'team.deleted', 'team.edited'],\n    createHandlerOrgChange<Webhooks.WebhookPayloadTeam>(\n      appContext,\n      async (context, accountContext) => {\n        await syncTeams(\n          appContext.mongoStores,\n          context.github,\n          context.payload.organization,\n        );\n      },\n    ),\n  );\n\n  // /* https://developer.github.com/webhooks/event-payloads/#membership */\n  // app.on(\n  //   ['membership.added', 'membership.removed'],\n  //   createHandlerOrgChange<Webhooks.WebhookPayloadMembership>(\n  //     mongoStores,\n  //     async (context, accountContext) => {\n  //       await syncTeamMembers(\n  //         mongoStores,\n  //         context.github,\n  //         context.payload.organization,\n  //         context.payload.team,\n  //       );\n  //     },\n  //   ),\n  // );\n\n  // Repo\n  /* https://developer.github.com/webhooks/event-payloads/#repository */\n  repoEdited(app, appContext);\n\n  // PR\n  /* https://developer.github.com/webhooks/event-payloads/#pull_request */\n  openedHandler(app, appContext);\n  editedHandler(app, appContext);\n  closedHandler(app, appContext);\n  reopenedHandler(app, appContext);\n\n  reviewRequestedHandler(app, appContext);\n  reviewRequestRemovedHandler(app, appContext);\n  reviewSubmittedHandler(app, appContext);\n  reviewDismissedHandler(app, appContext);\n  labelsChanged(app, appContext);\n  synchronizeHandler(app, appContext);\n\n  /* https://developer.github.com/webhooks/event-payloads/#pull_request_review_comment */\n  /* https://developer.github.com/webhooks/event-payloads/#issue_comment */\n  commentCreated(app, appContext);\n  commentEditedOrDeleted(app, appContext);\n\n  /* https://developer.github.com/webhooks/event-payloads/#check_run */\n  checkrunCompleted(app, appContext);\n\n  /* https://developer.github.com/webhooks/event-payloads/#check_suite */\n  checksuiteCompleted(app, appContext);\n\n  /* https://developer.github.com/webhooks/event-payloads/#status */\n  status(app, appContext);\n}\n","import { WebClient } from '@slack/web-api';\nimport { Octokit } from 'probot';\nimport { MongoStores, Org, OrgMember } from '../mongo';\nimport { createLink } from './utils';\n\ninterface QueueItem {\n  github: Octokit;\n  slackClient: WebClient;\n  member: OrgMember;\n}\n\nexport const createSlackHomeWorker = (mongoStores: MongoStores) => {\n  const updateMember = async (\n    github: Octokit,\n    slackClient: WebClient,\n    member: OrgMember,\n  ): Promise<void> => {\n    if (!member.slack?.id) return;\n    // console.log('update member', member.org.login, member.user.login);\n\n    /* search limit: 30 requests per minute = 7 update/min max */\n    const [\n      prsWithRequestedReviews,\n      prsToMerge,\n      prsWithRequestedChanges,\n      prsInDraft,\n    ] = await Promise.all([\n      github.search.issuesAndPullRequests({\n        q: `is:pr user:${member.org.login} is:open review-requested:${member.user.login} `,\n        sort: 'created',\n        order: 'desc',\n      }),\n      github.search.issuesAndPullRequests({\n        q: `is:pr user:${member.org.login} is:open assignee:${member.user.login} label:\":ok_hand: code/approved\"`,\n        sort: 'created',\n        order: 'desc',\n      }),\n      github.search.issuesAndPullRequests({\n        q: `is:pr user:${member.org.login} is:open assignee:${member.user.login} label:\":ok_hand: code/changes-requested\"`,\n        sort: 'created',\n        order: 'desc',\n      }),\n      github.search.issuesAndPullRequests({\n        q: `is:pr user:${member.org.login} is:open assignee:${member.user.login} draft:true`,\n        sort: 'created',\n        order: 'desc',\n        per_page: 5,\n      }),\n    ]);\n\n    const blocks: any[] = [];\n\n    const buildBlocks = (title: string, results: any) => {\n      if (!results.total_count) return;\n\n      blocks.push(\n        {\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text: `*${title}*`,\n          },\n        },\n        {\n          type: 'divider',\n        },\n        ...results.items\n          .map((pr: any) => {\n            const repoName = pr.repository_url.slice(\n              'https://api.github.com/repos/'.length,\n            );\n            const prFullName = `${repoName}#${pr.number}`;\n\n            return [\n              {\n                type: 'section',\n                text: {\n                  type: 'mrkdwn',\n                  text: `*${createLink(pr.html_url, pr.title)}*`,\n                  //  ${pr.labels.map((l) => `{${l.name}}`).join(' · ')}\n                },\n              },\n              {\n                type: 'context',\n                elements: [\n                  {\n                    type: 'mrkdwn',\n                    text: `${createLink(pr.html_url, prFullName)} ${\n                      pr.draft ? '· _Draft_' : ''\n                    }`,\n                  },\n                  {\n                    type: 'image',\n                    image_url: pr.user.avatar_url,\n                    alt_text: pr.user.login,\n                  },\n                  {\n                    type: 'mrkdwn',\n                    text: `${pr.user.login}`,\n                  },\n                ],\n              },\n            ];\n          })\n          .flat(),\n        {\n          type: 'context',\n          elements: [\n            {\n              type: 'image',\n              image_url:\n                'https://api.slack.com/img/blocks/bkb_template_images/placeholder.png',\n              alt_text: 'placeholder',\n            },\n          ],\n        },\n      );\n    };\n\n    buildBlocks(':eyes: Requested Reviews', prsWithRequestedReviews.data);\n    buildBlocks(':white_check_mark: Ready to Merge', prsToMerge.data);\n    buildBlocks(':x: Changes Requested', prsWithRequestedChanges.data);\n    buildBlocks(':construction: Drafts', prsInDraft.data);\n\n    if (blocks.length === 0) {\n      blocks.push({\n        type: 'section',\n        text: {\n          type: 'mrkdwn',\n          text: \":tada: It looks like you don't have any PR to review!\",\n        },\n      });\n    }\n\n    slackClient.views.publish({\n      user_id: member.slack.id,\n      view: {\n        type: 'home',\n        blocks,\n      },\n    });\n  };\n\n  let workerInterval: ReturnType<typeof setInterval> | undefined;\n  const queueKeys = new Set<string>();\n  const queue: QueueItem[] = [];\n\n  const stop = (): void => {\n    if (workerInterval !== undefined) {\n      clearInterval(workerInterval);\n      workerInterval = undefined;\n    }\n  };\n\n  const start = (): void => {\n    if (workerInterval !== undefined) return;\n    workerInterval = setInterval(() => {\n      const item = queue.shift();\n      if (!item) {\n        stop();\n        return;\n      }\n\n      const { github, slackClient, member } = item;\n      const memberId = member.slack?.id;\n\n      const key = `${member.org.id}_${memberId}`;\n      queueKeys.delete(key);\n\n      updateMember(github, slackClient, member);\n    }, 9000); // 7/min 60s 1min = 1 ttes les 8.5s max\n  };\n\n  const scheduleUpdateMember = (\n    github: Octokit,\n    slackClient: WebClient,\n    member: OrgMember,\n  ): void => {\n    const memberId = member.slack?.id;\n    if (!memberId) return;\n\n    const key = `${member.org.id}_${memberId}`;\n\n    if (!queueKeys.has(key)) {\n      queueKeys.add(key);\n      queue.push({\n        github,\n        slackClient,\n        member,\n      });\n      start();\n    }\n  };\n\n  const scheduleUpdateOrg = async (\n    github: Octokit,\n    org: Org,\n    slackClient = new WebClient(org.slackToken),\n  ): Promise<void> => {\n    const cursor = await mongoStores.orgMembers.cursor();\n    cursor.forEach((member) => {\n      scheduleUpdateMember(github, slackClient, member);\n    });\n  };\n\n  const scheduleUpdateAllOrgs = async (\n    auth: (installationId: number) => Promise<Octokit>,\n  ): Promise<void> => {\n    const cursor = await mongoStores.orgs.cursor();\n    cursor.forEach(async (org) => {\n      if (!org.slackToken || !org.installationId) return;\n      const github = await auth(org.installationId);\n      await scheduleUpdateOrg(github, org);\n    });\n  };\n\n  return {\n    scheduleUpdateMember,\n    scheduleUpdateOrg,\n    scheduleUpdateAllOrgs,\n  };\n};\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport { AppContext } from './context/AppContext';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\nimport initApp from './initApp';\nimport { createSlackHomeWorker } from './slack/home';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application): void => {\n  const mongoStores = mongoInit();\n  const slackHome = createSlackHomeWorker(mongoStores);\n  const appContext: AppContext = { mongoStores, slackHome };\n  appRouter(app, appContext);\n  initApp(app, appContext);\n  slackHome.scheduleUpdateAllOrgs((id: number) => app.auth(id));\n});\n"],"names":["process","env","MONGO_DB","Error","init","config","Map","MONGO_HOST","MONGO_PORT","MONGO_USER","set","MONGO_PASSWORD","connection","MongoConnection","userDmSettings","MongoStore","collection","then","coll","createIndex","userId","orgId","unique","users","login","orgs","orgMembers","orgTeams","slackSentMessages","type","typeId","deleteMany","created","$lt","Date","now","automergeLogs","repoFullName","prs","Layout","lang","title","REVIEWFLOW_NAME","children","padding","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","create","client","id","secret","auth","tokenHost","tokenPath","authorizePath","AUTH_SECRET_KEY","signPromisified","promisify","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","host","hostname","PORT","readAuthCookie","strategy","cookie","cookies","algorithm","audience","headers","getAuthInfoFromCookie","res","authInfo","clearCookie","undefined","getUser","redirect","api","Octokit","accessToken","router","get","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error","send","error_description","code","result","getToken","renderToStaticMarkup","access_token","octokit","user","getAuthenticated","data","time","token","expiresIn","httpOnly","repository","repos","list","per_page","map","repo","owner","name","length","params","status","permissions","admin","data2","apps","getRepoInstallation","catch","err","home","listForAuthenticatedUser","display","flexGrow","org","syncTeams","mongoStores","github","orgEmbed","teamIds","Promise","all","paginate","teams","endpoint","merge","team","push","upsertOne","_id","slug","description","$not","$in","syncOrg","installationId","orgInStore","memberIds","listMembers","member","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","groups","waitForGroups","labels","color","review","ci","inProgress","succeeded","failed","ignoreRepoPattern","autoMergeRenovateWithSkipCi","regExp","summary","bot","statusInfoFromMatch","match","issue","inBody","url","botUsers","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","CamilSadiki","busser","abarreir","arthurflachs","damienorny","darame07","Pixy","Radyum","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","vlbr","mdcarter","ChibiBlasphem","design","jperriere","CoralineColasse","Lenamari","ops","logins","backends","frontends","duplicate","documentation","rfc","bug","enhancement","question","wontfix","needsReview","requested","changesRequested","approved","tilap","chrisconfig","accountConfigs","ornikar","reviewflow","defaultDmSettings","cache","getDefaultDmSettings","accountConfig","defaultConfig","updateCache","newSettings","orgCache","getUserDmSettings","orgDefaultDmSettings","userDmSettingsConfig","findOne","settings","dmMessages","orgSettings","find","o","findByKey","installation","getOrgInstallation","width","Object","entries","key","__html","patch","bodyParser","json","body","updateOne","$set","value","updated","$setOnInsert","upsert","syncUser","userInfo","userSettings","u","getUserInstallation","username","appRouter","app","route","use","cookieParser","fetchPr","context","prNumber","prResult","pulls","pull_number","options","optionsRegexps","option","regexp","RegExp","optionsLabels","label","parseOptions","content","defaultOptions","reduce","acc","exec","parseCommitNotes","commitNotes","replace","trim","parseBody","defaultCommentBody","toMarkdownOptions","join","toMarkdownInfos","infos","info","getReplacement","updateOptions","optionsToUpdate","internalUpdateBodyOptionsAndInfos","infosAndCommitNotesParagraph","createCommentBody","updateCommentOptions","commentBody","updatedOptions","updateCommentBodyInfos","updateCommentBodyCommitsNotes","removeDeprecatedReviewflowInPrBody","prBody","createReviewflowComment","pr","issues","createComment","issue_number","number","getReviewflowCommentById","commentId","getComment","comment_id","getReviewflowPr","appContext","repoContext","reviewflowCommentPromise","prEmbed","comment","reviewflowPr","insertOne","account","accountEmbed","repoEmbed","existing","partialUpdateByKey","createPullRequestContextFromWebhook","updatedPr","createPullRequestContextFromPullResponse","console","log","fetchPullRequestAndCreateContext","prContext","hasLabelInPR","prLabels","some","l","hasFailedStatusOrChecks","checks","listForRef","ref","head","sha","failedChecks","check_runs","filter","check","conclusion","combinedStatus","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossibleOptionalPrContext","autoMergeLabel","removePrFromAutomergeQueue","isRenovatePr","startsWith","createMergeLockPrFromPr","branch","addLog","full_name","isRenovate","mergeableState","mergeable_state","hasNeedsReview","hasRequestedReview","requested_reviewers","lockedPr","getMergeLockedPr","String","prId","pushAutomergeQueue","addMergeLockPr","mergeable","merged","reschedule","includes","renovateRebaseBody","update","base","parsedBody","mergeResult","merge_method","commit_title","commit_message","debug","Boolean","message","autoMergeIfPossible","ExcludesFalsy","getLabelsForRepo","listLabelsForRepo","initRepoLabels","finalLabels","labelKey","labelConfig","labelColor","slice","existingLabel","createLabel","current_name","updateLabel","getKeys","keys","contextIssue","object","payload","pull_request","contextPr","emojiRegex","createEmojiRegex","getEmojiFromRepoDescription","emoji","voidTeamSlack","mention","postMessage","resolve","updateMessage","deleteMessage","addReaction","updateHome","initTeamSlack","slackHome","slackToken","githubLoginToSlackEmail","groupName","assign","slackEmails","values","slackClient","WebClient","membersInDb","findAll","members","foundEmailMembers","forEach","email","m","slack","im","missingEmails","memberEmailToMemberId","page","profile","has","partialUpdateMany","conversations","open","channel","membersMap","getUserFromGithubLogin","githubLogin","category","githubId","DRY_RUN","chat","text","blocks","attachments","secondaryBlocks","thread_ts","ts","ok","delete","reactions","add","timestamp","scheduleUpdateMember","getOrCreateAccount","accountInfo","initAccountContext","slackPromise","githubLoginToGroup","githubLoginToTeams","teamName","getReviewerGroups","githubLogins","Set","lock","Lock","accountType","callback","reject","logInfos","createReleaseCallback","release","getReviewerGroup","getTeamsForLogin","approveShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","group","accountContextsPromise","accountContexts","obtainAccountContext","existingAccountContext","existingPromise","promise","accountContext","initRepoContext","fullName","repoEmoji","reviewGroupNames","needsReviewLabelIds","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lockMergePr","automergeQueue","lockPR","prOPrIssueId","setTimeout","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","reason","shift","previousLength","p","repoContextsPromise","repoContexts","shouldIgnoreRepo","repoName","ignoreRepoRegexp","test","obtainRepoContext","existingRepoContext","warn","createRepoHandler","createPullRequestHandler","getPullRequestInPayload","callbackPr","callbackBeforeLock","pullRequest","createPullRequestsHandler","getPrs","autoAssignPRToCreator","assignees","addAssignees","cleanTitle","s","arg1","arg2","toUpperCase","toLowerCase","cleanNewLines","checkIfHasDiff","text1","text2","updatePrIfNeeded","hasDiffInTitle","hasDiffInBody","promises","diff","originalTitle","originalBody","updatedBody","hasBodyDiff","updateComment","createStatus","target_url","syncLabel","shouldHaveLabel","prHasLabel","onRemove","onAdd","removeLabel","response","addLabels","calcDefaultOptions","featureBranchLabel","automergeLabel","skipCiLabel","prHasFeatureBranchLabel","prHasSkipCiLabel","prHasAutoMergeLabel","syncLabelsAfterCommentBodyEdited","readCommitsAndUpdateInfos","commits","listCommits","conventionalCommits","c","parse","commit","breakingChangesCommits","index","breakingChangesNotes","notes","note","breakingChangesLabel","newCommentBody","editOpenedPR","shouldUpdateCommentBodyInfos","previousSha","isPrFromBot","errorRule","rule","date","toISOString","hasLintPrCheck","head_sha","started_at","completed_at","output","commentBodyInfos","shouldCreateCommentBody","addStatusCheck","hasPrCheck","created_at","updateStatusCheckFromLabels","createFailedStatusCheck","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","size","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","opened","on","fromRenovate","closed","isNotFork","git","deleteRef","assignee","createLink","createPrLink","html_url","createMrkdwnSectionBlock","createSlackMessageWithSecondaryBlock","secondaryBlockText","getReviewersAndReviewStates","userIds","reviewers","reviewStatesByUser","listReviews","reviews","reviewStates","dismissed","reviewer","issueParser","actions","issuePrefixes","parseMentions","mentions","getPullRequestFromPayload","checkIfUserIsBot","checkIfIsThisBot","getDiscussion","in_reply_to_id","listComments","getMentions","discussion","getUsersInThread","prCommentCreated","saveInDb","results","filtered","sentTo","pull_request_review_id","commentByOwner","followers","f","usersInThread","prUrl","slackUtils","ownerMention","commentLink","createMessage","toOwner","ownerPart","promisesOwner","promisesNotOwner","slackifiedBody","slackifyMarkdown","isBotUser","slackMessage","follower","prCommentEditedOrDeleted","sender","action","updatedPrContext","closed_at","criteria","sentMessages","sentMessage","reviewRequested","requested_reviewer","reviewRequestRemoved","hasRequestedReviewsForGroup","hasChangesRequestedInReviews","hasApprovedInReviews","sentMessageRequestedReview","split","deleteOne","getEmojiFromState","reviewSubmitted","reviewUrl","reviewByOwner","newLabels","reviewDismissed","hasApprovals","synchronize","before","edited","prContextUpdated","updatePrCommentBody","newBody","isFromRenovate","labelsChanged","autoMergeSkipCiLabel","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","handlerOrgChange","organization","createHandlerOrgChange","repoEdited","initApp","openedHandler","editedHandler","closedHandler","reopenedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchronizeHandler","commentCreated","commentEditedOrDeleted","createSlackHomeWorker","updateMember","prsWithRequestedReviews","prsToMerge","prsWithRequestedChanges","prsInDraft","search","issuesAndPullRequests","q","sort","order","buildBlocks","total_count","items","repository_url","prFullName","elements","draft","image_url","avatar_url","alt_text","flat","views","publish","user_id","view","workerInterval","queueKeys","queue","stop","clearInterval","start","setInterval","item","memberId","scheduleUpdateOrg","cursor","scheduleUpdateAllOrgs","Probot","run","mongoInit"],"mappings":"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"}