{"version":3,"file":"index-node10.cjs.js","sources":["../src/orgsConfigs/ornikar.ts","../src/orgsConfigs/christophehurpeau.ts","../src/orgsConfigs/index.ts","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/orgContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reopened.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/actions/updatePrBody.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/utils/random.ts","../src/appRouter.tsx","../src/index.ts"],"sourcesContent":["/* eslint-disable max-lines */\n\nimport { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'archis' | 'frontends' | 'backends'> = {\n  slackToken: process.env.ORNIKAR_SLACK_TOKEN,\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z]{2,}-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      /* archi */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      rigma: `romain${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      tilap: `julien.lavinh${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    archis: {\n      logins: ['JulienBreux'],\n      labels: ['teams/archi'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'rigma',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'tilap',\n        'vlbr',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/archi': {\n        name: 'archi',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n      'merge/skip-ci': {\n        name: 'automerge/skip-ci',\n        color: '#e1e8ed',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const orgsConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n};\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","export type Options =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: Options[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'autoMergeWithSkipCi',\n    label: 'Auto merge with `[skip ci]`',\n  },\n  {\n    name: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->)(.*)$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\nconst parseOptions = (\n  content: string,\n  defaultConfig: Record<Options, boolean>,\n): Record<Options, boolean> => {\n  return optionsRegexps.reduce(\n    (acc, { name, regexp }) => {\n      const match = regexp.exec(content);\n      acc[name] = !match\n        ? defaultConfig[name] || false\n        : match[1] === 'x' || match[1] === 'X';\n      return acc;\n    },\n    {} as any,\n  ) as Record<Options, boolean>;\n};\n\nexport const parseBody = (\n  description: string,\n  defaultConfig: Record<Options, boolean>,\n) => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol, reviewflowContent, ending] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      ending,\n      reviewflowContentCol: reviewflowContent,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n      options: parseOptions(reviewFlowCol, defaultConfig),\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options: parseOptions(reviewflowContentCol, defaultConfig),\n  };\n};\n","/* eslint-disable max-lines */\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBody } from './utils/parseBody';\n\nconst hasFailedStatusOrChecks = async (\n  pr: PullsGetResponse,\n  context: Context<any>,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  pr: PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n  if (!autoMergeLabel) return false;\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (!prLabels.find((l): boolean => l.id === autoMergeLabel.id)) {\n    context.log.debug('automerge not possible: no label', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  if (pr.state !== 'open') {\n    context.log.debug('automerge not possible: pr is not opened', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && lockedPr.number !== pr.number) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info('automerge not possible: already merged pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${\n      pr.mergeable_state\n    }`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        if (pr.body.includes('<!-- renovate-rebase -->')) {\n          if (pr.body.includes('[x] <!-- renovate-rebase -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- renovate-rebase -->',\n            '[x] <!-- renovate-rebase -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${\n          pr.mergeable_state\n        }`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(pr, context)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${\n        pr.mergeable_state\n      }`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n\n    const parsedBody = parseBody(pr.body, repoContext.config.prDefaultOptions);\n    const options =\n      (parsedBody && parsedBody.options) || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: `${pr.title}${\n        options.autoMergeWithSkipCi ? ' [skip ci]' : ''\n      } (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = `Generated by review-flow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor // ||\n      // TODO: description is never updated\n      // existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","export const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { getKeys } from './utils';\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  postMessage: (githubLogin: string, text: string) => Promise<void>;\n  prLink: <T extends Webhooks.WebhookPayloadPullRequest>(\n    pr: PullsGetResponse,\n    context: Context<T>,\n  ) => string;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<TeamSlack> => {\n  if (!config.slackToken) {\n    return {\n      mention: (): string => '',\n      postMessage: (): Promise<void> => Promise.resolve(),\n      prLink: (): string => '',\n    };\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackClient = new WebClient(config.slackToken);\n  const allUsers: any = await slackClient.users.list({ limit: 200 });\n  const members: [string, { member: any; im: any }][] = Object.values(\n    githubLoginToSlackEmail,\n  )\n    .map((email) => {\n      const member = allUsers.members.find(\n        (user: any) => user.profile.email === email,\n      );\n      if (!member) {\n        console.warn(`Could not find user ${email}`);\n        return;\n      }\n      return [email, { member, im: undefined }] as [\n        string,\n        { member: any; im: any }\n      ];\n    })\n    .filter(ExcludesFalsy);\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string): string => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (githubLogin: string, text: string): Promise<void> => {\n      context.log.debug('send slack', { githubLogin, text });\n      if (process.env.DRY_RUN) return;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return;\n      await slackClient.chat.postMessage({\n        username: process.env.REVIEWFLOW_NAME,\n        channel: user.im.id,\n        text,\n      });\n    },\n    prLink: <T extends Webhooks.WebhookPayloadPullRequest>(\n      pr: PullsGetResponse,\n      context: Context<T>,\n    ): string => {\n      return `<${pr.html_url}|${context.payload.repository.name}#${pr.number}>`;\n    },\n  };\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface OrgContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n}\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nconst initTeamContext = async (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const slackPromise = initTeamSlack(context, config);\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  return {\n    config,\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    getTeamsForLogin: (githubLogin) =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst orgContextsPromise = new Map();\nconst orgContexts = new Map();\n\nexport const obtainOrgContext = (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const owner = context.payload.repository.owner;\n\n  const existingTeamContext = orgContexts.get(owner.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = orgContextsPromise.get(owner.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(context, config);\n  orgContextsPromise.set(owner.login, promise);\n\n  return promise.then((orgContext) => {\n    orgContextsPromise.delete(owner.login);\n    orgContexts.set(owner.login, orgContext);\n    return orgContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { orgsConfigs, Config } from '../orgsConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainOrgContext, OrgContext } from './orgContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(context: Context<any>, prNumber: number): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport type RepoContext<GroupNames extends string = any> = OrgContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const orgContext = await obtainOrgContext(context, config);\n  const repoContext = Object.create(orgContext);\n\n  const [labels] = await Promise.all([initRepoLabels(context, config)]);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      console.log('lock: try to lock pr', { prIdOrIds });\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        console.log('lock: lock acquired', { prIdOrIds });\n        try {\n          await callback();\n        } catch (err) {\n          console.log('lock: release pr (with error)', { prIdOrIds });\n          release();\n          reject(err);\n          return;\n        }\n        console.log('lock: release pr', { prIdOrIds });\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', () => {\n        return lockPROrPRS(String(pr.id), async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(prResult.data, context, repoContext);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', pr);\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (context, prNumber: number | string): void => {\n      context.log('merge lock: remove', { prNumber });\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log('merge lock: next', { lockMergePr });\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const obtainRepoContext = (\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  if (\n    repo.name === 'reviewflow-test' &&\n    process.env.REVIEWFLOW_NAME !== 'reviewflow-test'\n  ) {\n    console.warn('repo ignored', { owner: repo.owner, name: repo.name });\n    return null;\n  }\n  const owner = repo.owner;\n  if (!orgsConfigs[owner.login]) {\n    console.warn(owner.login, Object.keys(orgsConfigs));\n    return null;\n  }\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initRepoContext(context, orgsConfigs[owner.login]);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { obtainRepoContext, RepoContext } from '../context/repoContext';\n\nexport type PRHandler<T = any> = (\n  pr: PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => Promise<void>;\n\nexport type CallbackWithPRAndRepoContext = (\n  pr: PullsGetResponse,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  callback: CallbackWithPRAndRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  repoContext.lockPROrPRS(String(context.payload.pull_request.id), async () => {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: context.payload.pull_request.number,\n      }),\n    );\n\n    await callback(prResult.data, repoContext);\n  });\n};\n\ntype CallbackPRAndContextAndRepoContext<T> = (\n  pr: PullsGetResponse,\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  callback: CallbackPRAndContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(context, (pr, repoContext) =>\n    callback(pr, context, repoContext),\n  );\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestsChange = <T>(\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(prs.map((pr) => String(pr.id)), () =>\n    callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PRHandler } from '../utils';\n\nexport const autoAssignPRToCreator: PRHandler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (pr, context, repoContext) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    context.issue({\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z]+)[- ](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../orgsConfigs/types';\nimport { parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  body: string;\n  options?: Record<Options, boolean>;\n}\n\nexport const updateBody = (\n  body: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n  updateOptions?: Partial<Record<Options, boolean>>,\n): UpdatedBodyWithOptions => {\n  const parsed = parseBody(body, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return { body };\n  }\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  // eslint-disable-next-line no-nested-ternary\n  const infosParagraph = !infos\n    ? reviewflowContentCol.replace(\n        // eslint-disable-next-line unicorn/no-unsafe-regex\n        /^\\s*(?:(#### Infos:.*)?#### Options:)?.*$/s,\n        '$1',\n      )\n    : infos.length !== 0\n    ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n`\n    : '';\n\n  const updatedOptions = !updateOptions\n    ? options\n    : { ...options, ...updateOptions };\n\n  return {\n    options: updatedOptions,\n    body: `${content}${reviewflowContentColPrefix}\n${infosParagraph}#### Options:\n${toMarkdownOptions(updatedOptions)}\n${reviewflowContentColSuffix}${ending || ''}`,\n  };\n};\n","/* eslint-disable max-lines */\nimport { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { StatusError, StatusInfo } from '../../orgsConfigs/types';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const editOpenedPR = async (\n  pr: PullsGetResponse,\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<{ skipAutoMerge: boolean }> => {\n  const repo = context.payload.repository;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return { skipAutoMerge: true };\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(pr.title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check): boolean => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(({ name, error, info }) =>\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.REVIEWFLOW_NAME}/${name}`,\n            sha: pr.head.sha,\n            state: (error ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: error ? undefined : (info as StatusInfo).url,\n            description: error ? error.title : (info as StatusInfo).title,\n          }),\n        ),\n      ),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck &&\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            sha: pr.head.sha,\n            state: (errorRule ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: undefined,\n            description: errorRule\n              ? errorRule.error.title\n              : '✓ Your PR is valid',\n          }),\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n  const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n  const prHasFeatureBranchLabel = Boolean(\n    featureBranchLabel &&\n      pr.labels.find((label): boolean => label.id === featureBranchLabel.id),\n  );\n\n  const prHasSkipCiLabel = Boolean(\n    skipCiLabel &&\n      pr.labels.find((label): boolean => label.id === skipCiLabel.id),\n  );\n\n  const prHasAutoMergeLabel = Boolean(\n    automergeLabel &&\n      pr.labels.find((label): boolean => label.id === automergeLabel.id),\n  );\n\n  const defaultOptions = {\n    ...repoContext.config.prDefaultOptions,\n    featureBranch: prHasFeatureBranchLabel,\n    autoMergeWithSkipCi: prHasSkipCiLabel,\n    autoMerge: prHasAutoMergeLabel,\n  };\n\n  const { body, options } = updateBody(pr.body, defaultOptions, statuses\n    .filter((status) => status.info && status.info.inBody)\n    .map((status) => status.info) as StatusInfo[]);\n\n  const hasDiffInTitle = pr.title !== title;\n  const hasDiffInBody = pr.body !== body;\n  if (hasDiffInTitle || hasDiffInBody) {\n    const update: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      update.title = title;\n      pr.title = title;\n    }\n    if (hasDiffInBody) {\n      update.body = body;\n      pr.body = body;\n    }\n\n    await context.github.issues.update(context.issue(update));\n  }\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    const syncLabel = async (\n      label: any,\n      prHasLabel: boolean,\n      optionKey: keyof typeof options,\n    ) => {\n      if (prHasLabel && !options[optionKey]) {\n        await context.github.issues.removeLabel(\n          context.issue({ name: label.name }),\n        );\n      }\n      if (options[optionKey] && !prHasLabel) {\n        await context.github.issues.addLabels(\n          context.issue({ labels: [label.name] }),\n        );\n      }\n    };\n\n    if (featureBranchLabel) {\n      await syncLabel(\n        featureBranchLabel,\n        prHasFeatureBranchLabel,\n        'featureBranch',\n      );\n    }\n\n    if (skipCiLabel) {\n      await syncLabel(skipCiLabel, prHasSkipCiLabel, 'autoMergeWithSkipCi');\n    }\n\n    if (automergeLabel) {\n      if (prHasAutoMergeLabel && !options.autoMerge) {\n        await context.github.issues.removeLabel(\n          context.issue({ name: automergeLabel.name }),\n        );\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n      }\n      if (options.autoMerge && !prHasAutoMergeLabel) {\n        const result = await context.github.issues.addLabels(\n          context.issue({ labels: [automergeLabel.name] }),\n        );\n        await autoMergeIfPossible(pr, context, repoContext, result.data);\n      }\n      return { skipAutoMerge: true };\n    }\n  }\n\n  return { skipAutoMerge: false };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\n\nconst addStatusCheck = async function<\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n): Promise<void> {\n  const hasPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check) => check.name === process.env.REVIEWFLOW_NAME,\n  );\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else {\n    await context.github.repos.createStatus(\n      context.repo({\n        context: process.env.REVIEWFLOW_NAME,\n        sha: pr.head.sha,\n        state,\n        target_url: undefined,\n        description,\n      }),\n    );\n  }\n};\n\nconst createFailedStatusCheck = <E extends Webhooks.WebhookPayloadPullRequest>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  description: string,\n): Promise<void> =>\n  addStatusCheck(pr, context, {\n    state: 'failure',\n    description,\n  });\n\nexport const updateStatusCheckFromLabels = (\n  pr: PullsGetResponse,\n  context: Context<any>,\n  repoContext: RepoContext,\n  labels: LabelResponse[] = pr.labels || [],\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l && l.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      pr,\n      context,\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      pr,\n      context,\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      pr,\n      context,\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        pr,\n        context,\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(pr, context, {\n    state: 'success',\n    description: '✓ PR ready to merge !',\n  });\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../orgsConfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends Webhooks.WebhookPayloadPullRequest,\n  GroupNames extends string = any\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN) return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          context.issue({\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          const result = await context.github.issues.removeLabel(\n            context.issue({\n              name: toDeleteName,\n            }),\n          );\n          prLabels = result.data;\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        context.issue({\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(pr, context, repoContext, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { PullsGetResponse } from '@octokit/rest';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\n\nexport const autoApproveAndAutoMerge = async (\n  pr: PullsGetResponse,\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = repoContext.labels['code/approved'];\n  if (pr.labels.find((l): boolean => l.id === codeApprovedLabel.id)) {\n    await context.github.pulls.createReview(\n      context.issue({ event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(pr, context, repoContext);\n    return true;\n  }\n\n  return false;\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\n\nexport default function opened(app: Application): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const fromRenovate = pr.head.ref.startsWith('renovate/');\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(pr, context, repoContext),\n          editOpenedPR(pr, context, repoContext),\n          fromRenovate\n            ? autoApproveAndAutoMerge(pr, context, repoContext).then(\n                async (approved: boolean): Promise<void> => {\n                  if (!approved) {\n                    await updateReviewStatus(pr, context, repoContext, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(pr, context, repoContext, 'dev', {\n                add: ['needsReview'],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBody } from './actions/utils/parseBody';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id &&\n            parseBody(pr.body, repoContext.config.prDefaultOptions);\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            parsedBody && parsedBody.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            updateReviewStatus(pr, context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.reopened',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        await Promise.all([\n          updateReviewStatus(pr, context, repoContext, 'dev', {\n            add: ['needsReview'],\n          }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(app: Application): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        // ignore if sender is self (dismissed review rerequest review)\n        if (sender.type === 'Bot') return;\n\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup &&\n              review.state === 'REQUEST_CHANGES' &&\n              // In case this is a rerequest for review\n              review.user.login !== reviewer.login,\n          );\n\n          if (!hasChangesRequestedInReviews) {\n            await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n              add: ['needsReview', !shouldWait && 'requested'],\n              remove: ['approved', 'changesRequested'],\n            });\n          }\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:eyes: ${repoContext.slack.mention(\n              sender.login,\n            )} requests your review on ${repoContext.slack.prLink(\n              pr,\n              context,\n            )} !\\n> ${pr.title}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequestRemoved(app: Application): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const hasApprovedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'APPROVED',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n            ],\n          });\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:skull_and_crossbones: ${repoContext.slack.mention(\n              sender.login,\n            )} removed the request for your review on ${repoContext.slack.prLink(\n              pr,\n              context,\n            )}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewSubmitted(app: Application): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const { user: reviewer, state } = (context.payload as any).review;\n        if (pr.user.login === reviewer.login) return;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        let merged;\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n              // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n              // includesWaitForGroups: true,\n            },\n          );\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            state === 'approved';\n\n          const newLabels = await updateReviewStatus(\n            pr,\n            context,\n            repoContext,\n            reviewerGroup,\n            {\n              add: [\n                approved && 'approved',\n                state === 'changes_requested' && 'changesRequested',\n              ],\n              remove: [\n                approved && 'needsReview',\n                !(\n                  hasRequestedReviewsForGroup || state === 'changes_requested'\n                ) && 'requested',\n                state === 'approved' &&\n                  !hasChangesRequestedInReviews &&\n                  'changesRequested',\n                state === 'changes_requested' && 'approved',\n              ],\n            },\n          );\n\n          if (approved && !hasChangesRequestedInReviews) {\n            merged = await autoMergeIfPossible(\n              pr,\n              context,\n              repoContext,\n              newLabels,\n            );\n          }\n        }\n\n        const mention = repoContext.slack.mention(reviewer.login);\n        const prUrl = repoContext.slack.prLink(pr, context);\n\n        const message = (() => {\n          if (state === 'changes_requested') {\n            return `:x: ${mention} requests changes on ${prUrl}`;\n          }\n          if (state === 'approved') {\n            return `:clap: :white_check_mark: ${mention} approves ${prUrl}${\n              merged ? ' and PR is merged :tada:' : ''\n            }`;\n          }\n          return `:speech_balloon: ${mention} commented on ${prUrl}`;\n        })();\n\n        repoContext.slack.postMessage(pr.user.login, message);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewDismissed(app: Application): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          await updateReviewStatus(pr, context, repoContext, reviewerGroup, {\n            add: ['needsReview', 'requested'],\n            remove: [\n              !hasChangesRequestedInReviews && 'changesRequested',\n              'approved',\n            ],\n          });\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              pr.user.login,\n              `:skull: ${repoContext.slack.mention(\n                reviewer.login,\n              )} dismissed his review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            );\n          } else {\n            repoContext.slack.postMessage(\n              reviewer.login,\n              `:skull: ${repoContext.slack.mention(\n                sender.login,\n              )} dismissed your review on ${repoContext.slack.prLink(\n                pr,\n                context,\n              )}`,\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function synchronize(app: Application): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n\n        await Promise.all([\n          editOpenedPR(pr, context, repoContext),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(pr, context, repoContext),\n          // call autoMergeIfPossible to re-add to the queue when push is fixed\n          autoMergeIfPossible(pr, context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(app: Application): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      async (pr, context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        if (\n          sender.type === 'Bot' &&\n          sender.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n        ) {\n          return;\n        }\n\n        const { skipAutoMerge } = await editOpenedPR(pr, context, repoContext);\n        if (!skipAutoMerge) await autoMergeIfPossible(pr, context, repoContext);\n      },\n    ),\n  );\n}\n","import { PullsGetResponse } from '@octokit/rest';\nimport Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateBody } from './utils/updateBody';\nimport { Options } from './utils/prOptions';\n\nexport const updatePrBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  pr: PullsGetResponse,\n  context: Context<E>,\n  repoContext: RepoContext,\n  updateOptions: Partial<Record<Options, boolean>>,\n): Promise<void> => {\n  const prBody = pr.body;\n  const { body } = updateBody(\n    prBody,\n    repoContext.config.prDefaultOptions,\n    undefined,\n    updateOptions,\n  );\n\n  if (body !== prBody) {\n    await context.github.pulls.update(context.issue({ body }));\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrBody } from './actions/updatePrBody';\n\nexport default function labelsChanged(app: Application): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context: Context<Webhooks.WebhookPayloadPullRequest>) => {\n      const sender = context.payload.sender;\n      const fromRenovate =\n        sender.type === 'Bot' && sender.login === 'renovate[bot]';\n      context.payload.pull_request.head.ref.startsWith('renovate/');\n\n      if (sender.type === 'Bot' && !fromRenovate) {\n        return;\n      }\n\n      await handlerPullRequestChange(context, async (pr, repoContext) => {\n        const label = (context.payload as any).label;\n        if (fromRenovate) {\n          const codeApprovedLabel = repoContext.labels['code/approved'];\n          const autoMergeLabel = repoContext.labels['merge/automerge'];\n          const autoMergeSkipCiLabel = repoContext.labels['merge/skip-ci'];\n          if (context.payload.action === 'labeled') {\n            if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n              // const { data: reviews } = await context.github.pulls.listReviews(\n              //   context.issue({ per_page: 1 }),\n              // );\n              // if (reviews.length !== 0) {\n              await context.github.pulls.createReview(\n                context.issue({ event: 'APPROVE' }),\n              );\n              if (autoMergeSkipCiLabel) {\n                await context.github.issues.addLabels(\n                  context.issue({ labels: [autoMergeSkipCiLabel.name] }),\n                );\n              }\n              await updateStatusCheckFromLabels(pr, context, repoContext);\n              await updatePrBody(pr, context, repoContext, {\n                autoMergeWithSkipCi: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                autoMerge:\n                  autoMergeLabel &&\n                  pr.labels.find((l): boolean => l.id === autoMergeLabel.id)\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMerge,\n              });\n              // }\n            } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n              await updatePrBody(pr, context, repoContext, {\n                autoMerge: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                autoMergeWithSkipCi:\n                  codeApprovedLabel &&\n                  pr.labels.find((l): boolean => l.id === codeApprovedLabel.id)\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n              });\n            }\n            await autoMergeIfPossible(pr, context, repoContext);\n          }\n          return;\n        }\n\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              context.issue({ name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              context.issue({ labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(pr, context, repoContext);\n\n        const featureBranchLabel = repoContext.labels['feature-branch'];\n        const automergeLabel = repoContext.labels['merge/automerge'];\n        const skipCiLabel = repoContext.labels['merge/skip-ci'];\n\n        const option = (() => {\n          if (featureBranchLabel && label.id === automergeLabel.id)\n            return 'featureBranch';\n          if (automergeLabel && label.id === automergeLabel.id)\n            return 'autoMerge';\n          if (skipCiLabel && label.id === skipCiLabel.id)\n            return 'autoMergeWithSkipCi';\n          return null;\n        })();\n\n        if (option) {\n          await updatePrBody(pr, context, repoContext, {\n            [option]: context.payload.action === 'labeled',\n          });\n        } else if (context.payload.action === 'labeled') {\n          if (\n            repoContext.labels['merge/automerge'] &&\n            label.id === repoContext.labels['merge/automerge'].id\n          ) {\n            await autoMergeIfPossible(pr, context, repoContext);\n          }\n        }\n      });\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(app: Application): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(app: Application): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(prResult.data, context, repoContext);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(app: Application): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (isSameBranch(context, lockedPr)) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","// import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { MongoConnection } from 'liwi-mongo';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const config = new Map([\n    ['host', process.env.MONGO_HOST || 'localhost'],\n    ['port', process.env.MONGO_PORT || '27017'],\n    ['database', process.env.MONGO_DB as string],\n  ]);\n  if (process.env.MONGO_USER) {\n    config.set('user', process.env.MONGO_USER);\n    config.set('password', process.env.MONGO_PASSWORD as string);\n  }\n  const connection = new MongoConnection(config);\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  // return { connection, prEvents };\n  return { connection };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>{children}</body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { randomBytes } from 'crypto';\nimport { promisify } from 'util';\n\nconst randomBytesPromisified = promisify(randomBytes);\n\nexport async function randomBase64(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('base64');\n}\n\nexport async function randomHex(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('hex');\n}\n","/* eslint-disable max-lines */\n\nimport { promisify } from 'util';\nimport Octokit from '@octokit/rest';\nimport { Request, Response } from 'express';\nimport cookieParser from 'cookie-parser';\nimport { sign, verify } from 'jsonwebtoken';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { Application } from 'probot';\nimport { MongoStores } from './mongo';\nimport Layout from './views/Layout';\nimport * as githubAuth from './auth/github';\nimport { randomHex } from './utils/random';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request, strategy: string) => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/${strategy}/login-response`;\n};\n\ninterface AuthInfo {\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nexport default async function appRouter(\n  app: Application,\n  mongoStuff: MongoStores,\n): Promise<void> {\n  const router = app.route('/app');\n  const api = await app.auth();\n  router.use(cookieParser());\n\n  router.get('/', (req, res) => {\n    res.redirect('/gh');\n  });\n\n  router.get('/gh', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a href={`/gh/repository/${repo.owner.login}/${repo.name}`}>\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          {data.length === 100 && (\n            <div>We currently have a limit to 100 repositories</div>\n          )}\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/gh/login', async (req: Request, res: Response) => {\n    const strategy = 'gh';\n    if (await readAuthCookie(req, strategy)) {\n      return res.redirect('/gh');\n    }\n\n    const state = await randomHex(8);\n    res.cookie(`auth_${strategy}_${state}`, strategy, {\n      maxAge: 10 * 60 * 1000,\n      httpOnly: true,\n      secure,\n    });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req, strategy),\n      scope: 'read:user,repo',\n      state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/gh/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code = req.query.code;\n    const state = req.query.state;\n    const cookieName = `auth_${strategy}_${state}`;\n    const cookie = req.cookies && req.cookies[cookieName];\n    if (!cookie) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        '<html><body>No cookie for this state. <a href=\"/gh/login\">Retry ?</a></body></html>',\n      );\n      return;\n    }\n    res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req, strategy),\n    });\n\n    if (!result) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/gh/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const login = user.data.login;\n\n    const token = await signPromisified(\n      { login, accessToken, time: Date.now() },\n      AUTH_SECRET_KEY,\n      {\n        algorithm: 'HS512',\n        audience: req.headers['user-agent'],\n        expiresIn: '10 days',\n      },\n    );\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/gh');\n  });\n\n  router.get('/gh/repository/:owner/:repository', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      return res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n    }\n\n    if (!data.permissions.admin) {\n      return res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME} {\"isn't\"} installed on this repo. Go\n              to{' '}\n              <a\n                href={`https://github.com/apps/${\n                  process.env.REVIEWFLOW_NAME\n                }/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reopenedHandler from './pr-handlers/reopened';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchromizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application) => {\n  const mongoStores = mongoInit();\n  appRouter(app, mongoStores);\n\n  openedHandler(app);\n  closedHandler(app);\n  reopenedHandler(app);\n  reviewRequestedHandler(app);\n  reviewRequestRemovedHandler(app);\n\n  // app.on('pull_request.closed', async context => {\n\n  // });\n\n  // app.on('pull_request.reopened', async context => {\n\n  // });\n\n  reviewSubmittedHandler(app);\n  reviewDismissedHandler(app);\n  labelsChanged(app);\n  synchromizeHandler(app);\n  editedHandler(app);\n\n  checkrunCompleted(app);\n  checksuiteCompleted(app);\n  status(app);\n});\n"],"names":["config","slackToken","process","env","ORNIKAR_SLACK_TOKEN","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","title","regExp","error","summary","bot","status","statusInfoFromMatch","match","issue","inBody","url","groups","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","abarreir","arthurflachs","rigma","damienorny","darame07","Pixy","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","tilap","vlbr","design","jperriere","CoralineColasse","teams","archis","logins","labels","backends","frontends","waitForGroups","list","name","color","review","ci","inProgress","succeeded","failed","needsReview","requested","changesRequested","approved","orgsConfigs","ornikar","options","optionsRegexps","map","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","defaultConfig","reduce","acc","exec","parseBody","description","reviewFlowCol","reviewflowContent","ending","reviewFlowColMatch","reviewflowContentCol","reviewflowContentColPrefix","reviewflowContentColSuffix","hasFailedStatusOrChecks","pr","context","checks","github","listForRef","repo","ref","head","sha","per_page","failedChecks","data","check_runs","filter","check","conclusion","length","log","info","id","combinedStatus","repos","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossible","repoContext","prLabels","autoMergeLabel","createMergeLockPrFromPr","number","branch","find","l","debug","prId","prNumber","removePrFromAutomergeQueue","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","pushAutomergeQueue","addMergeLockPr","mergeable","undefined","prResult","pulls","get","pull_number","merged","mergeable_state","reschedule","startsWith","body","includes","renovateRebaseBody","replace","issues","update","base","merge","owner","login","parsedBody","mergeResult","merge_method","commit_title","commit_message","Boolean","err","message","initRepoLabels","listLabelsForRepo","finalLabels","labelKey","labelConfig","Object","entries","labelColor","slice","existingLabel","result","createLabel","current_name","updateLabel","getKeys","o","keys","ExcludesFalsy","initTeamSlack","mention","postMessage","Promise","resolve","prLink","githubLoginToSlackEmail","groupName","assign","slackClient","WebClient","allUsers","users","limit","members","values","email","member","user","profile","console","warn","im","open","channel","membersMap","Map","getUserFromGithubLogin","githubLogin","text","DRY_RUN","chat","username","REVIEWFLOW_NAME","html_url","payload","repository","initTeamContext","slackPromise","githubLoginToGroup","forEach","set","githubLoginToTeams","teamName","push","getReviewerGroups","githubLogins","Set","getReviewerGroup","getTeamsForLogin","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","some","group","slack","orgContextsPromise","orgContexts","obtainOrgContext","existingTeamContext","existingPromise","promise","then","orgContext","delete","initRepoContext","create","all","reviewGroupNames","needsReviewLabelIds","key","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lock","Lock","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","callback","reject","createReleaseCallback","release","Error","setTimeout","String","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","value","p","repoContextsPromise","repoContexts","obtainRepoContext","existingRepoContext","handlerPullRequestChange","pull_request","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","type","addAssignees","cleanTitle","trim","s","arg1","arg2","toUpperCase","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","updateBody","updateOptions","parsed","infosParagraph","updatedOptions","editOpenedPR","skipAutoMerge","isPrFromBot","errorRule","rule","date","Date","toISOString","hasLintPrCheck","createStatus","target_url","head_sha","started_at","completed_at","output","featureBranchLabel","automergeLabel","skipCiLabel","prHasFeatureBranchLabel","prHasSkipCiLabel","prHasAutoMergeLabel","defaultOptions","hasDiffInTitle","hasDiffInBody","syncLabel","prHasLabel","optionKey","removeLabel","addLabels","addStatusCheck","hasPrCheck","created_at","createFailedStatusCheck","updateStatusCheckFromLabels","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","existing","team","size","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","opened","app","on","fromRenovate","closed","git","deleteRef","catch","reviewRequested","sender","reviewer","requested_reviewer","reviews","listReviews","hasChangesRequestedInReviews","reviewRequestRemoved","hasRequestedReviewsForGroup","hasApprovedInReviews","reviewSubmitted","newLabels","prUrl","reviewDismissed","synchronize","edited","updatePrBody","prBody","labelsChanged","autoMergeSkipCiLabel","action","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","MONGO_DB","init","MONGO_HOST","MONGO_PORT","MONGO_USER","MONGO_PASSWORD","connection","MongoConnection","Layout","lang","NAME","children","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","client","secret","auth","tokenHost","tokenPath","authorizePath","randomBytesPromisified","promisify","randomBytes","randomHex","buffer","toString","AUTH_SECRET_KEY","signPromisified","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","strategy","host","hostname","PORT","readAuthCookie","cookie","cookies","algorithm","audience","headers","appRouter","router","route","api","use","cookieParser","res","redirect","authInfo","octokit","Octokit","accessToken","send","renderToStaticMarkup","maxAge","httpOnly","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error_description","code","cookieName","clearCookie","getToken","access_token","getAuthenticated","token","time","now","expiresIn","params","permissions","admin","data2","apps","getRepoInstallation","Probot","run","mongoStores","mongoInit","openedHandler","closedHandler","reopenedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchromizeHandler","editedHandler"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAIA,MAAMA,MAAqE,GAAG;EAC5EC,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,mBADoD;EAE5EC,mBAAmB,EAAE,IAFuD;EAG5EC,SAAS,EAAE,IAHiE;EAI5EC,qBAAqB,EAAE,IAJqD;EAK5EC,gBAAgB,EAAE;IAChBC,aAAa,EAAE,KADC;IAEhBC,mBAAmB,EAAE,KAFL;IAGhBC,SAAS,EAAE,KAHK;IAIhBC,gBAAgB,EAAE;GATwD;EAW5EC,OAAO,EAAE;IACPC,KAAK,EAAE,CACL;MACEC,MAAM;gGADR;MAIEC,KAAK,EAAE;QACLF,KAAK,EAAE,8CADF;QAELG,OAAO,EACL;;KARD,EAWL;MACEC,GAAG,EAAE,KADP;MAEEH,MAAM,EAAE,kCAFV;MAGEC,KAAK,EAAE;QACLF,KAAK,EAAE,gCADF;QAELG,OAAO,EAAE;OALb;MAOEE,MAAM,EAAE,YAPV;MAQEC,mBAAmB,EAAGC,KAAD,IAAW;cACxBC,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAnB;;YACIC,KAAK,KAAK,YAAd,EAA4B;iBACnB;YACLR,KAAK,EAAE,UADF;YAELG,OAAO,EAAE;WAFX;;;eAKK;UACLM,MAAM,EAAE,IADH;UAELC,GAAG,EAAG,wCAAuCF,KAAM,EAF9C;UAGLR,KAAK,EAAG,eAAcQ,KAAM,EAHvB;UAILL,OAAO,EAAG,IAAGK,KAAM,0CAAyCA,KAAM;SAJpE;;KA3BC;GAZmE;EAkD5EG,MAAM,EAAE;IACNC,GAAG,EAAE;;MAEHC,WAAW,EAAG,eAAczB,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAF1D;;;MAKHC,QAAQ,EAAG,YAAW3B,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EALpD;MAMHE,YAAY,EAAG,SAAQ5B,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EANrD;MAOHG,KAAK,EAAG,SAAQ7B,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAP9C;MAQHI,UAAU,EAAG,cAAa9B,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EARxD;uBASe,UAAS1B,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EATzD;MAUHK,QAAQ,EAAG,QAAO/B,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAVhD;MAWHM,IAAI,EAAG,gBAAehC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAXpD;;;MAcHO,iBAAiB,EAAG,aAAYjC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAd9D;MAeHQ,WAAW,EAAG,OAAMlC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAflD;MAgBHS,aAAa,EAAG,SAAQnC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAhBtD;MAiBHU,aAAa,EAAG,WAAUpC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAjBxD;MAkBHW,KAAK,EAAG,SAAQrC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAlB9C;MAmBHY,KAAK,EAAG,gBAAetC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAnBrD;MAoBHa,IAAI,EAAG,WAAUvC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB;KArB9C;IAuBNc,MAAM,EAAE;MACNC,SAAS,EAAG,SAAQzC,OAAO,CAACC,GAAR,CAAYyB,oBAAqB,EAD/C;MAENgB,eAAe,EAAG,WAAU1C,OAAO,CAACC,GAAR,CAAYyB,oBAAqB;;GA3EW;EA+E5EiB,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,MAAM,EAAE,CAAC,aAAD,CADF;MAENC,MAAM,EAAE,CAAC,aAAD;KAHL;IAMLC,QAAQ,EAAE;MACRF,MAAM,EAAE,CACN,UADM,EAEN,cAFM,EAGN,OAHM,EAIN,YAJM,EAKN,eALM,EAMN,UANM,EAON,MAPM,CADA;MAURC,MAAM,EAAE,CAAC,eAAD;KAhBL;IAmBLE,SAAS,EAAE;MACTH,MAAM,EAAE,CACN,mBADM,EAEN,aAFM,EAGN,eAHM,EAIN,eAJM,EAKN,OALM,EAMN,OANM,EAON,MAPM,CADC;MAUTC,MAAM,EAAE,CAAC,gBAAD;;GA5GgE;EAgH5EG,aAAa,EAAE;IACbzB,GAAG,EAAE,EADQ;IAEbgB,MAAM,EAAE,CAAC,KAAD;GAlHkE;EAoH5EM,MAAM,EAAE;IACNI,IAAI,EAAE;;;;;;;2BAOiB;QACnBC,IAAI,EAAE,6BADa;QAEnBC,KAAK,EAAE;OATL;+BAWqB;QACvBD,IAAI,EAAE,iCADiB;QAEvBC,KAAK,EAAE;OAbL;gCAesB;QACxBD,IAAI,EAAE,kCADkB;QAExBC,KAAK,EAAE;OAjBL;uBAmBa;QACfD,IAAI,EAAE,yBADS;QAEfC,KAAK,EAAE;OArBL;;;6BAyBmB;QACrBD,IAAI,EAAE,2BADe;QAErBC,KAAK,EAAE;OA3BL;iCA6BuB;QACzBD,IAAI,EAAE,+BADmB;QAEzBC,KAAK,EAAE;OA/BL;kCAiCwB;QAC1BD,IAAI,EAAE,gCADoB;QAE1BC,KAAK,EAAE;OAnCL;yBAqCe;QACjBD,IAAI,EAAE,uBADW;QAEjBC,KAAK,EAAE;OAvCL;;;qBA2CW;QACbD,IAAI,EAAE,OADO;QAEbC,KAAK,EAAE;OA7CL;uBA+Ca;QACfD,IAAI,EAAE,SADS;QAEfC,KAAK,EAAE;OAjDL;wBAmDc;QAChBD,IAAI,EAAE,UADU;QAEhBC,KAAK,EAAE;OArDL;;;yBAyDe;QACjBD,IAAI,EAAE,kBADW;QAEjBC,KAAK,EAAE;OA3DL;uBA6Da;QACfD,IAAI,EAAE,mBADS;QAEfC,KAAK,EAAE;OA/DL;;;wBAmEc;QAChBD,IAAI,EAAE,gBADU;QAEhBC,KAAK,EAAE;;KAtEL;IA0ENC,MAAM,EAAE;MACNC,EAAE,EAAE;QACFC,UAAU,EAAE,gBADV;QAEFC,SAAS,EAAE,YAFT;QAGFC,MAAM,EAAE;OAJJ;MAMNjC,GAAG,EAAE;QACHkC,WAAW,EAAE,mBADV;QAEHC,SAAS,EAAE,uBAFR;QAGHC,gBAAgB,EAAE,wBAHf;QAIHC,QAAQ,EAAE;OAVN;MAYNrB,MAAM,EAAE;QACNkB,WAAW,EAAE,qBADP;QAENC,SAAS,EAAE,yBAFL;QAGNC,gBAAgB,EAAE,0BAHZ;QAINC,QAAQ,EAAE;;;;CA9MlB;;ACFA,MAAM/D,QAA4B,GAAG;EACnCK,mBAAmB,EAAE,IADc;EAEnCC,SAAS,EAAE,IAFwB;EAGnCC,qBAAqB,EAAE,KAHY;EAInCC,gBAAgB,EAAE;IAChBC,aAAa,EAAE,KADC;IAEhBC,mBAAmB,EAAE,KAFL;IAGhBC,SAAS,EAAE,KAHK;IAIhBC,gBAAgB,EAAE;GARe;EAUnCC,OAAO,EAAE;IACPC,KAAK,EAAE,CACL;MACEC,MAAM;gGADR;MAIEC,KAAK,EAAE;QACLF,KAAK,EAAE,8CADF;QAELG,OAAO,EACL;;KARD;GAX0B;EAwBnCQ,MAAM,EAAE;IACNC,GAAG,EAAE;MACHS,iBAAiB,EAAE,wBADhB;0BAEiB,yCAFjB;MAGHK,KAAK,EAAE;;GA5BwB;EA+BnCW,aAAa,EAAE;IACbzB,GAAG,EAAE;GAhC4B;EAkCnCmB,KAAK,EAAE,EAlC4B;EAmCnCG,MAAM,EAAE;IACNI,IAAI,EAAE;;;;;;;2BAOiB;QACnBC,IAAI,EAAE,6BADa;QAEnBC,KAAK,EAAE;OATL;+BAWqB;QACvBD,IAAI,EAAE,iCADiB;QAEvBC,KAAK,EAAE;OAbL;gCAesB;QACxBD,IAAI,EAAE,kCADkB;QAExBC,KAAK,EAAE;OAjBL;uBAmBa;QACfD,IAAI,EAAE,yBADS;QAEfC,KAAK,EAAE;OArBL;;;yBAyBe;QACjBD,IAAI,EAAE,kBADW;QAEjBC,KAAK,EAAE;OA3BL;uBA6Ba;QACfD,IAAI,EAAE,mBADS;QAEfC,KAAK,EAAE;OA/BL;;;wBAmCc;QAChBD,IAAI,EAAE,gBADU;QAEhBC,KAAK,EAAE;;KAtCL;IA0CNC,MAAM,EAAE;MACNC,EAAE,EAAE;QACFC,UAAU,EAAE,gBADV;QAEFC,SAAS,EAAE,YAFT;QAGFC,MAAM,EAAE;OAJJ;MAMNjC,GAAG,EAAE;QACHkC,WAAW,EAAE,mBADV;QAEHC,SAAS,EAAE,uBAFR;QAGHC,gBAAgB,EAAE,wBAHf;QAIHC,QAAQ,EAAE;;;;CAvFlB;;ACOO,MAAMC,WAAwC,GAAG;WACtDC,MADsD;qBAEtD9B;CAFK;;;;;;;ACHA,MAAM+B,OAAkB,GAAG,CAChC,eADgC,EAEhC,qBAFgC,EAGhC,WAHgC,EAIhC,kBAJgC,CAA3B;AAMP,AAAO,MAAMC,cAAmD,GAAGD,OAAO,CAACE,GAAR,CAChEC,MAAD,KAAa;EACXhB,IAAI,EAAEgB,MADK;EAEXC,MAAM,EAAE,IAAIC,MAAJ,CAAY,mCAAkCF,MAAO,MAArD;CAFV,CADiE,CAA5D;AAOP,AAAO,MAAMG,aAAiD,GAAG,CAC/D;EAAEnB,IAAI,EAAE,eAAR;EAAyBoB,KAAK,EAAE;CAD+B,EAE/D;EACEpB,IAAI,EAAE,qBADR;EAEEoB,KAAK,EAAE;CAJsD,EAM/D;EACEpB,IAAI,EAAE,WADR;EAEEoB,KAAK,EACH;CAT2D,EAW/D;EACEpB,IAAI,EAAE,kBADR;EAEEoB,KAAK,EAAE;CAbsD,CAA1D;;ACjBP,MAAMC,YAAY,GAAG,iCAArB;AACA,MAAMC,UAAU,GAAG,8CAAnB;AAEA,MAAMC,UAAU,GAAG,uGAAnB;AACA,MAAMC,mBAAmB,GAAG,qJAA5B;;AAEA,MAAMC,YAAY,GAAG,CACnBC,OADmB,EAEnBC,aAFmB,KAGU;SACtBb,cAAc,CAACc,MAAf,CACL,CAACC,GAAD,EAAM;IAAE7B,IAAF;IAAQiB;GAAd,KAA2B;UACnBjD,KAAK,GAAGiD,MAAM,CAACa,IAAP,CAAYJ,OAAZ,CAAd;IACAG,GAAG,CAAC7B,IAAD,CAAH,GAAY,CAAChC,KAAD,GACR2D,aAAa,CAAC3B,IAAD,CAAb,IAAuB,KADf,GAERhC,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,IAAoBA,KAAK,CAAC,CAAD,CAAL,KAAa,GAFrC;WAGO6D,GAAP;GANG,EAQL,EARK,CAAP;CAJF;;AAgBA,AAAO,MAAME,SAAS,GAAG,CACvBC,WADuB,EAEvBL,aAFuB,KAGpB;QACG3D,KAAK,GAAGuD,UAAU,CAACO,IAAX,CAAgBE,WAAhB,CAAd;MACI,CAAChE,KAAL,EAAY,OAAO,IAAP;QACN,GAAG0D,OAAH,EAAYO,aAAZ,EAA2BC,iBAA3B,EAA8CC,MAA9C,IAAwDnE,KAA9D;QACMoE,kBAAkB,GAAGZ,mBAAmB,CAACM,IAApB,CAAyBG,aAAzB,CAA3B;;MACI,CAACG,kBAAL,EAAyB;WAChB;MACLV,OADK;MAELS,MAFK;MAGLE,oBAAoB,EAAEH,iBAHjB;MAILI,0BAA0B,EAAEjB,YAJvB;MAKLkB,0BAA0B,EAAEjB,UALvB;MAMLT,OAAO,EAAEY,YAAY,CAACQ,aAAD,EAAgBN,aAAhB;KANvB;;;QASI,GAEJW,0BAFI,EAGJD,oBAHI,EAIJE,0BAJI,IAKFH,kBALJ;SAOO;IACLV,OADK;IAELS,MAFK;IAGLE,oBAHK;IAILC,0BAJK;IAKLC,0BALK;IAML1B,OAAO,EAAEY,YAAY,CAACY,oBAAD,EAAuBV,aAAvB;GANvB;CAzBK;;ACxBP;AAGA;AAKA,MAAMa,uBAAuB,GAAG,OAC9BC,EAD8B,EAE9BC,OAF8B,KAG3B;QACGC,MAAM,GAAG,MAAMD,OAAO,CAACE,MAAR,CAAeD,MAAf,CAAsBE,UAAtB,CACnBH,OAAO,CAACI,IAAR,CAAa;IACXC,GAAG,EAAEN,EAAE,CAACO,IAAH,CAAQC,GADF;IAEXC,QAAQ,EAAE;GAFZ,CADmB,CAArB;QAOMC,YAAY,GAAGR,MAAM,CAACS,IAAP,CAAYC,UAAZ,CAAuBC,MAAvB,CAClBC,KAAD,IAAWA,KAAK,CAACC,UAAN,KAAqB,SADb,CAArB;;MAIIL,YAAY,CAACM,MAAb,KAAwB,CAA5B,EAA+B;IAC7Bf,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAkB,2CAA0ClB,EAAE,CAACmB,EAAG,EAAlE,EAAqE;MACnEjB,MAAM,EAAEQ,YAAY,CAACpC,GAAb,CAAkBwC,KAAD,IAAWA,KAAK,CAACvD,IAAlC;KADV;WAGO,IAAP;;;QAGI6D,cAAc,GAAG,MAAMnB,OAAO,CAACE,MAAR,CAAekB,KAAf,CAAqBC,uBAArB,CAC3BrB,OAAO,CAACI,IAAR,CAAa;IACXC,GAAG,EAAEN,EAAE,CAACO,IAAH,CAAQC,GADF;IAEXC,QAAQ,EAAE;GAFZ,CAD2B,CAA7B;;MAOIW,cAAc,CAACT,IAAf,CAAoBY,KAApB,KAA8B,SAAlC,EAA6C;UACrCC,cAAc,GAAGJ,cAAc,CAACT,IAAf,CAAoBc,QAApB,CAA6BZ,MAA7B,CACpBxF,MAAD,IAAYA,MAAM,CAACkG,KAAP,KAAiB,SAAjB,IAA8BlG,MAAM,CAACkG,KAAP,KAAiB,OADtC,CAAvB;IAIAtB,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAkB,4CAA2ClB,EAAE,CAACmB,EAAG,EAAnE,EAAsE;MACpEM,QAAQ,EAAED,cAAc,CAAClD,GAAf,CAAoBjD,MAAD,IAAYA,MAAM,CAAC4E,OAAtC;KADZ;WAIO,IAAP;;;SAGK,KAAP;CAzCF;;AA4CA,AAAO,MAAMyB,mBAAmB,GAAG,OACjC1B,EADiC,EAEjCC,OAFiC,EAGjC0B,WAHiC,EAIjCC,QAAyB,GAAG5B,EAAE,CAAC9C,MAJE,KAKZ;QACf2E,cAAc,GAAGF,WAAW,CAACzE,MAAZ,CAAmB,iBAAnB,CAAvB;MACI,CAAC2E,cAAL,EAAqB,OAAO,KAAP;;QAEfC,uBAAuB,GAAG,OAAO;IACrCX,EAAE,EAAEnB,EAAE,CAACmB,EAD8B;IAErCY,MAAM,EAAE/B,EAAE,CAAC+B,MAF0B;IAGrCC,MAAM,EAAEhC,EAAE,CAACO,IAAH,CAAQD;GAHc,CAAhC;;MAMI,CAACsB,QAAQ,CAACK,IAAT,CAAeC,CAAD,IAAgBA,CAAC,CAACf,EAAF,KAASU,cAAc,CAACV,EAAtD,CAAL,EAAgE;IAC9DlB,OAAO,CAACgB,GAAR,CAAYkB,KAAZ,CAAkB,kCAAlB,EAAsD;MACpDC,IAAI,EAAEpC,EAAE,CAACmB,EAD2C;MAEpDkB,QAAQ,EAAErC,EAAE,CAAC+B;KAFf;IAIAJ,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;WACO,KAAP;;;MAGE/B,EAAE,CAACuB,KAAH,KAAa,MAAjB,EAAyB;IACvBtB,OAAO,CAACgB,GAAR,CAAYkB,KAAZ,CAAkB,0CAAlB,EAA8D;MAC5DC,IAAI,EAAEpC,EAAE,CAACmB,EADmD;MAE5DkB,QAAQ,EAAErC,EAAE,CAAC+B;KAFf;IAIAJ,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;;;MAIAJ,WAAW,CAACY,cAAZ,CAA2BX,QAA3B,KACAD,WAAW,CAACa,kBAAZ,CAA+BZ,QAA/B,CAFF,EAGE;IACA3B,OAAO,CAACgB,GAAR,CAAYkB,KAAZ,CAAkB,yCAAlB,EAA6D;MAC3DC,IAAI,EAAEpC,EAAE,CAACmB,EADkD;MAE3DkB,QAAQ,EAAErC,EAAE,CAAC+B;KAFf;IAIAJ,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;WACO,KAAP;;;QAGIU,QAAQ,GAAGd,WAAW,CAACe,gBAAZ,EAAjB;;MACID,QAAQ,IAAIA,QAAQ,CAACV,MAAT,KAAoB/B,EAAE,CAAC+B,MAAvC,EAA+C;IAC7C9B,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,mCAAjB,EAAsD;MACpDkB,IAAI,EAAEpC,EAAE,CAACmB,EAD2C;MAEpDkB,QAAQ,EAAErC,EAAE,CAAC+B;KAFf;IAIAJ,WAAW,CAACgB,kBAAZ,CAA+Bb,uBAAuB,EAAtD;WACO,KAAP;;;EAGFH,WAAW,CAACiB,cAAZ,CAA2Bd,uBAAuB,EAAlD;;MAEI9B,EAAE,CAAC6C,SAAH,KAAiBC,SAArB,EAAgC;UACxBC,QAAQ,GAAG,MAAM9C,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBC,GAArB,CACrBhD,OAAO,CAACI,IAAR,CAAa;MACX6C,WAAW,EAAElD,EAAE,CAAC+B;KADlB,CADqB,CAAvB;IAKA/B,EAAE,GAAG+C,QAAQ,CAACpC,IAAd;;;MAGEX,EAAE,CAACmD,MAAP,EAAe;IACbxB,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;IACA9B,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,2CAAjB,EAA8D;MAC5DkB,IAAI,EAAEpC,EAAE,CAACmB,EADmD;MAE5DkB,QAAQ,EAAErC,EAAE,CAAC+B;KAFf;WAIO,KAAP;;;EAGF9B,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CACG,eAAclB,EAAE,CAACmB,EAAG,MAAKnB,EAAE,CAAC+B,MAAO,eAAc/B,EAAE,CAAC6C,SAAU,UAC7D7C,EAAE,CAACoD,eACJ,EAHH,EArEqB;;MA6EnB,EACEpD,EAAE,CAACoD,eAAH,KAAuB,OAAvB,IACApD,EAAE,CAACoD,eAAH,KAAuB,WADvB,IAEApD,EAAE,CAACoD,eAAH,KAAuB,UAHzB,CADF,EAME;QACI,CAACpD,EAAE,CAACoD,eAAJ,IAAuBpD,EAAE,CAACoD,eAAH,KAAuB,SAAlD,EAA6D;MAC3DnD,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAkB,wCAAuClB,EAAE,CAACmB,EAAG,EAA/D,EAD2D;;MAG3DQ,WAAW,CAAC0B,UAAZ,CAAuBpD,OAAvB,EAAgC6B,uBAAuB,EAAvD;aACO,KAAP;;;QAGE9B,EAAE,CAACO,IAAH,CAAQD,GAAR,CAAYgD,UAAZ,CAAuB,WAAvB,CAAJ,EAAyC;UACnCtD,EAAE,CAACoD,eAAH,KAAuB,QAAvB,IAAmCpD,EAAE,CAACoD,eAAH,KAAuB,OAA9D,EAAuE;QACrEnD,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CACG,qDAAoDlB,EAAE,CAACmB,EAAG,EAD7D,EADqE;;YAMjEnB,EAAE,CAACuD,IAAH,CAAQC,QAAR,CAAiB,0BAAjB,CAAJ,EAAkD;cAC5CxD,EAAE,CAACuD,IAAH,CAAQC,QAAR,CAAiB,8BAAjB,CAAJ,EAAsD;mBAC7C,KAAP;;;gBAGIC,kBAAkB,GAAGzD,EAAE,CAACuD,IAAH,CAAQG,OAAR,CACzB,8BADyB,EAEzB,8BAFyB,CAA3B;gBAIMzD,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsBC,MAAtB,CACJ3D,OAAO,CAACI,IAAR,CAAa;YACX0B,MAAM,EAAE/B,EAAE,CAAC+B,MADA;YAEXwB,IAAI,EAAEE;WAFR,CADI,CAAN;SATF,MAeO,IAAI,CAACzD,EAAE,CAAChF,KAAH,CAASsI,UAAT,CAAoB,SAApB,CAAL,EAAqC;gBACpCrD,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsBC,MAAtB,CACJ3D,OAAO,CAACI,IAAR,CAAa;YACX0B,MAAM,EAAE/B,EAAE,CAAC+B,MADA;YAEX/G,KAAK,EAAG,UAASgF,EAAE,CAAChF,KAAM;WAF5B,CADI,CAAN;;;eAQK,KAAP;;;UAGE,MAAM+E,uBAAuB,CAACC,EAAD,EAAKC,OAAL,CAAjC,EAAgD;QAC9C0B,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;eACO,KAAP;OAFF,MAGO,IAAI/B,EAAE,CAACoD,eAAH,KAAuB,SAA3B,EAAsC;;eAEpC,KAAP;;;MAGFnD,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CACG,yDACClB,EAAE,CAACoD,eACJ,EAHH;aAKO,KAAP;;;QAGEpD,EAAE,CAACoD,eAAH,KAAuB,SAA3B,EAAsC;UAChC,MAAMrD,uBAAuB,CAACC,EAAD,EAAKC,OAAL,CAAjC,EAAgD;QAC9C0B,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;eACO,KAAP;OAFF,MAGO;;eAEE,KAAP;;;;QAIA/B,EAAE,CAACoD,eAAH,KAAuB,QAA3B,EAAqC;MACnCnD,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,uCAAjB,EAA0D;QACxDX,IAAI,EAAEP,EAAE,CAACO,IAAH,CAAQD,GAD0C;QAExDuD,IAAI,EAAE7D,EAAE,CAAC6D,IAAH,CAAQvD;OAFhB;YAKML,OAAO,CAACE,MAAR,CAAekB,KAAf,CAAqByC,KAArB,CAA2B;QAC/BC,KAAK,EAAE/D,EAAE,CAACO,IAAH,CAAQF,IAAR,CAAa0D,KAAb,CAAmBC,KADK;QAE/B3D,IAAI,EAAEL,EAAE,CAACO,IAAH,CAAQF,IAAR,CAAa9C,IAFY;QAG/BgD,IAAI,EAAEP,EAAE,CAAC6D,IAAH,CAAQvD,GAHiB;QAI/BuD,IAAI,EAAE7D,EAAE,CAACO,IAAH,CAAQD;OAJV,CAAN;aAOO,KAAP;;;IAGFqB,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;IACA9B,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CACG,yDACClB,EAAE,CAACoD,eACJ,EAHH;WAKO,KAAP;;;MAGE;IACFnD,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAkB,iBAAgBlB,EAAE,CAAC+B,MAAO,EAA5C;UAEMkC,UAAU,GAAG3E,SAAS,CAACU,EAAE,CAACuD,IAAJ,EAAU5B,WAAW,CAACzH,MAAZ,CAAmBQ,gBAA7B,CAA5B;UACM0D,OAAO,GACV6F,UAAU,IAAIA,UAAU,CAAC7F,OAA1B,IAAsCuD,WAAW,CAACzH,MAAZ,CAAmBQ,gBAD3D;UAGMwJ,WAAW,GAAG,MAAMjE,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBc,KAArB,CAA2B;MACnDK,YAAY,EAAE/F,OAAO,CAACzD,aAAR,GAAwB,OAAxB,GAAkC,QADG;MAEnDoJ,KAAK,EAAE/D,EAAE,CAACO,IAAH,CAAQF,IAAR,CAAa0D,KAAb,CAAmBC,KAFyB;MAGnD3D,IAAI,EAAEL,EAAE,CAACO,IAAH,CAAQF,IAAR,CAAa9C,IAHgC;MAInD2F,WAAW,EAAElD,EAAE,CAAC+B,MAJmC;MAKnDqC,YAAY,EAAG,GAAEpE,EAAE,CAAChF,KAAM,GACxBoD,OAAO,CAACxD,mBAAR,GAA8B,YAA9B,GAA6C,EAC9C,MAAKoF,EAAE,CAAC+B,MAAO,GAPmC;MAQnDsC,cAAc,EAAE,EARmC;;KAA3B,CAA1B;IAUApE,OAAO,CAACgB,GAAR,CAAYkB,KAAZ,CAAkB,eAAlB,EAAmC+B,WAAW,CAACvD,IAA/C;IACAgB,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;WACOuC,OAAO,CAACJ,WAAW,CAACvD,IAAZ,CAAiBwC,MAAlB,CAAd;GAnBF,CAoBE,OAAOoB,GAAP,EAAY;IACZtE,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,kBAAjB,EAAqCqD,GAAG,CAACC,OAAzC;IACA7C,WAAW,CAAC0B,UAAZ,CAAuBpD,OAAvB,EAAgC6B,uBAAuB,EAAvD;WACO,KAAP;;CA3MG;;ACnCA,MAAM2C,cAAc,GAAG,OAC5BxE,OAD4B,EAE5B/F,MAF4B,KAGR;QACd;IAAEyG,IAAI,EAAEzD;MAAW,MAAM+C,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsBe,iBAAtB,CAC7BzE,OAAO,CAACI,IAAR,CAAa;IAAEI,QAAQ,EAAE;GAAzB,CAD6B,CAA/B;QAGMkE,WAA0C,GAAG,EAAnD;;OAEK,MAAM,CAACC,QAAD,EAAWC,WAAX,CAAX,IAAsCC,MAAM,CAACC,OAAP,CAAe7K,MAAM,CAACgD,MAAP,CAAcI,IAA7B,CAAtC,EAA0E;UAClE0H,UAAU,GAAGH,WAAW,CAACrH,KAAZ,CAAkByH,KAAlB,CAAwB,CAAxB,CAAnB;UACM1F,WAAW,GAAI,gCAA+BqF,QAAS,EAA7D;QAEIM,aAAa,GAAGhI,MAAM,CAAC+E,IAAP,CAAatD,KAAD,IAAWA,KAAK,CAACpB,IAAN,KAAesH,WAAW,CAACtH,IAAlD,CAApB;;QACI,CAAC2H,aAAL,EAAoB;MAClBA,aAAa,GAAGhI,MAAM,CAAC+E,IAAP,CAAatD,KAAD,IAAWA,KAAK,CAACY,WAAN,KAAsBA,WAA7C,CAAhB;;;QAEE,CAAC2F,aAAL,EAAoB;UACdN,QAAQ,KAAK,qBAAjB,EAAwC;QACtCM,aAAa,GAAGhI,MAAM,CAAC+E,IAAP,CACbtD,KAAD,IAAWA,KAAK,CAACpB,IAAN,KAAe,qBADZ,CAAhB;;;UAIEqH,QAAQ,KAAK,iBAAjB,EAAoC;QAClCM,aAAa,GAAGhI,MAAM,CAAC+E,IAAP,CACbtD,KAAD,IAAWA,KAAK,CAACpB,IAAN,KAAe,iBADZ,CAAhB;;;;QAMA,CAAC2H,aAAL,EAAoB;YACZC,MAAM,GAAG,MAAMlF,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsByB,WAAtB,CACnBnF,OAAO,CAACI,IAAR,CAAa;QACX9C,IAAI,EAAEsH,WAAW,CAACtH,IADP;QAEXC,KAAK,EAAEwH,UAFI;QAGXzF;OAHF,CADmB,CAArB;MAOAoF,WAAW,CAACC,QAAD,CAAX,GAAwBO,MAAM,CAACxE,IAA/B;KARF,MASO,IACLuE,aAAa,CAAC3H,IAAd,KAAuBsH,WAAW,CAACtH,IAAnC,IACA2H,aAAa,CAAC1H,KAAd,KAAwBwH,UAFnB;;;MAKL;QACA/E,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,uBAAjB,EAA0C;UACxCmE,YAAY,EAAEH,aAAa,CAAC3H,IADY;UAExCA,IAAI,EAAE2H,aAAa,CAAC3H,IAAd,KAAuBsH,WAAW,CAACtH,IAAnC,IAA2CsH,WAAW,CAACtH,IAFrB;UAGxCC,KAAK,EAAE0H,aAAa,CAAC1H,KAAd,KAAwBwH,UAAxB,IAAsCA,UAHL;UAIxCzF,WAAW,EAAE2F,aAAa,CAAC3F,WAAd,KAA8BA,WAA9B,IAA6CA;SAJ5D;cAOM4F,MAAM,GAAG,MAAMlF,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB2B,WAAtB,CACnBrF,OAAO,CAACI,IAAR,CAAa;UACXgF,YAAY,EAAEH,aAAa,CAAC3H,IADjB;UAEXA,IAAI,EAAEsH,WAAW,CAACtH,IAFP;UAGXC,KAAK,EAAEwH,UAHI;UAIXzF;SAJF,CADmB,CAArB;QAQAoF,WAAW,CAACC,QAAD,CAAX,GAAwBO,MAAM,CAACxE,IAA/B;OArBK,MAsBA;MACLgE,WAAW,CAACC,QAAD,CAAX,GAAwBM,aAAxB;;;;SAIGP,WAAP;CAlEK;;ACjBA,MAAMY,OAAO,GAAkBC,CAAf,IACrBV,MAAM,CAACW,IAAP,CAAYD,CAAZ,CADK;;ACgBP,MAAME,aAAa,GAAIpB,OAAvB;AAIA,AAAO,MAAMqB,aAAa,GAAG,OAC3B1F,OAD2B,EAE3B/F,MAF2B,KAGJ;MACnB,CAACA,MAAM,CAACC,UAAZ,EAAwB;WACf;MACLyL,OAAO,EAAE,MAAc,EADlB;MAELC,WAAW,EAAE,MAAqBC,OAAO,CAACC,OAAR,EAF7B;MAGLC,MAAM,EAAE,MAAc;KAHxB;;;QAOIC,uBAAuB,GAAGV,OAAO,CAACrL,MAAM,CAACyB,MAAR,CAAP,CAAuBwD,MAAvB,CAE7B,CAACC,GAAD,EAAM8G,SAAN,KAAoB;IACrBpB,MAAM,CAACqB,MAAP,CAAc/G,GAAd,EAAmBlF,MAAM,CAACyB,MAAP,CAAcuK,SAAd,CAAnB;WACO9G,GAAP;GAJ8B,EAK7B,EAL6B,CAAhC;QAOMgH,WAAW,GAAG,IAAIC,gBAAJ,CAAcnM,MAAM,CAACC,UAArB,CAApB;QACMmM,QAAa,GAAG,MAAMF,WAAW,CAACG,KAAZ,CAAkBjJ,IAAlB,CAAuB;IAAEkJ,KAAK,EAAE;GAAhC,CAA5B;QACMC,OAA6C,GAAG3B,MAAM,CAAC4B,MAAP,CACpDT,uBADoD,EAGnD3H,GAHmD,CAG9CqI,KAAD,IAAW;UACRC,MAAM,GAAGN,QAAQ,CAACG,OAAT,CAAiBxE,IAAjB,CACZ4E,IAAD,IAAeA,IAAI,CAACC,OAAL,CAAaH,KAAb,KAAuBA,KADzB,CAAf;;QAGI,CAACC,MAAL,EAAa;MACXG,OAAO,CAACC,IAAR,CAAc,uBAAsBL,KAAM,EAA1C;;;;WAGK,CAACA,KAAD,EAAQ;MAAEC,MAAF;MAAUK,EAAE,EAAEnE;KAAtB,CAAP;GAXkD,EAgBnDjC,MAhBmD,CAgB5C6E,aAhB4C,CAAtD;;OAkBK,MAAM,GAAGmB,IAAH,CAAX,IAAuBJ,OAAvB,EAAgC;QAC1B;YACIQ,EAAO,GAAG,MAAMb,WAAW,CAACa,EAAZ,CAAeC,IAAf,CAAoB;QAAEL,IAAI,EAAEA,IAAI,CAACD,MAAL,CAAYzF;OAAxC,CAAtB;MACA0F,IAAI,CAACI,EAAL,GAAUA,EAAE,CAACE,OAAb;KAFF,CAGE,OAAO5C,GAAP,EAAY;MACZwC,OAAO,CAAC7L,KAAR,CAAcqJ,GAAd;;;;QAIE6C,UAAU,GAAG,IAAIC,GAAJ,CAAQZ,OAAR,CAAnB;;QAEMa,sBAAsB,GAAIC,WAAD,IAAyB;UAChDZ,KAAK,GAAGV,uBAAuB,CAACsB,WAAD,CAArC;QACI,CAACZ,KAAL,EAAY,OAAO,IAAP;WACLS,UAAU,CAACnE,GAAX,CAAe0D,KAAf,CAAP;GAHF;;SAMO;IACLf,OAAO,EAAG2B,WAAD,IAAiC;YAClCV,IAAI,GAAGS,sBAAsB,CAACC,WAAD,CAAnC;UACI,CAACV,IAAL,EAAW,OAAOU,WAAP;aACH,KAAIV,IAAI,CAACD,MAAL,CAAYzF,EAAG,GAA3B;KAJG;IAML0E,WAAW,EAAE,OAAO0B,WAAP,EAA4BC,IAA5B,KAA4D;MACvEvH,OAAO,CAACgB,GAAR,CAAYkB,KAAZ,CAAkB,YAAlB,EAAgC;QAAEoF,WAAF;QAAeC;OAA/C;UACIpN,OAAO,CAACC,GAAR,CAAYoN,OAAhB,EAAyB;YAEnBZ,IAAI,GAAGS,sBAAsB,CAACC,WAAD,CAAnC;UACI,CAACV,IAAD,IAAS,CAACA,IAAI,CAACI,EAAnB,EAAuB;YACjBb,WAAW,CAACsB,IAAZ,CAAiB7B,WAAjB,CAA6B;QACjC8B,QAAQ,EAAEvN,OAAO,CAACC,GAAR,CAAYuN,eADW;QAEjCT,OAAO,EAAEN,IAAI,CAACI,EAAL,CAAQ9F,EAFgB;QAGjCqG;OAHI,CAAN;KAZG;IAkBLxB,MAAM,EAAE,CACNhG,EADM,EAENC,OAFM,KAGK;aACH,IAAGD,EAAE,CAAC6H,QAAS,IAAG5H,OAAO,CAAC6H,OAAR,CAAgBC,UAAhB,CAA2BxK,IAAK,IAAGyC,EAAE,CAAC+B,MAAO,GAAvE;;GAtBJ;CAxDK;;ACGP,MAAM2D,eAAa,GAAIpB,OAAvB;;AAIA,MAAM0D,eAAe,GAAG,OACtB/H,OADsB,EAEtB/F,MAFsB,KAGE;QAClB+N,YAAY,GAAGtC,aAAa,CAAC1F,OAAD,EAAU/F,MAAV,CAAlC;QAEMgO,kBAAkB,GAAG,IAAIb,GAAJ,EAA3B;EACA9B,OAAO,CAACrL,MAAM,CAACyB,MAAR,CAAP,CAAuBwM,OAAvB,CAAgCjC,SAAD,IAAe;IAC5CpB,MAAM,CAACW,IAAP,CAAYvL,MAAM,CAACyB,MAAP,CAAcuK,SAAd,CAAZ,EAAsCiC,OAAtC,CAA+CnE,KAAD,IAAW;MACvDkE,kBAAkB,CAACE,GAAnB,CAAuBpE,KAAvB,EAA8BkC,SAA9B;KADF;GADF;QAMMmC,kBAAkB,GAAG,IAAIhB,GAAJ,EAA3B;EACA9B,OAAO,CAACrL,MAAM,CAAC6C,KAAP,IAAgB,EAAjB,CAAP,CAA4BoL,OAA5B,CAAqCG,QAAD,IAAc;IAC/CpO,MAAM,CAAC6C,KAAR,CAAmDuL,QAAnD,EAA6DrL,MAA7D,CAAoEkL,OAApE,CACGnE,KAAD,IAAW;YACHjH,KAAK,GAAGsL,kBAAkB,CAACpF,GAAnB,CAAuBe,KAAvB,CAAd;;UACIjH,KAAJ,EAAW;QACTA,KAAK,CAACwL,IAAN,CAAWD,QAAX;OADF,MAEO;QACLD,kBAAkB,CAACD,GAAnB,CAAuBpE,KAAvB,EAA8B,CAACsE,QAAD,CAA9B;;KANN;GADF;;QAaME,iBAAiB,GAAIC,YAAD,IAA4B,CACpD,GAAG,IAAIC,GAAJ,CACDD,YAAY,CACTnK,GADH,CACQiJ,WAAD,IAAiBW,kBAAkB,CAACjF,GAAnB,CAAuBsE,WAAvB,CADxB,EAEG1G,MAFH,CAEUyD,OAFV,CADC,CADiD,CAAtD;;SAQO;IACLpK,MADK;IAELyO,gBAAgB,EAAGpB,WAAD,IAAiBW,kBAAkB,CAACjF,GAAnB,CAAuBsE,WAAvB,CAF9B;IAGLiB,iBAAiB,EAAGC,YAAD,IAAkB,CACnC,GAAG,IAAIC,GAAJ,CACDD,YAAY,CACTnK,GADH,CACQiJ,WAAD,IAAiBW,kBAAkB,CAACjF,GAAnB,CAAuBsE,WAAvB,CADxB,EAEG1G,MAFH,CAEU6E,eAFV,CADC,CADgC,CAHhC;IAWLkD,gBAAgB,EAAGrB,WAAD,IAChBc,kBAAkB,CAACpF,GAAnB,CAAuBsE,WAAvB,KAAuC,EAZpC;IAcLsB,gBAAgB,EAAE,CAChBC,aADgB,EAEhBC,kBAFgB,EAGhB;MAAEC,qBAAF;MAAyBC;KAHT,KAIb;UACC,CAACH,aAAL,EAAoB,OAAO,KAAP;YAEdI,uBAAuB,GAAGV,iBAAiB,CAC/CO,kBAAkB,CAACzK,GAAnB,CAAwB6K,OAAD,IAAaA,OAAO,CAACnF,KAA5C,CAD+C,CAAjD,CAHG;;UASDgF,qBAAqB,IACrBE,uBAAuB,CAAC1F,QAAxB,CAAiCsF,aAAjC,CAFF,EAGE;eACO,IAAP;OAZC;;;UAgBC5O,MAAM,CAACmD,aAAP,IAAwB4L,qBAA5B,EAAmD;cAC3C5L,aAAa,GAAGnD,MAAM,CAACmD,aAA7B;eACO6L,uBAAuB,CAACE,IAAxB,CAA8BC,KAAD,IAClChM,aAAa,CAACyL,aAAD,CAAb,CAA6BtF,QAA7B,CAAsC6F,KAAtC,CADK,CAAP;;;aAKK,KAAP;KAzCG;IA4CLC,KAAK,EAAE,MAAMrB;GA5Cf;CAnCF;;AAmFA,MAAMsB,kBAAkB,GAAG,IAAIlC,GAAJ,EAA3B;AACA,MAAMmC,WAAW,GAAG,IAAInC,GAAJ,EAApB;AAEA,AAAO,MAAMoC,gBAAgB,GAAG,CAC9BxJ,OAD8B,EAE9B/F,MAF8B,KAGN;QAClB6J,KAAK,GAAG9D,OAAO,CAAC6H,OAAR,CAAgBC,UAAhB,CAA2BhE,KAAzC;QAEM2F,mBAAmB,GAAGF,WAAW,CAACvG,GAAZ,CAAgBc,KAAK,CAACC,KAAtB,CAA5B;MACI0F,mBAAJ,EAAyB,OAAOA,mBAAP;QAEnBC,eAAe,GAAGJ,kBAAkB,CAACtG,GAAnB,CAAuBc,KAAK,CAACC,KAA7B,CAAxB;MACI2F,eAAJ,EAAqB,OAAO7D,OAAO,CAACC,OAAR,CAAgB4D,eAAhB,CAAP;QAEfC,OAAO,GAAG5B,eAAe,CAAC/H,OAAD,EAAU/F,MAAV,CAA/B;EACAqP,kBAAkB,CAACnB,GAAnB,CAAuBrE,KAAK,CAACC,KAA7B,EAAoC4F,OAApC;SAEOA,OAAO,CAACC,IAAR,CAAcC,UAAD,IAAgB;IAClCP,kBAAkB,CAACQ,MAAnB,CAA0BhG,KAAK,CAACC,KAAhC;IACAwF,WAAW,CAACpB,GAAZ,CAAgBrE,KAAK,CAACC,KAAtB,EAA6B8F,UAA7B;WACOA,UAAP;GAHK,CAAP;CAfK;;ACjHP;AAEA,AAoCA,MAAMpE,eAAa,GAAIpB,OAAvB;;AASA,eAAe0F,eAAf,CACE/J,OADF,EAEE/F,MAFF,EAGoC;QAC5B4P,UAAU,GAAG,MAAML,gBAAgB,CAACxJ,OAAD,EAAU/F,MAAV,CAAzC;QACMyH,WAAW,GAAGmD,MAAM,CAACmF,MAAP,CAAcH,UAAd,CAApB;QAEM,CAAC5M,MAAD,IAAW,MAAM4I,OAAO,CAACoE,GAAR,CAAY,CAACzF,cAAc,CAACxE,OAAD,EAAU/F,MAAV,CAAf,CAAZ,CAAvB;QAEMiQ,gBAAgB,GAAGrF,MAAM,CAACW,IAAP,CAAYvL,MAAM,CAACyB,MAAnB,CAAzB;QAEMyO,mBAAmB,GAAGD,gBAAgB,CACzC7L,GADyB,CACpB+L,GAAD,IAAqBnQ,MAAM,CAACgD,MAAP,CAAcO,MAAd,CAAqB4M,GAArB,EAA0BvM,WAD1B,EAEzB+C,MAFyB,CAElByD,OAFkB,EAGzBhG,GAHyB,CAGpBf,IAAD,IAAUL,MAAM,CAACK,IAAD,CAAN,CAAa4D,EAHF,CAA5B;QAKMmJ,uBAAuB,GAAGH,gBAAgB,CAC7C7L,GAD6B,CACxB+L,GAAD,IAASnQ,MAAM,CAACgD,MAAP,CAAcO,MAAd,CAAqB4M,GAArB,EAA0BtM,SADV,EAE7B8C,MAF6B,CAEtByD,OAFsB,EAG7BhG,GAH6B,CAGxBf,IAAD,IAAUL,MAAM,CAACK,IAAD,CAAN,CAAa4D,EAHE,CAAhC;QAKMoJ,wBAAwB,GAAGJ,gBAAgB,CAC9C7L,GAD8B,CACzB+L,GAAD,IAASnQ,MAAM,CAACgD,MAAP,CAAcO,MAAd,CAAqB4M,GAArB,EAA0BrM,gBADT,EAE9B6C,MAF8B,CAEvByD,OAFuB,EAG9BhG,GAH8B,CAGzBf,IAAD,IAAUL,MAAM,CAACK,IAAD,CAAN,CAAa4D,EAHG,CAAjC;QAKMqJ,sBAAsB,GAAGL,gBAAgB,CAC5C7L,GAD4B,CACvB+L,GAAD,IAASnQ,MAAM,CAACgD,MAAP,CAAcO,MAAd,CAAqB4M,GAArB,EAA0BpM,QADX,EAE5B4C,MAF4B,CAErByD,OAFqB,EAG5BhG,GAH4B,CAGvBf,IAAD,IAAUL,MAAM,CAACK,IAAD,CAAN,CAAa4D,EAHC,CAA/B;QAKMsJ,iBAAiB,GAAG,CACxB,GAAGH,uBADqB,EAExB,GAAGC,wBAFqB,EAGxB,GAAGC,sBAHqB,CAA1B;QAMME,kBAAkB,GAAG,IAAIrD,GAAJ,EAA3B;EACA8C,gBAAgB,CAAChC,OAAjB,CAA0BkC,GAAD,IAAS;UAC1BM,iBAAiB,GAAGzQ,MAAM,CAACgD,MAAP,CAAcO,MAAd,CAAqB4M,GAArB,CAA1B;IACAvF,MAAM,CAACW,IAAP,CAAYkF,iBAAZ,EAA+BxC,OAA/B,CAAwCvD,QAAD,IAAsB;MAC3D8F,kBAAkB,CAACtC,GAAnB,CAAuBlL,MAAM,CAACyN,iBAAiB,CAAC/F,QAAD,CAAlB,CAAN,CAAoCzD,EAA3D,EAA+DkJ,GAA/D;KADF;GAFF,EAnCkC;;QA2D5BO,MAAI,GAAGC,SAAI,EAAjB;MACIC,WAAJ;MACIC,cAA+B,GAAG,EAAtC;;QAEMC,WAAW,GAAG,CAClBC,SADkB,EAElBC,QAFkB,KAIlB,IAAIpF,OAAJ,CAAY,CAACC,OAAD,EAAUoF,MAAV,KAAqB;IAC/BpE,OAAO,CAAC9F,GAAR,CAAY,sBAAZ,EAAoC;MAAEgK;KAAtC;IACAL,MAAI,CAACK,SAAD,EAAY,MAAOG,qBAAP,IAAiC;YACzCC,OAAO,GAAGD,qBAAqB,CAAC,MAAM,EAAP,CAArC;MACArE,OAAO,CAAC9F,GAAR,CAAY,qBAAZ,EAAmC;QAAEgK;OAArC;;UACI;cACIC,QAAQ,EAAd;OADF,CAEE,OAAO3G,GAAP,EAAY;QACZwC,OAAO,CAAC9F,GAAR,CAAY,+BAAZ,EAA6C;UAAEgK;SAA/C;QACAI,OAAO;QACPF,MAAM,CAAC5G,GAAD,CAAN;;;;MAGFwC,OAAO,CAAC9F,GAAR,CAAY,kBAAZ,EAAgC;QAAEgK;OAAlC;MACAI,OAAO;MACPtF,OAAO;KAbL,CAAJ;GAFF,CAJF;;QAuBM1C,UAAU,GAAG,CAACpD,OAAD,EAAwBD,EAAxB,KAA8C;QAC3D,CAACA,EAAL,EAAS,MAAM,IAAIsL,KAAJ,CAAU,6BAAV,CAAN;IACTrL,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,YAAjB,EAA+BlB,EAA/B;IACAuL,UAAU,CAAC,MAAM;MACfP,WAAW,CAAC,YAAD,EAAe,MAAM;eACvBA,WAAW,CAACQ,MAAM,CAACxL,EAAE,CAACmB,EAAJ,CAAP,EAAgB,YAAY;gBACtC4B,QAAQ,GAAG,MAAM9C,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBC,GAArB,CACrBhD,OAAO,CAACI,IAAR,CAAa;YACX6C,WAAW,EAAElD,EAAE,CAAC+B;WADlB,CADqB,CAAvB;gBAKML,mBAAmB,CAACqB,QAAQ,CAACpC,IAAV,EAAgBV,OAAhB,EAAyB0B,WAAzB,CAAzB;SANgB,CAAlB;OADS,CAAX;KADQ,EAWP,IAXO,CAAV;GAHF;;SAiBOmD,MAAM,CAACqB,MAAP,CAAcxE,WAAd,EAA2B;IAChCzE,MADgC;IAEhCuN,iBAFgC;IAGhClI,cAAc,EA9DQrF,MAAD,IACrBA,MAAM,CAACkM,IAAP,CAAazK,KAAD,IAAWyL,mBAAmB,CAAC5G,QAApB,CAA6B7E,KAAK,CAACwC,EAAnC,CAAvB,CA0DgC;IAIhCqB,kBAAkB,EA7DQtF,MAAD,IACzBA,MAAM,CAACkM,IAAP,CAAazK,KAAD,IAAW2L,uBAAuB,CAAC9G,QAAxB,CAAiC7E,KAAK,CAACwC,EAAvC,CAAvB,CAwDgC;IAKhCsK,yBAAyB,EA5DQvO,MAAD,IAChCA,MAAM,CAACkM,IAAP,CAAazK,KAAD,IAAW4L,wBAAwB,CAAC/G,QAAzB,CAAkC7E,KAAK,CAACwC,EAAxC,CAAvB,CAsDgC;IAMhCuK,iBAAiB,EA3DQxO,MAAD,IACxBA,MAAM,CAACkM,IAAP,CAAazK,KAAD,IAAW6L,sBAAsB,CAAChH,QAAvB,CAAgC7E,KAAK,CAACwC,EAAtC,CAAvB,CAoDgC;IAOhCwK,wBAAwB,EAzDQzO,MAAD,IAC/BA,MAAM,CACH2D,MADH,CACWlC,KAAD,IAAWyL,mBAAmB,CAAC5G,QAApB,CAA6B7E,KAAK,CAACwC,EAAnC,CADrB,EAEG7C,GAFH,CAEQK,KAAD,IAAW+L,kBAAkB,CAACzH,GAAnB,CAAuBtE,KAAK,CAACwC,EAA7B,CAFlB,EAGGN,MAHH,CAGU6E,eAHV,CAiDgC;IAShChD,gBAAgB,EAAE,MAAMoI,WATQ;IAUhClI,cAAc,EAAG5C,EAAD,IAA6B;MAC3C+G,OAAO,CAAC9F,GAAR,CAAY,kBAAZ,EAAgCjB,EAAhC;;UACI8K,WAAW,IAAIU,MAAM,CAACV,WAAW,CAAC/I,MAAb,CAAN,KAA+ByJ,MAAM,CAACxL,EAAE,CAAC+B,MAAJ,CAAxD,EAAqE;;;;UAGjE+I,WAAJ,EAAiB,MAAM,IAAIQ,KAAJ,CAAU,mBAAV,CAAN;MACjBR,WAAW,GAAG9K,EAAd;KAhB8B;IAkBhCsC,0BAA0B,EAAE,CAACrC,OAAD,EAAUoC,QAAV,KAA8C;MACxEpC,OAAO,CAACgB,GAAR,CAAY,oBAAZ,EAAkC;QAAEoB;OAApC;;UACIyI,WAAW,IAAIU,MAAM,CAACV,WAAW,CAAC/I,MAAb,CAAN,KAA+ByJ,MAAM,CAACnJ,QAAD,CAAxD,EAAoE;QAClEyI,WAAW,GAAGC,cAAc,CAACa,KAAf,EAAd;QACA3L,OAAO,CAACgB,GAAR,CAAY,kBAAZ,EAAgC;UAAE6J;SAAlC;;YACIA,WAAJ,EAAiB;UACfzH,UAAU,CAACpD,OAAD,EAAU6K,WAAV,CAAV;;OAJJ,MAMO;QACLC,cAAc,GAAGA,cAAc,CAAClK,MAAf,CACdgL,KAAD,IAAWL,MAAM,CAACK,KAAK,CAAC9J,MAAP,CAAN,KAAyByJ,MAAM,CAACnJ,QAAD,CAD3B,CAAjB;;KA3B4B;IAgChCM,kBAAkB,EAAG3C,EAAD,IAA6B;MAC/C+G,OAAO,CAAC9F,GAAR,CAAY,wBAAZ,EAAsC;QACpCjB,EADoC;QAEpC8K,WAFoC;QAGpCC;OAHF;;UAKI,CAACA,cAAc,CAAC3B,IAAf,CAAqB0C,CAAD,IAAOA,CAAC,CAAC/J,MAAF,KAAa/B,EAAE,CAAC+B,MAA3C,CAAL,EAAyD;QACvDgJ,cAAc,CAACxC,IAAf,CAAoBvI,EAApB;;KAvC4B;IA0ChCqD,UA1CgC;IA4ChC2H;GA5CK,CAAP;;;AAgDF,MAAMe,mBAAmB,GAAG,IAAI1E,GAAJ,EAA5B;AACA,MAAM2E,YAAY,GAAG,IAAI3E,GAAJ,EAArB;AAEA,AAAO,MAAM4E,iBAAiB,GAC5BhM,OAD+B,IAEe;QACxCI,IAAI,GAAGJ,OAAO,CAAC6H,OAAR,CAAgBC,UAA7B;;MAEE1H,IAAI,CAAC9C,IAAL,KAAc,iBAAd,IACAnD,OAAO,CAACC,GAAR,CAAYuN,eAAZ,KAAgC,iBAFlC,EAGE;IACAb,OAAO,CAACC,IAAR,CAAa,cAAb,EAA6B;MAAEjD,KAAK,EAAE1D,IAAI,CAAC0D,KAAd;MAAqBxG,IAAI,EAAE8C,IAAI,CAAC9C;KAA7D;WACO,IAAP;;;QAEIwG,KAAK,GAAG1D,IAAI,CAAC0D,KAAnB;;MACI,CAAC7F,WAAW,CAAC6F,KAAK,CAACC,KAAP,CAAhB,EAA+B;IAC7B+C,OAAO,CAACC,IAAR,CAAajD,KAAK,CAACC,KAAnB,EAA0Bc,MAAM,CAACW,IAAP,CAAYvH,WAAZ,CAA1B;WACO,IAAP;;;QAEImM,GAAG,GAAGhK,IAAI,CAACc,EAAjB;QAEM+K,mBAAmB,GAAGF,YAAY,CAAC/I,GAAb,CAAiBoH,GAAjB,CAA5B;MACI6B,mBAAJ,EAAyB,OAAOA,mBAAP;QAEnBvC,eAAe,GAAGoC,mBAAmB,CAAC9I,GAApB,CAAwBoH,GAAxB,CAAxB;MACIV,eAAJ,EAAqB,OAAO7D,OAAO,CAACC,OAAR,CAAgB4D,eAAhB,CAAP;QAEfC,OAAO,GAAGI,eAAe,CAAC/J,OAAD,EAAU/B,WAAW,CAAC6F,KAAK,CAACC,KAAP,CAArB,CAA/B;EACA+H,mBAAmB,CAAC3D,GAApB,CAAwBiC,GAAxB,EAA6BT,OAA7B;SAEOA,OAAO,CAACC,IAAR,CAAclI,WAAD,IAAiB;IACnCoK,mBAAmB,CAAChC,MAApB,CAA2BM,GAA3B;IACA2B,YAAY,CAAC5D,GAAb,CAAiBiC,GAAjB,EAAsB1I,WAAtB;WACOA,WAAP;GAHK,CAAP;CA3BK;;AC5LA,MAAMwK,wBAAwB,GAAG,OAGtClM,OAHsC,EAItCiL,QAJsC,KAKpB;QACZvJ,WAAW,GAAG,MAAMsK,iBAAiB,CAAChM,OAAD,CAA3C;MACI,CAAC0B,WAAL,EAAkB;EAElBA,WAAW,CAACqJ,WAAZ,CAAwBQ,MAAM,CAACvL,OAAO,CAAC6H,OAAR,CAAgBsE,YAAhB,CAA6BjL,EAA9B,CAA9B,EAAiE,YAAY;UACrE4B,QAAQ,GAAG,MAAM9C,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBC,GAArB,CACrBhD,OAAO,CAACI,IAAR,CAAa;MACX6C,WAAW,EAAEjD,OAAO,CAAC6H,OAAR,CAAgBsE,YAAhB,CAA6BrK;KAD5C,CADqB,CAAvB;UAMMmJ,QAAQ,CAACnI,QAAQ,CAACpC,IAAV,EAAgBgB,WAAhB,CAAd;GAPF;CATK;AA0BP,AAAO,MAAM0K,8BAA8B,GAGzCnB,QAH4C,IAIxCjL,OAAD,IAAyB;SACrBkM,wBAAwB,CAAClM,OAAD,EAAU,CAACD,EAAD,EAAK2B,WAAL,KACvCuJ,QAAQ,CAAClL,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CADqB,CAA/B;CALK;AAeP,AAAO,MAAM2K,+BAA+B,GAAG,CAC7CC,eAD6C,EAK7CrB,QAL6C,KAM1C,MAAOjL,OAAP,IAA8C;QAC3C0B,WAAW,GAAG,MAAMsK,iBAAiB,CAAChM,OAAD,CAA3C;MACI,CAAC0B,WAAL,EAAkB;QAEZ6K,GAAG,GAAGD,eAAe,CAACtM,OAAD,EAAU0B,WAAV,CAA3B;MACI6K,GAAG,CAACxL,MAAJ,KAAe,CAAnB,EAAsB;SACfW,WAAW,CAACqJ,WAAZ,CAAwBwB,GAAG,CAAClO,GAAJ,CAAS0B,EAAD,IAAQwL,MAAM,CAACxL,EAAE,CAACmB,EAAJ,CAAtB,CAAxB,EAAwD,MAC7D+J,QAAQ,CAACjL,OAAD,EAAU0B,WAAV,CADH,CAAP;CAZK;;ACtDA,MAAM8K,qBAEZ,GAAG,OAAOzM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAoC;MAClC,CAACA,WAAW,CAACzH,MAAZ,CAAmBK,mBAAxB,EAA6C;MACzCyF,EAAE,CAAC0M,SAAH,CAAa1L,MAAb,KAAwB,CAA5B,EAA+B;MAC3BhB,EAAE,CAAC6G,IAAH,CAAQ8F,IAAR,KAAiB,KAArB,EAA4B;QAEtB1M,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsBiJ,YAAtB,CACJ3M,OAAO,CAACzE,KAAR,CAAc;IACZkR,SAAS,EAAE,CAAC1M,EAAE,CAAC6G,IAAH,CAAQ7C,KAAT;GADb,CADI,CAAN;CAPK;;ACHA,MAAM6I,UAAU,GAAI7R,KAAD,IACxBA,KAAK,CACF8R,IADH,GAEGpJ,OAFH,CAGI,2CAHJ,EAII,CAACqJ,CAAD,EAAIC,IAAJ,EAAUC,IAAV,KAAoB,IAAGD,IAAI,CAACE,WAAL,EAAmB,IAAGD,IAAK,EAJtD,EAMGvJ,OANH,CAMW,qBANX,EAMkC,CAACqJ,CAAD,EAAIC,IAAJ,KAAc,GAAEA,IAAI,CAACG,WAAL,EAAmB,IANrE,EAOGzJ,OAPH,CAOW,oBAPX,EAOiC,YAPjC,EAQGA,OARH,CAQW,gCARX,EAQ6C,aAR7C;CAUGA,OAVH,CAUW,4BAVX,EAUyC,IAVzC,CADK;;ACIP,MAAM0J,iBAAiB,GAAIhP,OAAD,IAAuC;SACxDM,aAAa,CACjBJ,GADI,CAEH,CAAC;IAAEf,IAAF;IAAQoB;GAAT,KACG,MAAKP,OAAO,CAACb,IAAD,CAAP,GAAgB,GAAhB,GAAsB,GAAI,qBAAoBA,IAAK,OAAMoB,KAAM,EAHpE,EAKJ0O,IALI,CAKC,IALD,CAAP;CADF;;AASA,MAAMC,eAAe,GAAIC,KAAD,IAAyB;SACxCA,KAAK,CACTjP,GADI,CACC4C,IAAD,IAAU;QACTA,IAAI,CAACxF,GAAT,EAAc,OAAQ,IAAGwF,IAAI,CAAClG,KAAM,KAAIkG,IAAI,CAACxF,GAAI,GAAnC;WACPwF,IAAI,CAAClG,KAAZ;GAHG,EAKJqS,IALI,CAKC,IALD,CAAP;CADF;;AAcA,AAAO,MAAMG,UAAU,GAAG,CACxBjK,IADwB,EAExBrE,aAFwB,EAGxBqO,KAHwB,EAIxBE,aAJwB,KAKG;QACrBC,MAAM,GAAGpO,SAAS,CAACiE,IAAD,EAAOrE,aAAP,CAAxB;;MACI,CAACwO,MAAL,EAAa;IACX3G,OAAO,CAAC7F,IAAR,CAAa,sBAAb;WACO;MAAEqC;KAAT;;;QAEI;IACJtE,OADI;IAEJS,MAFI;IAGJE,oBAHI;IAIJC,0BAJI;IAKJC,0BALI;IAMJ1B;MACEsP,MAPJ,CAN2B;;QAgBrBC,cAAc,GAAG,CAACJ,KAAD,GACnB3N,oBAAoB,CAAC8D,OAArB;8CAAA,EAGE,IAHF,CADmB,GAMnB6J,KAAK,CAACvM,MAAN,KAAiB,CAAjB,GACC,gBAAesM,eAAe,CAACC,KAAD,CAAQ,IADvC,GAEA,EARJ;QAUMK,cAAc,GAAG,CAACH,aAAD,GACnBrP,OADmB,GAEnB,EAAE,GAAGA,OAAL;OAAiBqP;GAFrB;SAIO;IACLrP,OAAO,EAAEwP,cADJ;IAELrK,IAAI,EAAG,GAAEtE,OAAQ,GAAEY,0BAA2B;EAChD8N,cAAe;EACfP,iBAAiB,CAACQ,cAAD,CAAiB;EAClC9N,0BAA2B,GAAEJ,MAAM,IAAI,EAAG;GAL1C;CAnCK;;AC3BP;AAMA,AAkBA,MAAMgG,eAAa,GAAIpB,OAAvB;AAIA,AAAO,MAAMuJ,YAAY,GAAG,OAC1B7N,EAD0B,EAE1BC,OAF0B,EAG1B0B,WAH0B,KAIc;QAClCtB,IAAI,GAAGJ,OAAO,CAAC6H,OAAR,CAAgBC,UAA7B,CADwC;;MAIpC/H,EAAE,CAACO,IAAH,CAAQF,IAAR,CAAac,EAAb,KAAoBd,IAAI,CAACc,EAA7B,EAAiC,OAAO;IAAE2M,aAAa,EAAE;GAAxB;QAE3B9S,KAAK,GAAG2G,WAAW,CAACzH,MAAZ,CAAmBM,SAAnB,GAA+BqS,UAAU,CAAC7M,EAAE,CAAChF,KAAJ,CAAzC,GAAsDgF,EAAE,CAAChF,KAAvE;QAEM+S,WAAW,GAAG/N,EAAE,CAAC6G,IAAH,CAAQ8F,IAAR,KAAiB,KAArC;QAEMlL,QAAkB,GAAG,EAA3B;QAEMuM,SAAS,GAAGrM,WAAW,CAACzH,MAAZ,CAAmBa,OAAnB,CAA2BC,KAA3B,CAAiCiH,IAAjC,CAAuCgM,IAAD,IAAU;QAC5DA,IAAI,CAAC7S,GAAL,KAAa,KAAb,IAAsB2S,WAA1B,EAAuC,OAAO,KAAP;UAEjCxS,KAAK,GAAG0S,IAAI,CAAChT,MAAL,CAAYoE,IAAZ,CAAiBW,EAAE,CAAChF,KAApB,CAAd;;QACIO,KAAK,KAAK,IAAd,EAAoB;UACd0S,IAAI,CAAC5S,MAAT,EAAiB;QACfoG,QAAQ,CAAC8G,IAAT,CAAc;UAAEhL,IAAI,EAAE0Q,IAAI,CAAC5S,MAAb;UAAqBH,KAAK,EAAE+S,IAAI,CAAC/S;SAA/C;;;aAEK,IAAP;;;QAGE+S,IAAI,CAAC5S,MAAL,IAAe4S,IAAI,CAAC3S,mBAAxB,EAA6C;MAC3CmG,QAAQ,CAAC8G,IAAT,CAAc;QACZhL,IAAI,EAAE0Q,IAAI,CAAC5S,MADC;QAEZ6F,IAAI,EAAE+M,IAAI,CAAC3S,mBAAL,CAAyBC,KAAzB;OAFR;aAIO,KAAP;;;WAGK,KAAP;GAnBgB,CAAlB;QAsBM2S,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;QAEMC,cAAc,GAAG,CAAC,MAAMpO,OAAO,CAACE,MAAR,CAAeD,MAAf,CAAsBE,UAAtB,CAC5BH,OAAO,CAACI,IAAR,CAAa;IACXC,GAAG,EAAEN,EAAE,CAACO,IAAH,CAAQC;GADf,CAD4B,CAAP,EAIpBG,IAJoB,CAIfC,UAJe,CAIJqB,IAJI,CAKpBnB,KAAD,IAAoBA,KAAK,CAACvD,IAAN,KAAgB,GAAEnD,OAAO,CAACC,GAAR,CAAYuN,eAAgB,UAL7C,CAAvB;QAQM9B,OAAO,CAACoE,GAAR,CACJ,CACE,GAAGzI,QAAQ,CAACnD,GAAT,CAAa,CAAC;IAAEf,IAAF;IAAQrC,KAAR;IAAegG;GAAhB,KACdjB,OAAO,CAACE,MAAR,CAAekB,KAAf,CAAqBiN,YAArB,CACErO,OAAO,CAACI,IAAR,CAAa;IACXJ,OAAO,EAAG,GAAE7F,OAAO,CAACC,GAAR,CAAYuN,eAAgB,IAAGrK,IAAK,EADrC;IAEXiD,GAAG,EAAER,EAAE,CAACO,IAAH,CAAQC,GAFF;IAGXe,KAAK,EAAGrG,KAAK,GAAG,SAAH,GAAe,SAHjB;IAIXqT,UAAU,EAAErT,KAAK,GAAG4H,SAAH,GAAgB5B,IAAD,CAAqBxF,GAJ1C;IAKX6D,WAAW,EAAErE,KAAK,GAAGA,KAAK,CAACF,KAAT,GAAkBkG,IAAD,CAAqBlG;GAL1D,CADF,CADC,CADL,EAYEqT,cAAc,IACZpO,OAAO,CAACE,MAAR,CAAeD,MAAf,CAAsB+J,MAAtB,CACEhK,OAAO,CAACI,IAAR,CAAa;IACX9C,IAAI,EAAG,GAAEnD,OAAO,CAACC,GAAR,CAAYuN,eAAgB,UAD1B;IAEX4G,QAAQ,EAAExO,EAAE,CAACO,IAAH,CAAQC,GAFP;IAGXnF,MAAM,EAAE,WAHG;IAIX0F,UAAU,EAAGiN,SAAS,GAAG,SAAH,GAAe,SAJ1B;IAOXS,UAAU,EAAEP,IAPD;IAQXQ,YAAY,EAAER,IARH;IASXS,MAAM,EAAEX,SAAS,GACbA,SAAS,CAAC9S,KADG,GAEb;MACEF,KAAK,EAAE,oBADT;MAEEG,OAAO,EAAE;;GAbjB,CADF,CAbJ,EA+BE,CAACkT,cAAD,IACEpO,OAAO,CAACE,MAAR,CAAekB,KAAf,CAAqBiN,YAArB,CACErO,OAAO,CAACI,IAAR,CAAa;IACXJ,OAAO,EAAG,GAAE7F,OAAO,CAACC,GAAR,CAAYuN,eAAgB,UAD7B;IAEXpH,GAAG,EAAER,EAAE,CAACO,IAAH,CAAQC,GAFF;IAGXe,KAAK,EAAGyM,SAAS,GAAG,SAAH,GAAe,SAHrB;IAIXO,UAAU,EAAEzL,SAJD;IAKXvD,WAAW,EAAEyO,SAAS,GAClBA,SAAS,CAAC9S,KAAV,CAAgBF,KADE,GAElB;GAPN,CADF,CAhCJ,EA2CE6F,MA3CF,CA2CS6E,eA3CT,CADI,CAAN;QA+CMkJ,kBAAkB,GAAGjN,WAAW,CAACzE,MAAZ,CAAmB,gBAAnB,CAA3B;QACM2R,cAAc,GAAGlN,WAAW,CAACzE,MAAZ,CAAmB,iBAAnB,CAAvB;QACM4R,WAAW,GAAGnN,WAAW,CAACzE,MAAZ,CAAmB,eAAnB,CAApB;QAEM6R,uBAAuB,GAAGzK,OAAO,CACrCsK,kBAAkB,IAChB5O,EAAE,CAAC9C,MAAH,CAAU+E,IAAV,CAAgBtD,KAAD,IAAoBA,KAAK,CAACwC,EAAN,KAAayN,kBAAkB,CAACzN,EAAnE,CAFmC,CAAvC;QAKM6N,gBAAgB,GAAG1K,OAAO,CAC9BwK,WAAW,IACT9O,EAAE,CAAC9C,MAAH,CAAU+E,IAAV,CAAgBtD,KAAD,IAAoBA,KAAK,CAACwC,EAAN,KAAa2N,WAAW,CAAC3N,EAA5D,CAF4B,CAAhC;QAKM8N,mBAAmB,GAAG3K,OAAO,CACjCuK,cAAc,IACZ7O,EAAE,CAAC9C,MAAH,CAAU+E,IAAV,CAAgBtD,KAAD,IAAoBA,KAAK,CAACwC,EAAN,KAAa0N,cAAc,CAAC1N,EAA/D,CAF+B,CAAnC;QAKM+N,cAAc,GAAG,EACrB,GAAGvN,WAAW,CAACzH,MAAZ,CAAmBQ,gBADD;IAErBC,aAAa,EAAEoU,uBAFM;IAGrBnU,mBAAmB,EAAEoU,gBAHA;IAIrBnU,SAAS,EAAEoU;GAJb;QAOM;IAAE1L,IAAF;IAAQnF;MAAYoP,UAAU,CAACxN,EAAE,CAACuD,IAAJ,EAAU2L,cAAV,EAA0BzN,QAAQ,CACnEZ,MAD2D,CACnDxF,MAAD,IAAYA,MAAM,CAAC6F,IAAP,IAAe7F,MAAM,CAAC6F,IAAP,CAAYzF,MADa,EAE3D6C,GAF2D,CAEtDjD,MAAD,IAAYA,MAAM,CAAC6F,IAFoC,CAA1B,CAApC;QAIMiO,cAAc,GAAGnP,EAAE,CAAChF,KAAH,KAAaA,KAApC;QACMoU,aAAa,GAAGpP,EAAE,CAACuD,IAAH,KAAYA,IAAlC;;MACI4L,cAAc,IAAIC,aAAtB,EAAqC;UAC7BxL,MAAiD,GAAG,EAA1D;;QACIuL,cAAJ,EAAoB;MAClBvL,MAAM,CAAC5I,KAAP,GAAeA,KAAf;MACAgF,EAAE,CAAChF,KAAH,GAAWA,KAAX;;;QAEEoU,aAAJ,EAAmB;MACjBxL,MAAM,CAACL,IAAP,GAAcA,IAAd;MACAvD,EAAE,CAACuD,IAAH,GAAUA,IAAV;;;UAGItD,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsBC,MAAtB,CAA6B3D,OAAO,CAACzE,KAAR,CAAcoI,MAAd,CAA7B,CAAN;;;MAGExF,OAAO,KAAKwQ,kBAAkB,IAAIC,cAA3B,CAAX,EAAuD;UAC/CQ,SAAS,GAAG,OAChB1Q,KADgB,EAEhB2Q,UAFgB,EAGhBC,SAHgB,KAIb;UACCD,UAAU,IAAI,CAAClR,OAAO,CAACmR,SAAD,CAA1B,EAAuC;cAC/BtP,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB6L,WAAtB,CACJvP,OAAO,CAACzE,KAAR,CAAc;UAAE+B,IAAI,EAAEoB,KAAK,CAACpB;SAA5B,CADI,CAAN;;;UAIEa,OAAO,CAACmR,SAAD,CAAP,IAAsB,CAACD,UAA3B,EAAuC;cAC/BrP,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB8L,SAAtB,CACJxP,OAAO,CAACzE,KAAR,CAAc;UAAE0B,MAAM,EAAE,CAACyB,KAAK,CAACpB,IAAP;SAAxB,CADI,CAAN;;KAXJ;;QAiBIqR,kBAAJ,EAAwB;YAChBS,SAAS,CACbT,kBADa,EAEbG,uBAFa,EAGb,eAHa,CAAf;;;QAOED,WAAJ,EAAiB;YACTO,SAAS,CAACP,WAAD,EAAcE,gBAAd,EAAgC,qBAAhC,CAAf;;;QAGEH,cAAJ,EAAoB;UACdI,mBAAmB,IAAI,CAAC7Q,OAAO,CAACvD,SAApC,EAA+C;cACvCoF,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB6L,WAAtB,CACJvP,OAAO,CAACzE,KAAR,CAAc;UAAE+B,IAAI,EAAEsR,cAAc,CAACtR;SAArC,CADI,CAAN;QAGAoE,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD;;;UAEE3D,OAAO,CAACvD,SAAR,IAAqB,CAACoU,mBAA1B,EAA+C;cACvC9J,MAAM,GAAG,MAAMlF,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB8L,SAAtB,CACnBxP,OAAO,CAACzE,KAAR,CAAc;UAAE0B,MAAM,EAAE,CAAC2R,cAAc,CAACtR,IAAhB;SAAxB,CADmB,CAArB;cAGMmE,mBAAmB,CAAC1B,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2BwD,MAAM,CAACxE,IAAlC,CAAzB;;;aAEK;QAAEmN,aAAa,EAAE;OAAxB;;;;SAIG;IAAEA,aAAa,EAAE;GAAxB;CA5LK;;ACtBP,MAAM4B,cAAc,GAAG,gBAGrB1P,EAHqB,EAIrBC,OAJqB,EAKrB;EAAEsB,KAAF;EAAShC;CALY,EAMN;QACToQ,UAAU,GAAG,CAAC,MAAM1P,OAAO,CAACE,MAAR,CAAeD,MAAf,CAAsBE,UAAtB,CACxBH,OAAO,CAACI,IAAR,CAAa;IACXC,GAAG,EAAEN,EAAE,CAACO,IAAH,CAAQC;GADf,CADwB,CAAP,EAIhBG,IAJgB,CAIXC,UAJW,CAIAqB,IAJA,CAKhBnB,KAAD,IAAWA,KAAK,CAACvD,IAAN,KAAenD,OAAO,CAACC,GAAR,CAAYuN,eALrB,CAAnB;EAQA3H,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,kBAAjB,EAAqC;IAAEyO,UAAF;IAAcpO,KAAd;IAAqBhC;GAA1D;;MAEIoQ,UAAJ,EAAgB;UACR1P,OAAO,CAACE,MAAR,CAAeD,MAAf,CAAsB+J,MAAtB,CACJhK,OAAO,CAACI,IAAR,CAAa;MACX9C,IAAI,EAAEnD,OAAO,CAACC,GAAR,CAAYuN,eADP;MAEX4G,QAAQ,EAAExO,EAAE,CAACO,IAAH,CAAQC,GAFP;MAGXiO,UAAU,EAAEzO,EAAE,CAAC4P,UAHJ;MAIXvU,MAAM,EAAE,WAJG;MAKX0F,UAAU,EAAEQ,KALD;MAMXmN,YAAY,EAAE,IAAIP,IAAJ,GAAWC,WAAX,EANH;MAOXO,MAAM,EAAE;QACN3T,KAAK,EAAEuE,WADD;QAENpE,OAAO,EAAE;;KATb,CADI,CAAN;GADF,MAeO;UACC8E,OAAO,CAACE,MAAR,CAAekB,KAAf,CAAqBiN,YAArB,CACJrO,OAAO,CAACI,IAAR,CAAa;MACXJ,OAAO,EAAE7F,OAAO,CAACC,GAAR,CAAYuN,eADV;MAEXpH,GAAG,EAAER,EAAE,CAACO,IAAH,CAAQC,GAFF;MAGXe,KAHW;MAIXgN,UAAU,EAAEzL,SAJD;MAKXvD;KALF,CADI,CAAN;;CAjCJ;;AA6CA,MAAMsQ,uBAAuB,GAAG,CAC9B7P,EAD8B,EAE9BC,OAF8B,EAG9BV,WAH8B,KAK9BmQ,cAAc,CAAC1P,EAAD,EAAKC,OAAL,EAAc;EAC1BsB,KAAK,EAAE,SADmB;EAE1BhC;CAFY,CALhB;;AAUA,AAAO,MAAMuQ,2BAA2B,GAAG,CACzC9P,EADyC,EAEzCC,OAFyC,EAGzC0B,WAHyC,EAIzCzE,MAAuB,GAAG8C,EAAE,CAAC9C,MAAH,IAAa,EAJE,KAKvB;EAClB+C,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,6BAAjB,EAAgD;IAC9ChE,MAAM,EAAEA,MAAM,CAACoB,GAAP,CAAY4D,CAAD,IAAOA,CAAC,IAAIA,CAAC,CAAC3E,IAAzB,CADsC;IAE9CgF,cAAc,EAAEZ,WAAW,CAACY,cAAZ,CAA2BrF,MAA3B,CAF8B;IAG9CwO,iBAAiB,EAAE/J,WAAW,CAAC+J,iBAAZ,CAA8BxO,MAA9B;GAHrB;;MAMI8C,EAAE,CAAC+P,mBAAH,CAAuB/O,MAAvB,KAAkC,CAAtC,EAAyC;WAChC6O,uBAAuB,CAC5B7P,EAD4B,EAE5BC,OAF4B,EAG3B,yBAAwBD,EAAE,CAAC+P,mBAAH,CACtBzR,GADsB,CACjB0R,EAAD,IAAaA,EAAE,CAAChM,KADE,EAEtBqJ,IAFsB,CAEjB,IAFiB,CAEX,EALc,CAA9B;;;MASE1L,WAAW,CAAC8J,yBAAZ,CAAsCvO,MAAtC,CAAJ,EAAmD;WAC1C2S,uBAAuB,CAC5B7P,EAD4B,EAE5BC,OAF4B,EAG5B,+EAH4B,CAA9B;;;QAOIgQ,qBAAqB,GAAGtO,WAAW,CAACgK,wBAAZ,CAAqCzO,MAArC,CAA9B;;MAEI+S,qBAAqB,CAACjP,MAAtB,KAAiC,CAArC,EAAwC;WAC/B6O,uBAAuB,CAC5B7P,EAD4B,EAE5BC,OAF4B,EAG3B,yBAAwBgQ,qBAAqB,CAAC5C,IAAtB,CACvB,IADuB,CAEvB,6BAL0B,CAA9B;;;MASE,CAAC1L,WAAW,CAAC+J,iBAAZ,CAA8BxO,MAA9B,CAAL,EAA4C;QACtCyE,WAAW,CAACzH,MAAZ,CAAmBO,qBAAvB,EAA8C;aACrCoV,uBAAuB,CAC5B7P,EAD4B,EAE5BC,OAF4B,EAG5B,8CAH4B,CAA9B;;GAvCc;;;;;;;;;;;;;;;SA4DXyP,cAAc,CAAC1P,EAAD,EAAKC,OAAL,EAAc;IACjCsB,KAAK,EAAE,SAD0B;IAEjChC,WAAW,EAAE;GAFM,CAArB,CA5DkB;CALb;;ACrDA,MAAM2Q,kBAAkB,GAAG,OAIhClQ,EAJgC,EAKhCC,OALgC,EAMhC0B,WANgC,EAOhCwO,WAPgC,EAQhC;EACEC,GAAG,EAAEC,WADP;EAEEC,MAAM,EAAEC;CAVsB,KAeH;EAC7BtQ,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,oBAAjB,EAAuC;IACrCiP,WADqC;IAErCE,WAFqC;IAGrCE;GAHF;MAMI3O,QAAyB,GAAG5B,EAAE,CAAC9C,MAAH,IAAa,EAA7C;MACI,CAACiT,WAAL,EAAkB,OAAOvO,QAAP;QAEZ4O,aAAa,GAAG,IAAI9H,GAAJ,CACpB9G,QAAQ,CAACtD,GAAT,CAAcK,KAAD,IAA0BA,KAAK,CAACpB,IAA7C,CADoB,CAAtB;QAIMkT,KAAK,GAAG,IAAI/H,GAAJ,EAAd;QACMgI,UAAU,GAAG,IAAIhI,GAAJ,EAAnB;QACMiI,QAAQ,GAAG,IAAIjI,GAAJ,EAAjB;QACMkI,aAAa,GAAG,IAAIlI,GAAJ,EAAtB;QACMxL,MAAM,GAAGyE,WAAW,CAACzE,MAA3B;;QAEM2T,eAAe,GAAIxG,GAAD,IAAiD;UACjEyG,YAAY,GAAGnP,WAAW,CAACzH,MAAZ,CAAmBgD,MAAnB,CAA0BO,MAA1B,CAAiC0S,WAAjC,CAArB;QACI,CAACW,YAAL,EAAmB,OAAOhO,SAAP;WAEZgO,YAAY,CAACzG,GAAD,CAAZ,IAAqBnN,MAAM,CAAC4T,YAAY,CAACzG,GAAD,CAAb,CAA3B,GACHnN,MAAM,CAAC4T,YAAY,CAACzG,GAAD,CAAb,CADH,GAEHvH,SAFJ;GAJF;;MASIuN,WAAJ,EAAiB;IACfA,WAAW,CAAClI,OAAZ,CAAqBkC,GAAD,IAAS;UACvB,CAACA,GAAL,EAAU;YACJ1L,KAAK,GAAGkS,eAAe,CAACxG,GAAD,CAA7B;;UACI,CAAC1L,KAAD,IAAUiD,QAAQ,CAACwH,IAAT,CAAe2H,OAAD,IAAaA,OAAO,CAAC5P,EAAR,KAAexC,KAAK,CAACwC,EAAhD,CAAd,EAAmE;;;;MAGnEqP,aAAa,CAACJ,GAAd,CAAkBzR,KAAK,CAACpB,IAAxB;MACAkT,KAAK,CAACL,GAAN,CAAU/F,GAAV;MACAqG,UAAU,CAACN,GAAX,CAAezR,KAAK,CAACpB,IAArB;KARF;;;MAYEgT,cAAJ,EAAoB;IAClBA,cAAc,CAACpI,OAAf,CAAwBkC,GAAD,IAAS;UAC1B,CAACA,GAAL,EAAU;YACJ1L,KAAK,GAAGkS,eAAe,CAACxG,GAAD,CAA7B;UACI,CAAC1L,KAAL,EAAY;YACNqS,QAAQ,GAAGpP,QAAQ,CAACK,IAAT,CAAe8O,OAAD,IAAaA,OAAO,CAAC5P,EAAR,KAAexC,KAAK,CAACwC,EAAhD,CAAjB;;UACI6P,QAAJ,EAAc;QACZR,aAAa,CAACzG,MAAd,CAAqBiH,QAAQ,CAACzT,IAA9B;QACAoT,QAAQ,CAACP,GAAT,CAAa/F,GAAb;QACAuG,aAAa,CAACR,GAAd,CAAkBY,QAAQ,CAACzT,IAA3B;;KARJ;GA3C2B;;;EA0D7BoE,WAAW,CAACiH,gBAAZ,CAA6B5I,EAAE,CAAC6G,IAAH,CAAQ7C,KAArC,EAA4CmE,OAA5C,CAAqDG,QAAD,IAAc;UAC1D2I,IAAI,GAAGtP,WAAW,CAACzH,MAAZ,CAAmB6C,KAAnB,CAAyBuL,QAAzB,CAAb;;QACI2I,IAAI,CAAC/T,MAAT,EAAiB;MACf+T,IAAI,CAAC/T,MAAL,CAAYiL,OAAZ,CAAqBvD,QAAD,IAAc;cAC1BjG,KAAK,GAAGgD,WAAW,CAACzE,MAAZ,CAAmB0H,QAAnB,CAAd;;YACIjG,KAAK,IAAI,CAACiD,QAAQ,CAACwH,IAAT,CAAe2H,OAAD,IAAaA,OAAO,CAAC5P,EAAR,KAAexC,KAAK,CAACwC,EAAhD,CAAd,EAAmE;UACjEqP,aAAa,CAACJ,GAAd,CAAkBzR,KAAK,CAACpB,IAAxB;UACAkT,KAAK,CAACL,GAAN,CAAUxL,QAAV;;OAJJ;;GAHJ,EA1D6B;;MAyEzB6L,KAAK,CAACS,IAAN,KAAe,CAAf,IAAoBP,QAAQ,CAACO,IAAT,KAAkB,CAA1C,EAA6C;QACvCP,QAAQ,CAACO,IAAT,KAAkB,CAAlB,IAAuBP,QAAQ,CAACO,IAAT,GAAgB,CAA3C,EAA8C;MAC5CjR,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,oBAAjB,EAAuC;QACrCiP,WADqC;QAErCM,KAAK,EAAE,CAAC,GAAGA,KAAJ,CAF8B;QAGrCE,QAAQ,EAAE,CAAC,GAAGA,QAAJ,CAH2B;QAIrCD,UAAU,EAAE,CAAC,GAAGA,UAAJ,CAJyB;QAKrCE,aAAa,EAAE,CAAC,GAAGA,aAAJ;OALjB;;UAQIH,KAAK,CAACS,IAAN,KAAe,CAAnB,EAAsB;cACd/L,MAAM,GAAG,MAAMlF,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB8L,SAAtB,CACnBxP,OAAO,CAACzE,KAAR,CAAc;UACZ0B,MAAM,EAAE,CAAC,GAAGwT,UAAJ;SADV,CADmB,CAArB;QAKA9O,QAAQ,GAAGuD,MAAM,CAACxE,IAAlB;;;UAGEgQ,QAAQ,CAACO,IAAT,KAAkB,CAAtB,EAAyB;aAClB,MAAMC,YAAX,IAA2B,CAAC,GAAGP,aAAJ,CAA3B,EAA+C;gBACvCzL,MAAM,GAAG,MAAMlF,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB6L,WAAtB,CACnBvP,OAAO,CAACzE,KAAR,CAAc;YACZ+B,IAAI,EAAE4T;WADR,CADmB,CAArB;UAKAvP,QAAQ,GAAGuD,MAAM,CAACxE,IAAlB;;;KAzBN,MA4BO;YACCyQ,kBAAkB,GAAG,CAAC,GAAGZ,aAAJ,CAA3B;MAEAvQ,OAAO,CAACgB,GAAR,CAAYC,IAAZ,CAAiB,oBAAjB,EAAuC;QACrCiP,WADqC;QAErCM,KAAK,EAAE,CAAC,GAAGA,KAAJ,CAF8B;QAGrCE,QAAQ,EAAE,CAAC,GAAGA,QAAJ,CAH2B;QAIrCU,SAAS,EAAEzP,QAAQ,CAACtD,GAAT,CAAc4D,CAAD,IAAsBA,CAAC,CAAC3E,IAArC,CAJ0B;QAKrCiT,aAAa,EAAEY;OALjB;YAQMjM,MAAM,GAAG,MAAMlF,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB2N,aAAtB,CACnBrR,OAAO,CAACzE,KAAR,CAAc;QACZ0B,MAAM,EAAEkU;OADV,CADmB,CAArB;MAKAxP,QAAQ,GAAGuD,MAAM,CAACxE,IAAlB;;GAtHyB;;;;;;;;QAgIvBmP,2BAA2B,CAAC9P,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2BC,QAA3B,CAAjC,CAhI6B;;SAmItBA,QAAP;CAlJK;;ACFA,MAAM2P,uBAAuB,GAAG,OACrCvR,EADqC,EAErCC,OAFqC,EAGrC0B,WAHqC,KAIhB;;QAEf6P,iBAAiB,GAAG7P,WAAW,CAACzE,MAAZ,CAAmB,eAAnB,CAA1B;;MACI8C,EAAE,CAAC9C,MAAH,CAAU+E,IAAV,CAAgBC,CAAD,IAAgBA,CAAC,CAACf,EAAF,KAASqQ,iBAAiB,CAACrQ,EAA1D,CAAJ,EAAmE;UAC3DlB,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqByO,YAArB,CACJxR,OAAO,CAACzE,KAAR,CAAc;MAAEkW,KAAK,EAAE;KAAvB,CADI,CAAN;UAGMhQ,mBAAmB,CAAC1B,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAAzB;WACO,IAAP;;;SAGK,KAAP;CAfK;;ACCQ,SAASgQ,MAAT,CAAgBC,GAAhB,EAAwC;EACrDA,GAAG,CAACC,EAAJ,CACE,qBADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;UAC3CmQ,YAAY,GAAG9R,EAAE,CAACO,IAAH,CAAQD,GAAR,CAAYgD,UAAZ,CAAuB,WAAvB,CAArB;UAEMwC,OAAO,CAACoE,GAAR,CAAqB,CACzBuC,qBAAqB,CAACzM,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CADI,EAEzBkM,YAAY,CAAC7N,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAFa,EAGzBmQ,YAAY,GACRP,uBAAuB,CAACvR,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAAvB,CAAkDkI,IAAlD,CACE,MAAO5L,QAAP,IAA4C;UACtC,CAACA,QAAL,EAAe;cACPiS,kBAAkB,CAAClQ,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2B,KAA3B,EAAkC;UACxDyO,GAAG,EAAE,CAAC,aAAD;SADiB,CAAxB;;KAHN,CADQ,GAURF,kBAAkB,CAAClQ,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2B,KAA3B,EAAkC;MAClDyO,GAAG,EAAE,CAAC,aAAD,CAD6C;MAElDE,MAAM,EAAE,CAAC,UAAD,EAAa,kBAAb;KAFQ,CAbG,CAArB,CAAN;GAJ0B,CAFhC;;;ACHa,SAASyB,MAAT,CAAgBH,GAAhB,EAAwC;EACrDA,GAAG,CAACC,EAAJ,CACE,qBADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;UAC3CtB,IAAI,GAAGJ,OAAO,CAAC6H,OAAR,CAAgBC,UAA7B;;QAEI/H,EAAE,CAACmD,MAAP,EAAe;YACPc,UAAU,GACdjE,EAAE,CAACO,IAAH,CAAQF,IAAR,CAAac,EAAb,KAAoBd,IAAI,CAACc,EAAzB,IACA7B,SAAS,CAACU,EAAE,CAACuD,IAAJ,EAAU5B,WAAW,CAACzH,MAAZ,CAAmBQ,gBAA7B,CAFX;YAIMoL,OAAO,CAACoE,GAAR,CAAY,CAChBvI,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD,CADgB,EAEhBkC,UAAU,IAAIA,UAAU,CAAC7F,OAAX,CAAmBtD,gBAAjC,GACImF,OAAO,CAACE,MAAR,CAAe6R,GAAf,CACGC,SADH,CACahS,OAAO,CAACI,IAAR,CAAa;QAAEC,GAAG,EAAG,SAAQN,EAAE,CAACO,IAAH,CAAQD,GAAI;OAAzC,CADb,EAEG4R,KAFH,CAES,MAAM,EAFf,CADJ,GAIIpP,SANY,CAAZ,CAAN;KALF,MAaO;YACCgD,OAAO,CAACoE,GAAR,CAAY,CAChBvI,WAAW,CAACW,0BAAZ,CAAuCrC,OAAvC,EAAgDD,EAAE,CAAC+B,MAAnD,CADgB,EAEhBmO,kBAAkB,CAAClQ,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2B,KAA3B,EAAkC;QAClD2O,MAAM,EAAE,CAAC,aAAD;OADQ,CAFF,CAAZ,CAAN;;GAlBwB,CAFhC;;;ACFa,SAASyB,QAAT,CAAgBH,GAAhB,EAAwC;EACrDA,GAAG,CAACC,EAAJ,CACE,uBADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;UAC3CmE,OAAO,CAACoE,GAAR,CAAY,CAChBgG,kBAAkB,CAAClQ,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2B,KAA3B,EAAkC;MAClDyO,GAAG,EAAE,CAAC,aAAD;KADW,CADF,CAAZ,CAAN;GAF0B,CAFhC;;;ACDa,SAAS+B,eAAT,CAAyBP,GAAzB,EAAiD;EAC9DA,GAAG,CAACC,EAAJ,CACE,+BADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;UAC3CyQ,MAAM,GAAGnS,OAAO,CAAC6H,OAAR,CAAgBsK,MAA/B,CADiD;;QAI7CA,MAAM,CAACzF,IAAP,KAAgB,KAApB,EAA2B;UAErB0F,QAAQ,GAAIpS,OAAO,CAAC6H,OAAT,CAAyBwK,kBAA1C;UAEMxJ,aAAa,GAAGnH,WAAW,CAACgH,gBAAZ,CAA6B0J,QAAQ,CAACrO,KAAtC,CAAtB;;;QAII8E,aAAa,IAAInH,WAAW,CAACzH,MAAZ,CAAmBgD,MAAnB,CAA0BO,MAA1B,CAAiCqL,aAAjC,CAArB,EAAsE;YAC9D;QAAEnI,IAAI,EAAE4R;UAAY,MAAMtS,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBwP,WAArB,CAC9BvS,OAAO,CAACzE,KAAR,CAAc;QAAEiF,QAAQ,EAAE;OAA1B,CAD8B,CAAhC;YAGMgS,4BAA4B,GAAGF,OAAO,CAACnJ,IAAR,CAClC3L,MAAD,IACEkE,WAAW,CAACgH,gBAAZ,CAA6BlL,MAAM,CAACoJ,IAAP,CAAY7C,KAAzC,MACE8E,aADF,IAEArL,MAAM,CAAC8D,KAAP,KAAiB,iBAFjB;MAIA9D,MAAM,CAACoJ,IAAP,CAAY7C,KAAZ,KAAsBqO,QAAQ,CAACrO,KANE,CAArC;;UASI,CAACyO,4BAAL,EAAmC;cAC3BvC,kBAAkB,CAAClQ,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2BmH,aAA3B,EAA0C;UAChEsH,GAAG,EAAE,CAAC,aAAD,cAD2D;UAEhEE,MAAM,EAAE,CAAC,UAAD,EAAa,kBAAb;SAFc,CAAxB;;;;QAOA8B,MAAM,CAACpO,KAAP,KAAiBqO,QAAQ,CAACrO,KAA9B,EAAqC;;QAElBrC,WAAW,CAAC2H,KAA/B,EAAsC;MACpC3H,WAAW,CAAC2H,KAAZ,CAAkBzD,WAAlB,CACEwM,QAAQ,CAACrO,KADX,EAEG,UAASrC,WAAW,CAAC2H,KAAZ,CAAkB1D,OAAlB,CACRwM,MAAM,CAACpO,KADC,CAER,4BAA2BrC,WAAW,CAAC2H,KAAZ,CAAkBtD,MAAlB,CAC3BhG,EAD2B,EAE3BC,OAF2B,CAG3B,SAAQD,EAAE,CAAChF,KAAM,EAPrB;;GArCwB,CAFhC;;;ACDa,SAAS0X,oBAAT,CAA8Bd,GAA9B,EAAsD;EACnEA,GAAG,CAACC,EAAJ,CACE,qCADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;UAC3CyQ,MAAM,GAAGnS,OAAO,CAAC6H,OAAR,CAAgBsK,MAA/B;UACMC,QAAQ,GAAIpS,OAAO,CAAC6H,OAAT,CAAyBwK,kBAA1C;UAEMxJ,aAAa,GAAGnH,WAAW,CAACgH,gBAAZ,CAA6B0J,QAAQ,CAACrO,KAAtC,CAAtB;;QAEI8E,aAAa,IAAInH,WAAW,CAACzH,MAAZ,CAAmBgD,MAAnB,CAA0BO,MAA1B,CAAiCqL,aAAjC,CAArB,EAAsE;YAC9D6J,2BAA2B,GAAGhR,WAAW,CAACkH,gBAAZ,CAClCC,aADkC,EAElC9I,EAAE,CAAC+P,mBAF+B,EAGlC;QACE/G,qBAAqB,EAAE;OAJS,CAApC;YAQM;QAAErI,IAAI,EAAE4R;UAAY,MAAMtS,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBwP,WAArB,CAC9BvS,OAAO,CAACzE,KAAR,CAAc;QAAEiF,QAAQ,EAAE;OAA1B,CAD8B,CAAhC;YAIMgS,4BAA4B,GAAGF,OAAO,CAACnJ,IAAR,CAClC3L,MAAD,IACEkE,WAAW,CAACgH,gBAAZ,CAA6BlL,MAAM,CAACoJ,IAAP,CAAY7C,KAAzC,MACE8E,aADF,IACmBrL,MAAM,CAAC8D,KAAP,KAAiB,iBAHH,CAArC;YAMMqR,oBAAoB,GAAGL,OAAO,CAACnJ,IAAR,CAC1B3L,MAAD,IACEkE,WAAW,CAACgH,gBAAZ,CAA6BlL,MAAM,CAACoJ,IAAP,CAAY7C,KAAzC,MACE8E,aADF,IACmBrL,MAAM,CAAC8D,KAAP,KAAiB,UAHX,CAA7B;YAMMtD,QAAQ,GACZ,CAAC0U,2BAAD,IACA,CAACF,4BADD,IAEAG,oBAHF;YAIM1C,kBAAkB,CAAClQ,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2BmH,aAA3B,EAA0C;QAChEsH,GAAG,EAAE;QAEHqC,4BAA4B,IAAI,kBAF7B;QAIHxU,QAAQ,IAAI,UAJT,CAD2D;;QAQhEqS,MAAM,EAAE,CACNrS,QAAQ,IAAI,aADN,EAEN,CAAC0U,2BAAD,IACE,CAACF,4BADH,IAEE,WAJI;OARc,CAAxB;;;QAiBEL,MAAM,CAACpO,KAAP,KAAiBqO,QAAQ,CAACrO,KAA9B,EAAqC;;QAEjCrC,WAAW,CAAC2H,KAAhB,EAAuB;MACrB3H,WAAW,CAAC2H,KAAZ,CAAkBzD,WAAlB,CACEwM,QAAQ,CAACrO,KADX,EAEG,0BAAyBrC,WAAW,CAAC2H,KAAZ,CAAkB1D,OAAlB,CACxBwM,MAAM,CAACpO,KADiB,CAExB,2CAA0CrC,WAAW,CAAC2H,KAAZ,CAAkBtD,MAAlB,CAC1ChG,EAD0C,EAE1CC,OAF0C,CAG1C,EAPJ;;GAxDwB,CAFhC;;;ACAa,SAAS4S,eAAT,CAAyBjB,GAAzB,EAAiD;EAC9DA,GAAG,CAACC,EAAJ,CACE,+BADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;UAC3C;MAAEkF,IAAI,EAAEwL,QAAR;MAAkB9Q;QAAWtB,OAAO,CAAC6H,OAAT,CAAyBrK,MAA3D;QACIuC,EAAE,CAAC6G,IAAH,CAAQ7C,KAAR,KAAkBqO,QAAQ,CAACrO,KAA/B,EAAsC;UAEhC8E,aAAa,GAAGnH,WAAW,CAACgH,gBAAZ,CAA6B0J,QAAQ,CAACrO,KAAtC,CAAtB;QACIb,MAAJ;;QAEI2F,aAAa,IAAInH,WAAW,CAACzH,MAAZ,CAAmBgD,MAAnB,CAA0BO,MAA1B,CAAiCqL,aAAjC,CAArB,EAAsE;YAC9D6J,2BAA2B,GAAGhR,WAAW,CAACkH,gBAAZ,CAClCC,aADkC,EAElC9I,EAAE,CAAC+P,mBAF+B,EAGlC;QACE/G,qBAAqB,EAAE,IADzB;;;OAHkC,CAApC;YASM;QAAErI,IAAI,EAAE4R;UAAY,MAAMtS,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBwP,WAArB,CAC9BvS,OAAO,CAACzE,KAAR,CAAc;QAAEiF,QAAQ,EAAE;OAA1B,CAD8B,CAAhC;YAGMgS,4BAA4B,GAAGF,OAAO,CAACnJ,IAAR,CAClC3L,MAAD,IACEkE,WAAW,CAACgH,gBAAZ,CAA6BlL,MAAM,CAACoJ,IAAP,CAAY7C,KAAzC,MACE8E,aADF,IACmBrL,MAAM,CAAC8D,KAAP,KAAiB,iBAHH,CAArC;YAMMtD,QAAQ,GACZ,CAAC0U,2BAAD,IACA,CAACF,4BADD,IAEAlR,KAAK,KAAK,UAHZ;YAKMuR,SAAS,GAAG,MAAM5C,kBAAkB,CACxClQ,EADwC,EAExCC,OAFwC,EAGxC0B,WAHwC,EAIxCmH,aAJwC,EAKxC;QACEsH,GAAG,EAAE,CACHnS,QAAQ,IAAI,UADT,EAEHsD,KAAK,KAAK,mBAAV,IAAiC,kBAF9B,CADP;QAKE+O,MAAM,EAAE,CACNrS,QAAQ,IAAI,aADN,EAEN,EACE0U,2BAA2B,IAAIpR,KAAK,KAAK,mBAD3C,KAEK,WAJC,EAKNA,KAAK,KAAK,UAAV,IACE,CAACkR,4BADH,IAEE,kBAPI,EAQNlR,KAAK,KAAK,mBAAV,IAAiC,UAR3B;OAV8B,CAA1C;;UAuBItD,QAAQ,IAAI,CAACwU,4BAAjB,EAA+C;QAC7CtP,MAAM,GAAG,MAAMzB,mBAAmB,CAChC1B,EADgC,EAEhCC,OAFgC,EAGhC0B,WAHgC,EAIhCmR,SAJgC,CAAlC;;;;UASElN,OAAO,GAAGjE,WAAW,CAAC2H,KAAZ,CAAkB1D,OAAlB,CAA0ByM,QAAQ,CAACrO,KAAnC,CAAhB;UACM+O,KAAK,GAAGpR,WAAW,CAAC2H,KAAZ,CAAkBtD,MAAlB,CAAyBhG,EAAzB,EAA6BC,OAA7B,CAAd;;UAEMuE,OAAO,GAAG,CAAC,MAAM;UACjBjD,KAAK,KAAK,mBAAd,EAAmC;eACzB,OAAMqE,OAAQ,wBAAuBmN,KAAM,EAAnD;;;UAEExR,KAAK,KAAK,UAAd,EAA0B;eAChB,6BAA4BqE,OAAQ,aAAYmN,KAAM,GAC5D5P,MAAM,GAAG,0BAAH,GAAgC,EACvC,EAFD;;;aAIM,oBAAmByC,OAAQ,iBAAgBmN,KAAM,EAAzD;KATc,GAAhB;;IAYApR,WAAW,CAAC2H,KAAZ,CAAkBzD,WAAlB,CAA8B7F,EAAE,CAAC6G,IAAH,CAAQ7C,KAAtC,EAA6CQ,OAA7C;GAhF0B,CAFhC;;;ACFa,SAASwO,eAAT,CAAyBpB,GAAzB,EAAiD;EAC9DA,GAAG,CAACC,EAAJ,CACE,+BADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;UAC3CyQ,MAAM,GAAGnS,OAAO,CAAC6H,OAAR,CAAgBsK,MAA/B;UACMC,QAAQ,GAAIpS,OAAO,CAAC6H,OAAT,CAAyBrK,MAAzB,CAAgCoJ,IAAjD;UAEMiC,aAAa,GAAGnH,WAAW,CAACgH,gBAAZ,CAA6B0J,QAAQ,CAACrO,KAAtC,CAAtB;;QAEI8E,aAAa,IAAInH,WAAW,CAACzH,MAAZ,CAAmBgD,MAAnB,CAA0BO,MAA1B,CAAiCqL,aAAjC,CAArB,EAAsE;YAC9D;QAAEnI,IAAI,EAAE4R;UAAY,MAAMtS,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBwP,WAArB,CAC9BvS,OAAO,CAACzE,KAAR,CAAc;QAAEiF,QAAQ,EAAE;OAA1B,CAD8B,CAAhC;YAGMgS,4BAA4B,GAAGF,OAAO,CAACnJ,IAAR,CAClC3L,MAAD,IACEkE,WAAW,CAACgH,gBAAZ,CAA6BlL,MAAM,CAACoJ,IAAP,CAAY7C,KAAzC,MACE8E,aADF,IACmBrL,MAAM,CAAC8D,KAAP,KAAiB,iBAHH,CAArC;YAMM2O,kBAAkB,CAAClQ,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2BmH,aAA3B,EAA0C;QAChEsH,GAAG,EAAE,CAAC,aAAD,EAAgB,WAAhB,CAD2D;QAEhEE,MAAM,EAAE,CACN,CAACmC,4BAAD,IAAiC,kBAD3B,EAEN,UAFM;OAFc,CAAxB;;;QASE9Q,WAAW,CAAC2H,KAAhB,EAAuB;UACjB8I,MAAM,CAACpO,KAAP,KAAiBqO,QAAQ,CAACrO,KAA9B,EAAqC;QACnCrC,WAAW,CAAC2H,KAAZ,CAAkBzD,WAAlB,CACE7F,EAAE,CAAC6G,IAAH,CAAQ7C,KADV,EAEG,WAAUrC,WAAW,CAAC2H,KAAZ,CAAkB1D,OAAlB,CACTyM,QAAQ,CAACrO,KADA,CAET,4BAA2BrC,WAAW,CAAC2H,KAAZ,CAAkBtD,MAAlB,CAC3BhG,EAD2B,EAE3BC,OAF2B,CAG3B,EAPJ;OADF,MAUO;QACL0B,WAAW,CAAC2H,KAAZ,CAAkBzD,WAAlB,CACEwM,QAAQ,CAACrO,KADX,EAEG,WAAUrC,WAAW,CAAC2H,KAAZ,CAAkB1D,OAAlB,CACTwM,MAAM,CAACpO,KADE,CAET,6BAA4BrC,WAAW,CAAC2H,KAAZ,CAAkBtD,MAAlB,CAC5BhG,EAD4B,EAE5BC,OAF4B,CAG5B,EAPJ;;;GAtCsB,CAFhC;;;ACCa,SAASgT,WAAT,CAAqBrB,GAArB,EAA6C;EAC1DA,GAAG,CAACC,EAAJ,CACE,0BADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;;;UAI3CmE,OAAO,CAACoE,GAAR,CAAY,CAChB2D,YAAY,CAAC7N,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CADI;IAGhBmO,2BAA2B,CAAC9P,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAHX;IAKhBD,mBAAmB,CAAC1B,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CALH,CAAZ,CAAN;GAL0B,CAFhC;;;ACFa,SAASuR,MAAT,CAAgBtB,GAAhB,EAAwC;EACrDA,GAAG,CAACC,EAAJ,CACE,qBADF,EAEExF,8BAA8B,CAC5B,OAAOrM,EAAP,EAAWC,OAAX,EAAoB0B,WAApB,KAAmD;UAC3CyQ,MAAM,GAAGnS,OAAO,CAAC6H,OAAR,CAAgBsK,MAA/B;;QAEEA,MAAM,CAACzF,IAAP,KAAgB,KAAhB,IACAyF,MAAM,CAACpO,KAAP,KAAkB,GAAE5J,OAAO,CAACC,GAAR,CAAYuN,eAAgB,OAFlD,EAGE;;;;UAII;MAAEkG;QAAkB,MAAMD,YAAY,CAAC7N,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAA5C;QACI,CAACmM,aAAL,EAAoB,MAAMpM,mBAAmB,CAAC1B,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAAzB;GAXM,CAFhC;;;ACCK,MAAMwR,YAAY,GAAG,OAG1BnT,EAH0B,EAI1BC,OAJ0B,EAK1B0B,WAL0B,EAM1B8L,aAN0B,KAOR;QACZ2F,MAAM,GAAGpT,EAAE,CAACuD,IAAlB;QACM;IAAEA;MAASiK,UAAU,CACzB4F,MADyB,EAEzBzR,WAAW,CAACzH,MAAZ,CAAmBQ,gBAFM,EAGzBoI,SAHyB,EAIzB2K,aAJyB,CAA3B;;MAOIlK,IAAI,KAAK6P,MAAb,EAAqB;UACbnT,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqBY,MAArB,CAA4B3D,OAAO,CAACzE,KAAR,CAAc;MAAE+H;KAAhB,CAA5B,CAAN;;CAjBG;;ACAQ,SAAS8P,aAAT,CAAuBzB,GAAvB,EAA+C;EAC5DA,GAAG,CAACC,EAAJ,CACE,CAAC,sBAAD,EAAyB,wBAAzB,CADF,EAEE,MAAO5R,OAAP,IAAgE;UACxDmS,MAAM,GAAGnS,OAAO,CAAC6H,OAAR,CAAgBsK,MAA/B;UACMN,YAAY,GAChBM,MAAM,CAACzF,IAAP,KAAgB,KAAhB,IAAyByF,MAAM,CAACpO,KAAP,KAAiB,eAD5C;IAEA/D,OAAO,CAAC6H,OAAR,CAAgBsE,YAAhB,CAA6B7L,IAA7B,CAAkCD,GAAlC,CAAsCgD,UAAtC,CAAiD,WAAjD;;QAEI8O,MAAM,CAACzF,IAAP,KAAgB,KAAhB,IAAyB,CAACmF,YAA9B,EAA4C;;;;UAItC3F,wBAAwB,CAAClM,OAAD,EAAU,OAAOD,EAAP,EAAW2B,WAAX,KAA2B;YAC3DhD,KAAK,GAAIsB,OAAO,CAAC6H,OAAT,CAAyBnJ,KAAvC;;UACImT,YAAJ,EAAkB;cACVN,iBAAiB,GAAG7P,WAAW,CAACzE,MAAZ,CAAmB,eAAnB,CAA1B;cACM2E,cAAc,GAAGF,WAAW,CAACzE,MAAZ,CAAmB,iBAAnB,CAAvB;cACMoW,oBAAoB,GAAG3R,WAAW,CAACzE,MAAZ,CAAmB,eAAnB,CAA7B;;YACI+C,OAAO,CAAC6H,OAAR,CAAgByL,MAAhB,KAA2B,SAA/B,EAA0C;cACpC/B,iBAAiB,IAAI7S,KAAK,CAACwC,EAAN,KAAaqQ,iBAAiB,CAACrQ,EAAxD,EAA4D;;;;;kBAKpDlB,OAAO,CAACE,MAAR,CAAe6C,KAAf,CAAqByO,YAArB,CACJxR,OAAO,CAACzE,KAAR,CAAc;cAAEkW,KAAK,EAAE;aAAvB,CADI,CAAN;;gBAGI4B,oBAAJ,EAA0B;oBAClBrT,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB8L,SAAtB,CACJxP,OAAO,CAACzE,KAAR,CAAc;gBAAE0B,MAAM,EAAE,CAACoW,oBAAoB,CAAC/V,IAAtB;eAAxB,CADI,CAAN;;;kBAIIuS,2BAA2B,CAAC9P,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAAjC;kBACMwR,YAAY,CAACnT,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2B;cAC3C/G,mBAAmB,EAAE,IADsB;;cAG3CC,SAAS,EACPgH,cAAc,IACd7B,EAAE,CAAC9C,MAAH,CAAU+E,IAAV,CAAgBC,CAAD,IAAgBA,CAAC,CAACf,EAAF,KAASU,cAAc,CAACV,EAAvD,CADA,GAEI,IAFJ,GAGIQ,WAAW,CAACzH,MAAZ,CAAmBQ,gBAAnB,CAAoCG;aAP1B,CAAlB,CAd0D;WAA5D,MAwBO,IAAIgH,cAAc,IAAIlD,KAAK,CAACwC,EAAN,KAAaU,cAAc,CAACV,EAAlD,EAAsD;kBACrDgS,YAAY,CAACnT,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2B;cAC3C9G,SAAS,EAAE,IADgC;;;cAI3CD,mBAAmB,EACjB4W,iBAAiB,IACjBxR,EAAE,CAAC9C,MAAH,CAAU+E,IAAV,CAAgBC,CAAD,IAAgBA,CAAC,CAACf,EAAF,KAASqQ,iBAAiB,CAACrQ,EAA1D,CADA,GAEI,IAFJ,GAGIQ,WAAW,CAACzH,MAAZ,CAAmBQ,gBAAnB,CAAoCE;aAR1B,CAAlB;;;gBAWI8G,mBAAmB,CAAC1B,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAAzB;;;;;;UAKAA,WAAW,CAAC8I,iBAAZ,CAA8BjH,QAA9B,CAAuC7E,KAAK,CAACwC,EAA7C,CAAJ,EAAsD;YAChDlB,OAAO,CAAC6H,OAAR,CAAgByL,MAAhB,KAA2B,SAA/B,EAA0C;gBAClCtT,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB6L,WAAtB,CACJvP,OAAO,CAACzE,KAAR,CAAc;YAAE+B,IAAI,EAAEoB,KAAK,CAACpB;WAA5B,CADI,CAAN;SADF,MAIO;gBACC0C,OAAO,CAACE,MAAR,CAAewD,MAAf,CAAsB8L,SAAtB,CACJxP,OAAO,CAACzE,KAAR,CAAc;YAAE0B,MAAM,EAAE,CAACyB,KAAK,CAACpB,IAAP;WAAxB,CADI,CAAN;;;;;;YAOEuS,2BAA2B,CAAC9P,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAAjC;YAEMiN,kBAAkB,GAAGjN,WAAW,CAACzE,MAAZ,CAAmB,gBAAnB,CAA3B;YACM2R,cAAc,GAAGlN,WAAW,CAACzE,MAAZ,CAAmB,iBAAnB,CAAvB;YACM4R,WAAW,GAAGnN,WAAW,CAACzE,MAAZ,CAAmB,eAAnB,CAApB;;YAEMqB,MAAM,GAAG,CAAC,MAAM;YAChBqQ,kBAAkB,IAAIjQ,KAAK,CAACwC,EAAN,KAAa0N,cAAc,CAAC1N,EAAtD,EACE,OAAO,eAAP;YACE0N,cAAc,IAAIlQ,KAAK,CAACwC,EAAN,KAAa0N,cAAc,CAAC1N,EAAlD,EACE,OAAO,WAAP;YACE2N,WAAW,IAAInQ,KAAK,CAACwC,EAAN,KAAa2N,WAAW,CAAC3N,EAA5C,EACE,OAAO,qBAAP;eACK,IAAP;OAPa,GAAf;;UAUI5C,MAAJ,EAAY;cACJ4U,YAAY,CAACnT,EAAD,EAAKC,OAAL,EAAc0B,WAAd,EAA2B;WAC1CpD,MAAD,GAAU0B,OAAO,CAAC6H,OAAR,CAAgByL,MAAhB,KAA2B;SADrB,CAAlB;OADF,MAIO,IAAItT,OAAO,CAAC6H,OAAR,CAAgByL,MAAhB,KAA2B,SAA/B,EAA0C;YAE7C5R,WAAW,CAACzE,MAAZ,CAAmB,iBAAnB,KACAyB,KAAK,CAACwC,EAAN,KAAaQ,WAAW,CAACzE,MAAZ,CAAmB,iBAAnB,EAAsCiE,EAFrD,EAGE;gBACMO,mBAAmB,CAAC1B,EAAD,EAAKC,OAAL,EAAc0B,WAAd,CAAzB;;;KAtFwB,CAA9B;GAZJ;;;ACJa,SAAS6R,iBAAT,CAA2B5B,GAA3B,EAAmD;EAChEA,GAAG,CAACC,EAAJ,CACE,qBADF,EAEEvF,+BAA+B,CAC5BrM,OAAD,IAAaA,OAAO,CAAC6H,OAAR,CAAgB2L,SAAhB,CAA0BC,aADV,EAE7B,OAAOzT,OAAP,EAAgB0B,WAAhB,KAAgC;UACxBmE,OAAO,CAACoE,GAAR,CACJjK,OAAO,CAAC6H,OAAR,CAAgB2L,SAAhB,CAA0BC,aAA1B,CAAwCpV,GAAxC,CAA6C0B,EAAD,IAC1CC,OAAO,CAACE,MAAR,CAAe6C,KAAf,CACGC,GADH,CAEIhD,OAAO,CAACI,IAAR,CAAa;MACX0B,MAAM,EAAE/B,EAAE,CAAC+B;KADb,CAFJ,EAMG8H,IANH,CAMS9G,QAAD,IAAc;aACXrB,mBAAmB,CAACqB,QAAQ,CAACpC,IAAV,EAAgBV,OAAhB,EAAyB0B,WAAzB,CAA1B;KAPJ,CADF,CADI,CAAN;GAH2B,CAFjC;;;ACDa,SAASgS,mBAAT,CAA6B/B,GAA7B,EAAqD;EAClEA,GAAG,CAACC,EAAJ,CACE,uBADF,EAEEvF,+BAA+B,CAC5BrM,OAAD,IAAaA,OAAO,CAAC6H,OAAR,CAAgB8L,WAAhB,CAA4BF,aADZ,EAE7B,OAAOzT,OAAP,EAAgB0B,WAAhB,KAAgC;UACxBmE,OAAO,CAACoE,GAAR,CACJjK,OAAO,CAAC6H,OAAR,CAAgB8L,WAAhB,CAA4BF,aAA5B,CAA0CpV,GAA1C,CAA+C0B,EAAD,IAC5CC,OAAO,CAACE,MAAR,CAAe6C,KAAf,CACGC,GADH,CAEIhD,OAAO,CAACI,IAAR,CAAa;MACX0B,MAAM,EAAE/B,EAAE,CAAC+B;KADb,CAFJ,EAMG8H,IANH,CAMS9G,QAAD,IAAc;aACXrB,mBAAmB,CAACqB,QAAQ,CAACpC,IAAV,EAAgBV,OAAhB,EAAyB0B,WAAzB,CAA1B;KAPJ,CADF,CADI,CAAN;GAH2B,CAFjC;;;ACAF,MAAMkS,YAAY,GAAG,CACnB5T,OADmB,EAEnBwC,QAFmB,KAGP;MACR,CAACA,QAAL,EAAe,OAAO,KAAP;SACR,CAAC,CAACxC,OAAO,CAAC6H,OAAR,CAAgBgM,QAAhB,CAAyB7R,IAAzB,CAA+B8R,CAAD,IAAOA,CAAC,CAACxW,IAAF,KAAWkF,QAAQ,CAACT,MAAzD,CAAT;CALF;;AAQA,AAAe,SAAS3G,MAAT,CAAgBuW,GAAhB,EAAwC;EACrDA,GAAG,CAACC,EAAJ,CACE,QADF,EAEEvF,+BAA+B,CAC7B,CAACrM,OAAD,EAAU0B,WAAV,KAA2C;UACnCc,QAAQ,GAAGd,WAAW,CAACe,gBAAZ,EAAjB;QACI,CAACD,QAAL,EAAe,OAAO,EAAP;;QAEXoR,YAAY,CAAC5T,OAAD,EAAUwC,QAAV,CAAhB,EAAqC;aAC5B,CAACA,QAAD,CAAP;;;WAGK,EAAP;GAT2B,EAW7B,CAACxC,OAAD,EAAU0B,WAAV,KAAgC;UACxBc,QAAQ,GAAGd,WAAW,CAACe,gBAAZ,EAAjB,CAD8B;;QAG1BmR,YAAY,CAAC5T,OAAD,EAAUwC,QAAV,CAAhB,EAAqC;MACnCd,WAAW,CAAC0B,UAAZ,CAAuBpD,OAAvB,EAAgCwC,QAAhC;;GAfyB,CAFjC;;;ACdF;AACA,AAGA;;;;;;;AAYA,IAAI,CAACrI,OAAO,CAACC,GAAR,CAAY2Z,QAAjB,EAA2B;QACnB,IAAI1I,KAAJ,CAAU,oCAAV,CAAN;;;AAGF,AAAe,SAAS2I,IAAT,GAA6B;QACpC/Z,MAAM,GAAG,IAAImN,GAAJ,CAAQ,CACrB,CAAC,MAAD,EAASjN,OAAO,CAACC,GAAR,CAAY6Z,UAAZ,IAA0B,WAAnC,CADqB,EAErB,CAAC,MAAD,EAAS9Z,OAAO,CAACC,GAAR,CAAY8Z,UAAZ,IAA0B,OAAnC,CAFqB,EAGrB,CAAC,UAAD,EAAa/Z,OAAO,CAACC,GAAR,CAAY2Z,QAAzB,CAHqB,CAAR,CAAf;;MAKI5Z,OAAO,CAACC,GAAR,CAAY+Z,UAAhB,EAA4B;IAC1Bla,MAAM,CAACkO,GAAP,CAAW,MAAX,EAAmBhO,OAAO,CAACC,GAAR,CAAY+Z,UAA/B;IACAla,MAAM,CAACkO,GAAP,CAAW,UAAX,EAAuBhO,OAAO,CAACC,GAAR,CAAYga,cAAnC;;;QAEIC,UAAU,GAAG,IAAIC,yBAAJ,CAAoBra,MAApB,CAAnB,CAV0C;;;;;;SAkBnC;IAAEoa;GAAT;;;AC9Ba,SAASE,MAAT,CAAgB;EAC7BC,IAAI,GAAG,IADsB;EAE7BzZ,KAAK,GAAGZ,OAAO,CAACC,GAAR,CAAYqa,IAFS;EAG7BC;CAHa,EAIC;SAEZ;IAAM,IAAI,EAAEF;KACV,kCACE;IAAM,OAAO,EAAC;IADhB,EAEE;IAAM,IAAI,EAAC,QAAX;IAAoB,OAAO,EAAC;IAF9B,EAGE,mCAAQzZ,KAAR,CAHF,EAIE;IACE,GAAG,EAAC,YADN;IAEE,IAAI,EAAC,UAFP;IAGE,IAAI,EAAC;IAPT,EASE,mCAAS;yFAAT,CATF,CADF,EAaE,kCAAO2Z,QAAP,CAbF,CADF;;;ACXF,IAAI,CAACva,OAAO,CAACC,GAAR,CAAYua,gBAAjB,EAAmC;QAC3B,IAAItJ,KAAJ,CAAU,wCAAV,CAAN;;;AAGF,IAAI,CAAClR,OAAO,CAACC,GAAR,CAAYwa,oBAAjB,EAAuC;QAC/B,IAAIvJ,KAAJ,CAAU,4CAAV,CAAN;;;AAGF,AAAO,MAAMwJ,MAAM,GAAG7K,mBAAM,CAAC;EAC3B8K,MAAM,EAAE;IACN5T,EAAE,EAAE/G,OAAO,CAACC,GAAR,CAAYua,gBADV;IAENI,MAAM,EAAE5a,OAAO,CAACC,GAAR,CAAYwa;GAHK;EAK3BI,IAAI,EAAE;IACJC,SAAS,EAAE,oBADP;IAEJC,SAAS,EAAE,2BAFP;IAGJC,aAAa,EAAE;;CARS,CAArB;;ACPP,MAAMC,sBAAsB,GAAGC,cAAS,CAACC,kBAAD,CAAxC;AAEA,AAKO,eAAeC,SAAf,CAAyBtE,IAAzB,EAAwD;QACvDuE,MAAM,GAAG,MAAMJ,sBAAsB,CAACnE,IAAD,CAA3C;SACOuE,MAAM,CAACC,QAAP,CAAgB,KAAhB,CAAP;;;ACZF;AAEA;AAaA,IAAI,CAACtb,OAAO,CAACC,GAAR,CAAYsb,eAAjB,EAAkC;QAC1B,IAAIrK,KAAJ,CAAU,uCAAV,CAAN;;;AAGF,MAAMqK,eAAuB,GAAGvb,OAAO,CAACC,GAAR,CAAYsb,eAA5C;AAEA,MAAMC,eAAoB,GAAGN,cAAS,CAACO,iBAAD,CAAtC;AACA,MAAMC,iBAAsB,GAAGR,cAAS,CAACS,mBAAD,CAAxC;AAEA,MAAMC,MAAM,GACV,CAAC,CAAC5b,OAAO,CAACC,GAAR,CAAY4b,aAAd,IAA+B7b,OAAO,CAACC,GAAR,CAAY4b,aAAZ,KAA8B,OAD/D;;AAGA,MAAMC,iBAAiB,GAAG,CAACC,GAAD,EAAeC,QAAf,KAAoC;QACtDC,IAAI,GAAI,OAAML,MAAM,GAAG,GAAH,GAAS,EAAG,MAAKG,GAAG,CAACG,QAAS,GACtDH,GAAG,CAACG,QAAJ,KAAiB,WAAjB,GAAgC,IAAGlc,OAAO,CAACC,GAAR,CAAYkc,IAAK,EAApD,GAAwD,EACzD,EAFD;SAGQ,GAAEF,IAAK,IAAGD,QAAS,iBAA3B;CAJF;;AAaA,MAAMI,cAAc,GAAG,CACrBL,GADqB,EAErBC,QAFqB,KAGyB;QACxCK,MAAM,GAAGN,GAAG,CAACO,OAAJ,CAAa,QAAON,QAAS,EAA7B,CAAf;MACI,CAACK,MAAL,EAAa;SAENX,iBAAiB,CAACW,MAAD,EAASd,eAAT,EAA0B;IAChDgB,SAAS,EAAE,OADqC;IAEhDC,QAAQ,EAAET,GAAG,CAACU,OAAJ,CAAY,YAAZ;GAFY,CAAxB;CAPF;;AAaA,AAAe,eAAeC,SAAf,CACblF,GADa,EAGE;QACTmF,MAAM,GAAGnF,GAAG,CAACoF,KAAJ,CAAU,MAAV,CAAf;QACMC,GAAG,GAAG,MAAMrF,GAAG,CAACqD,IAAJ,EAAlB;EACA8B,MAAM,CAACG,GAAP,CAAWC,YAAY,EAAvB;EAEAJ,MAAM,CAAC9T,GAAP,CAAW,GAAX,EAAgB,CAACkT,GAAD,EAAMiB,GAAN,KAAc;IAC5BA,GAAG,CAACC,QAAJ,CAAa,KAAb;GADF;EAIAN,MAAM,CAAC9T,GAAP,CAAW,KAAX,EAAkB,OAAOkT,GAAP,EAAYiB,GAAZ,KAAoB;UAE9BE,QAAQ,GAAG,MAAMd,cAAc,CAACL,GAAD,OAArC;;QACI,CAACmB,QAAL,EAAe;aACNF,GAAG,CAACC,QAAJ,CAAa,WAAb,CAAP;;;UAGIE,OAAO,GAAG,IAAIC,OAAJ,CAAY;MAAEvC,IAAI,EAAG,SAAQqC,QAAQ,CAACG,WAAY;KAAlD,CAAhB;UACM;MAAE9W;QAAS,MAAM4W,OAAO,CAAClW,KAAR,CAAc/D,IAAd,CAAmB;MAAEmD,QAAQ,EAAE;KAA/B,CAAvB;IAEA2W,GAAG,CAACM,IAAJ,CACEC,2BAAoB,CAClB,oBAAC,MAAD,QACE,iCACE,oDADF,EAEE,gCACGhX,IAAI,CAACrC,GAAL,CAAU+B,IAAD,IACR;MAAI,GAAG,EAAEA,IAAI,CAACc;OACZ;MAAG,IAAI,EAAG,kBAAiBd,IAAI,CAAC0D,KAAL,CAAWC,KAAM,IAAG3D,IAAI,CAAC9C,IAAK;OACtD8C,IAAI,CAAC9C,IADR,CADF,CADD,CADH,CAFF,CADF,EAaGoD,IAAI,CAACK,MAAL,KAAgB,GAAhB,IACC,iFAdJ,CADkB,CADtB;GAVF;EAiCA+V,MAAM,CAAC9T,GAAP,CAAW,WAAX,EAAwB,OAAOkT,GAAP,EAAqBiB,GAArB,KAAuC;QAEzD,MAAMZ,cAAc,CAACL,GAAD,OAAxB,EAAyC;aAChCiB,GAAG,CAACC,QAAJ,CAAa,KAAb,CAAP;;;UAGI9V,KAAK,GAAG,MAAMiU,SAAS,CAAC,CAAD,CAA7B;IACA4B,GAAG,CAACX,MAAJ,CAAY,QAAD,IAAiB,IAAGlV,KAAM,EAArC,QAAkD;MAChDqW,MAAM,QAD0C;MAEhDC,QAAQ,EAAE,IAFsC;MAGhD7B;KAHF;UAMM8B,WAAW,GAAGC,MAAA,CAAkBC,iBAAlB,CAAoCC,YAApC,CAAiD;MACnEC,YAAY,EAAEhC,iBAAiB,CAACC,GAAD,OADoC;MAEnEgC,KAAK,EAAE,gBAF4D;MAGnE5W,KAHmE;;;;;KAAjD,CAApB,CAb6D;;IAyB7D6V,GAAG,CAACC,QAAJ,CAAaS,WAAb;GAzBF;EA4BAf,MAAM,CAAC9T,GAAP,CAAW,oBAAX,EAAiC,OAAOkT,GAAP,EAAYiB,GAAZ,KAAoB;QAC/CjB,GAAG,CAACiC,KAAJ,CAAUld,KAAd,EAAqB;MACnBkc,GAAG,CAACM,IAAJ,CAASvB,GAAG,CAACiC,KAAJ,CAAUC,iBAAnB;;;;UAKIC,IAAI,GAAGnC,GAAG,CAACiC,KAAJ,CAAUE,IAAvB;UACM/W,KAAK,GAAG4U,GAAG,CAACiC,KAAJ,CAAU7W,KAAxB;UACMgX,UAAU,GAAI,QAAD,IAAiB,IAAGhX,KAAM,EAA7C;UACMkV,MAAM,GAAGN,GAAG,CAACO,OAAJ,IAAeP,GAAG,CAACO,OAAJ,CAAY6B,UAAZ,CAA9B;;QACI,CAAC9B,MAAL,EAAa;;MAEXW,GAAG,CAACM,IAAJ,CACE,qFADF;;;;IAKFN,GAAG,CAACoB,WAAJ,CAAgBD,UAAhB;UAEMpT,MAAM,GAAG,MAAM4S,MAAA,CAAkBC,iBAAlB,CAAoCS,QAApC,CAA6C;MAChEH,IADgE;MAEhEJ,YAAY,EAAEhC,iBAAiB,CAACC,GAAD;KAFZ,CAArB;;QAKI,CAAChR,MAAL,EAAa;;MAEXiS,GAAG,CAACM,IAAJ,CACEC,2BAAoB,CAClB,oBAAC,MAAD,QACE,iEAC8B;QAAG,IAAI,EAAC;mBADtC,CADF,CADkB,CADtB;;;;UAYIF,WAAW,GAAGtS,MAAM,CAACuT,YAA3B;UACMnB,OAAO,GAAG,IAAIC,OAAJ,CAAY;MAAEvC,IAAI,EAAG,SAAQwC,WAAY;KAAzC,CAAhB;UACM5Q,IAAI,GAAG,MAAM0Q,OAAO,CAAChR,KAAR,CAAcoS,gBAAd,CAA+B,EAA/B,CAAnB;UACM3U,KAAK,GAAG6C,IAAI,CAAClG,IAAL,CAAUqD,KAAxB;UAEM4U,KAAK,GAAG,MAAMhD,eAAe,CACjC;MAAE5R,KAAF;MAASyT,WAAT;MAAsBoB,IAAI,EAAE1K,IAAI,CAAC2K,GAAL;KADK,EAEjCnD,eAFiC,EAGjC;MACEgB,SAAS,EAAE,OADb;MAEEC,QAAQ,EAAET,GAAG,CAACU,OAAJ,CAAY,YAAZ,CAFZ;MAGEkC,SAAS,EAAE;KANoB,CAAnC;IAUA3B,GAAG,CAACX,MAAJ,CAAY,QAAD,IAAiB,EAA5B,EAA+BmC,KAA/B,EAAsC;MACpCf,QAAQ,EAAE,IAD0B;MAEpC7B;KAFF;IAKAoB,GAAG,CAACC,QAAJ,CAAa,KAAb;GA3DF;EA8DAN,MAAM,CAAC9T,GAAP,CAAW,mCAAX,EAAgD,OAAOkT,GAAP,EAAYiB,GAAZ,KAAoB;UAE5DE,QAAQ,GAAG,MAAMd,cAAc,CAACL,GAAD,OAArC;;QACI,CAACmB,QAAL,EAAe;aACNF,GAAG,CAACC,QAAJ,CAAa,WAAb,CAAP;;;UAGIE,OAAO,GAAG,IAAIC,OAAJ,CAAY;MAAEvC,IAAI,EAAG,SAAQqC,QAAQ,CAACG,WAAY;KAAlD,CAAhB;UACM;MAAE9W;QAAS,MAAM4W,OAAO,CAAClW,KAAR,CAAc4B,GAAd,CAAkB;MACvCc,KAAK,EAAEoS,GAAG,CAAC6C,MAAJ,CAAWjV,KADqB;MAEvC1D,IAAI,EAAE8V,GAAG,CAAC6C,MAAJ,CAAWjR;KAFI,CAAvB;;QAKI,CAACpH,IAAL,EAAW;aACFyW,GAAG,CAAC/b,MAAJ,CAAW,GAAX,EAAgBqc,IAAhB,CACLC,2BAAoB,CAClB,oBAAC,MAAD,QACE,kDADF,CADkB,CADf,CAAP;;;QASE,CAAChX,IAAI,CAACsY,WAAL,CAAiBC,KAAtB,EAA6B;aACpB9B,GAAG,CAAC/b,MAAJ,CAAW,GAAX,EAAgBqc,IAAhB,CACLC,2BAAoB,CAClB,oBAAC,MAAD,QACE,sGADF,CADkB,CADf,CAAP;;;UAWI;MAAEhX,IAAI,EAAEwY;QAAU,MAAMlC,GAAG,CAACmC,IAAJ,CAC3BC,mBAD2B,CACP;MACnBtV,KAAK,EAAEoS,GAAG,CAAC6C,MAAJ,CAAWjV,KADC;MAEnB1D,IAAI,EAAE8V,GAAG,CAAC6C,MAAJ,CAAWjR;KAHS,EAK3BmK,KAL2B,CAKpB3N,GAAD,IAAS;aACP;QAAElJ,MAAM,EAAEkJ,GAAG,CAAClJ,MAAd;QAAsBsF,IAAI,EAAEmC;OAAnC;KAN0B,CAA9B;;QASI,CAACqW,KAAL,EAAY;aACH/B,GAAG,CAACM,IAAJ,CACLC,2BAAoB,CAClB,oBAAC,MAAD,QACE,iCACGvd,OAAO,CAACC,GAAR,CAAYuN,eADf,OACiC,OADjC,oCAEK,GAFL,EAGE;QACE,IAAI,EAAG,2BACLxN,OAAO,CAACC,GAAR,CAAYuN,eACb;gCANL,EASO,GATP,eADF,CADkB,CADf,CAAP;;;IAoBFwP,GAAG,CAACM,IAAJ,CACEC,2BAAoB,CAClB,oBAAC,MAAD,QACE,iCACE,gCAAKxB,GAAG,CAAC6C,MAAJ,CAAWjR,UAAhB,CADF,CADF,CADkB,CADtB;GAjEF;;;AC1KF,IAAI,CAAC3N,OAAO,CAACC,GAAR,CAAYuN,eAAjB,EAAkCxN,OAAO,CAACC,GAAR,CAAYuN,eAAZ,GAA8B,YAA9B;AAClCb,OAAO,CAAC9F,GAAR,CAAY;EAAE1D,IAAI,EAAEnD,OAAO,CAACC,GAAR,CAAYuN;CAAhC;;;;;;;AAWA0R,aAAM,CAACC,GAAP,CAAY3H,GAAD,IAAsB;QACzB4H,WAAW,GAAGC,IAAS,EAA7B;EACA3C,SAAS,CAAClF,GAAD,EAAM4H,WAAN,CAAT;EAEAE,MAAa,CAAC9H,GAAD,CAAb;EACA+H,MAAa,CAAC/H,GAAD,CAAb;EACAgI,QAAe,CAAChI,GAAD,CAAf;EACAiI,eAAsB,CAACjI,GAAD,CAAtB;EACAkI,oBAA2B,CAAClI,GAAD,CAA3B,CAR+B;;;;;EAkB/BmI,eAAsB,CAACnI,GAAD,CAAtB;EACAoI,eAAsB,CAACpI,GAAD,CAAtB;EACAyB,aAAa,CAACzB,GAAD,CAAb;EACAqI,WAAkB,CAACrI,GAAD,CAAlB;EACAsI,MAAa,CAACtI,GAAD,CAAb;EAEA4B,iBAAiB,CAAC5B,GAAD,CAAjB;EACA+B,mBAAmB,CAAC/B,GAAD,CAAnB;EACAvW,MAAM,CAACuW,GAAD,CAAN;CA1BF"}